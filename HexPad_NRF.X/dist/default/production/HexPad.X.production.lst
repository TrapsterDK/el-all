

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Apr 11 13:24:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F684
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 04/07/2022 GMT
    15                           ; 
    16                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F684 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0007                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001E                     	;# 
    74     001F                     	;# 
    75     0081                     	;# 
    76     0085                     	;# 
    77     0087                     	;# 
    78     008C                     	;# 
    79     008E                     	;# 
    80     008F                     	;# 
    81     0090                     	;# 
    82     0091                     	;# 
    83     0092                     	;# 
    84     0095                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0096                     	;# 
    88     0099                     	;# 
    89     009A                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009C                     	;# 
    93     009D                     	;# 
    94     009E                     	;# 
    95     009F                     	;# 
    96     0000                     	;# 
    97     0001                     	;# 
    98     0002                     	;# 
    99     0003                     	;# 
   100     0004                     	;# 
   101     0005                     	;# 
   102     0007                     	;# 
   103     000A                     	;# 
   104     000B                     	;# 
   105     000C                     	;# 
   106     000E                     	;# 
   107     000E                     	;# 
   108     000F                     	;# 
   109     0010                     	;# 
   110     0011                     	;# 
   111     0012                     	;# 
   112     0013                     	;# 
   113     0013                     	;# 
   114     0014                     	;# 
   115     0015                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0087                     	;# 
   126     008C                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0095                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0096                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144                           
   145                           	psect	idataBANK0
   146     0723                     __pidataBANK0:
   147                           
   148                           ;initializer for _hexkeys
   149     0723  3401               	retlw	1
   150     0724  3402               	retlw	2
   151     0725  3403               	retlw	3
   152     0726  3404               	retlw	4
   153     0727  3405               	retlw	5
   154     0728  3406               	retlw	6
   155     0729  3407               	retlw	7
   156     072A  3408               	retlw	8
   157     072B  3409               	retlw	9
   158     072C  340A               	retlw	10
   159     072D  3400               	retlw	0
   160     072E  340B               	retlw	11
   161     0019                     _CMCON0bits	set	25
   162     0028                     _RA0	set	40
   163     0029                     _RA1	set	41
   164     002A                     _RA2	set	42
   165     002D                     _RA5	set	45
   166     003D                     _RC5	set	61
   167     003C                     _RC4	set	60
   168     003B                     _RC3	set	59
   169     0038                     _RC0	set	56
   170     0039                     _RC1	set	57
   171     003A                     _RC2	set	58
   172     002C                     _RA4	set	44
   173     0085                     _TRISA	set	133
   174     0087                     _TRISC	set	135
   175     0091                     _ANSEL	set	145
   176                           
   177                           	psect	cinit
   178     07E6                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07E6                     __initialization:
   182                           
   183                           ; Initialize objects allocated to BANK0
   184     07E6  2723               	fcall	__pidataBANK0	;fetch initializer
   185     07E7  00A0               	movwf	__pdataBANK0& (0+127)
   186     07E8  2724               	fcall	__pidataBANK0+1	;fetch initializer
   187     07E9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   188     07EA  2725               	fcall	__pidataBANK0+2	;fetch initializer
   189     07EB  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   190     07EC  2726               	fcall	__pidataBANK0+3	;fetch initializer
   191     07ED  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   192     07EE  2727               	fcall	__pidataBANK0+4	;fetch initializer
   193     07EF  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   194     07F0  2728               	fcall	__pidataBANK0+5	;fetch initializer
   195     07F1  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   196     07F2  2729               	fcall	__pidataBANK0+6	;fetch initializer
   197     07F3  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   198     07F4  272A               	fcall	__pidataBANK0+7	;fetch initializer
   199     07F5  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   200     07F6  272B               	fcall	__pidataBANK0+8	;fetch initializer
   201     07F7  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   202     07F8  272C               	fcall	__pidataBANK0+9	;fetch initializer
   203     07F9  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   204     07FA  272D               	fcall	__pidataBANK0+10	;fetch initializer
   205     07FB  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   206     07FC  272E               	fcall	__pidataBANK0+11	;fetch initializer
   207     07FD  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   208     07FE                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FE                     __end_of__initialization:
   212     07FE  0183               	clrf	3
   213     07FF  2F44               	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	dataBANK0
   216     0020                     __pdataBANK0:
   217     0020                     _hexkeys:
   218     0020                     	ds	12
   219                           
   220                           	psect	cstackCOMMON
   221     0070                     __pcstackCOMMON:
   222     0070                     ?_main:
   223     0070                     ?___bmul:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ___bmul@multiplicand:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           ; 1 bytes @ 0x0
   231     0070                     	ds	1
   232     0071                     ??___bmul:
   233                           
   234                           ; 1 bytes @ 0x1
   235     0071                     	ds	1
   236     0072                     ___bmul@product:
   237                           
   238                           ; 1 bytes @ 0x2
   239     0072                     	ds	1
   240     0073                     ___bmul@multiplier:
   241                           
   242                           ; 1 bytes @ 0x3
   243     0073                     	ds	1
   244     0074                     ??_main:
   245                           
   246                           ; 1 bytes @ 0x4
   247     0074                     	ds	2
   248     0076                     main@xpos:
   249                           
   250                           ; 1 bytes @ 0x6
   251     0076                     	ds	1
   252     0077                     main@newpos:
   253                           
   254                           ; 1 bytes @ 0x7
   255     0077                     	ds	1
   256     0078                     main@number:
   257                           
   258                           ; 1 bytes @ 0x8
   259     0078                     	ds	1
   260     0079                     main@ypos:
   261                           
   262                           ; 1 bytes @ 0x9
   263     0079                     	ds	1
   264                           
   265                           	psect	maintext
   266     0744                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 37 in file "newmain.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  number          1    8[COMMON] unsigned char 
   277 ;;  newpos          1    7[COMMON] unsigned char 
   278 ;;  xpos            1    6[COMMON] unsigned char 
   279 ;;  ypos            1    9[COMMON] unsigned char 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1
   289 ;;      Params:         0       0       0
   290 ;;      Locals:         4       0       0
   291 ;;      Temps:          2       0       0
   292 ;;      Totals:         6       0       0
   293 ;;Total ram usage:        6 bytes
   294 ;; Hardware stack levels required when called: 1
   295 ;; This function calls:
   296 ;;		___bmul
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     0744                     _main:	
   303                           ;psect for function _main
   304                           
   305     0744                     l743:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   308                           
   309                           
   310                           ;newmain.c: 39:     ANSEL = 0;
   311     0744  1683               	bsf	3,5	;RP0=1, select bank1
   312     0745  0191               	clrf	17	;volatile
   313                           
   314                           ;newmain.c: 40:     TRISC = 0b00000000;
   315     0746  0187               	clrf	7	;volatile
   316     0747                     l745:
   317                           
   318                           ;newmain.c: 41:     TRISA = 0b00000111;
   319     0747  3007               	movlw	7
   320     0748  0085               	movwf	5	;volatile
   321     0749                     l747:
   322                           
   323                           ;newmain.c: 42:     CMCON0bits.CM = 111;
   324     0749  3007               	movlw	7
   325     074A  1283               	bcf	3,5	;RP0=0, select bank0
   326     074B  0499               	iorwf	25,f	;volatile
   327     074C                     l749:
   328                           
   329                           ;newmain.c: 45:         for(uint8_t ypos=0; ypos < 4; ypos++){
   330     074C  01F9               	clrf	main@ypos
   331     074D                     l38:
   332                           
   333                           ;newmain.c: 46:             RA4 = 0;
   334     074D  1205               	bcf	5,4	;volatile
   335                           
   336                           ;newmain.c: 47:             RC2 = 0;
   337     074E  1107               	bcf	7,2	;volatile
   338                           
   339                           ;newmain.c: 48:             RC1 = 0;
   340     074F  1087               	bcf	7,1	;volatile
   341                           
   342                           ;newmain.c: 49:             RC0 = 0;
   343     0750  1007               	bcf	7,0	;volatile
   344                           
   345                           ;newmain.c: 51:             switch(ypos){
   346     0751  2F5A               	goto	l757
   347     0752                     l41:	
   348                           ;newmain.c: 52:                 case 0:
   349                           
   350                           
   351                           ;newmain.c: 53:                     RA4 = 1;
   352     0752  1605               	bsf	5,4	;volatile
   353                           
   354                           ;newmain.c: 54:                     break;
   355     0753  2F70               	goto	l42
   356     0754                     l43:	
   357                           ;newmain.c: 55:                 case 1:
   358                           
   359                           
   360                           ;newmain.c: 56:                     RC2 = 1;
   361     0754  1507               	bsf	7,2	;volatile
   362                           
   363                           ;newmain.c: 57:                     break;
   364     0755  2F70               	goto	l42
   365     0756                     l44:	
   366                           ;newmain.c: 58:                 case 2:
   367                           
   368                           
   369                           ;newmain.c: 59:                     RC1 = 1;
   370     0756  1487               	bsf	7,1	;volatile
   371                           
   372                           ;newmain.c: 60:                     break;
   373     0757  2F70               	goto	l42
   374     0758                     l45:	
   375                           ;newmain.c: 61:                 case 3:
   376                           
   377                           
   378                           ;newmain.c: 62:                     RC0 = 1;
   379     0758  1407               	bsf	7,0	;volatile
   380                           
   381                           ;newmain.c: 63:                     break;
   382     0759  2F70               	goto	l42
   383     075A                     l757:
   384     075A  0879               	movf	main@ypos,w
   385     075B  00F4               	movwf	??_main
   386     075C  01F5               	clrf	??_main+1
   387                           
   388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   389                           ; Switch size 1, requested type "simple"
   390                           ; Number of cases is 1, Range of values is 0 to 0
   391                           ; switch strategies available:
   392                           ; Name         Instructions Cycles
   393                           ; simple_byte            4     3 (average)
   394                           ; direct_byte            7     6 (fixed)
   395                           ; jumptable            260     6 (fixed)
   396                           ;	Chosen strategy is simple_byte
   397     075D  0875               	movf	??_main+1,w
   398     075E  3A00               	xorlw	0	; case 0
   399     075F  1903               	skipnz
   400     0760  2F62               	goto	l815
   401     0761  2F70               	goto	l42
   402     0762                     l815:
   403                           
   404                           ; Switch size 1, requested type "simple"
   405                           ; Number of cases is 4, Range of values is 0 to 3
   406                           ; switch strategies available:
   407                           ; Name         Instructions Cycles
   408                           ; direct_byte           10     6 (fixed)
   409                           ; simple_byte           13     7 (average)
   410                           ; jumptable            260     6 (fixed)
   411                           ;	Chosen strategy is simple_byte
   412     0762  0874               	movf	??_main,w
   413     0763  3A00               	xorlw	0	; case 0
   414     0764  1903               	skipnz
   415     0765  2F52               	goto	l41
   416     0766  3A01               	xorlw	1	; case 1
   417     0767  1903               	skipnz
   418     0768  2F54               	goto	l43
   419     0769  3A03               	xorlw	3	; case 2
   420     076A  1903               	skipnz
   421     076B  2F56               	goto	l44
   422     076C  3A01               	xorlw	1	; case 3
   423     076D  1903               	skipnz
   424     076E  2F58               	goto	l45
   425     076F  2F70               	goto	l42
   426     0770                     l42:
   427                           
   428                           ;newmain.c: 66:             RC3 = 0;
   429     0770  1187               	bcf	7,3	;volatile
   430                           
   431                           ;newmain.c: 67:             RC4 = 0;
   432     0771  1207               	bcf	7,4	;volatile
   433                           
   434                           ;newmain.c: 68:             RC5 = 0;
   435     0772  1287               	bcf	7,5	;volatile
   436                           
   437                           ;newmain.c: 69:             RA5 = 0;
   438     0773  1285               	bcf	5,5	;volatile
   439                           
   440                           ;newmain.c: 71:             if (RA2 || RA1 || RA0){
   441     0774  1905               	btfsc	5,2	;volatile
   442     0775  2F77               	goto	u211
   443     0776  2F78               	goto	u210
   444     0777                     u211:
   445     0777  2F80               	goto	l763
   446     0778                     u210:
   447     0778                     l759:
   448     0778  1885               	btfsc	5,1	;volatile
   449     0779  2F7B               	goto	u221
   450     077A  2F7C               	goto	u220
   451     077B                     u221:
   452     077B  2F80               	goto	l763
   453     077C                     u220:
   454     077C                     l761:
   455     077C  1C05               	btfss	5,0	;volatile
   456     077D  2F7F               	goto	u231
   457     077E  2F80               	goto	u230
   458     077F                     u231:
   459     077F  2FDA               	goto	l775
   460     0780                     u230:
   461     0780                     l763:
   462                           
   463                           ;newmain.c: 72:                 uint8_t xpos = RA2 * 1 + RA1 * 2 + RA0 * 3;
   464     0780  3000               	movlw	0
   465     0781  1885               	btfsc	5,1	;volatile
   466     0782  3001               	movlw	1
   467     0783  00F4               	movwf	??_main
   468     0784  3001               	movlw	1
   469     0785                     u245:
   470     0785  1003               	clrc
   471     0786  0DF4               	rlf	??_main,f
   472     0787  3EFF               	addlw	-1
   473     0788  1D03               	skipz
   474     0789  2F85               	goto	u245
   475     078A  3003               	movlw	3
   476     078B  00F0               	movwf	___bmul@multiplicand
   477     078C  3000               	movlw	0
   478     078D  1805               	btfsc	5,0	;volatile
   479     078E  3001               	movlw	1
   480     078F  272F               	fcall	___bmul
   481     0790  0774               	addwf	??_main,w
   482     0791  1283               	bcf	3,5	;RP0=0, select bank0
   483     0792  1905               	btfsc	5,2	;volatile
   484     0793  3E01               	addlw	1
   485     0794  00F6               	movwf	main@xpos
   486                           
   487                           ;newmain.c: 74:                 uint8_t newpos = ypos * 3 + xpos - 1;
   488     0795  3003               	movlw	3
   489     0796  00F0               	movwf	___bmul@multiplicand
   490     0797  0879               	movf	main@ypos,w
   491     0798  272F               	fcall	___bmul
   492     0799  0776               	addwf	main@xpos,w
   493     079A  3EFF               	addlw	255
   494     079B  00F7               	movwf	main@newpos
   495     079C                     l765:
   496                           
   497                           ;newmain.c: 75:                 uint8_t number = hexkeys[newpos];
   498     079C  0877               	movf	main@newpos,w
   499     079D  3E20               	addlw	(low (_hexkeys| 0))& (0+255)
   500     079E  0084               	movwf	4
   501     079F  1383               	bcf	3,7	;select IRP bank0
   502     07A0  0800               	movf	0,w
   503     07A1  00F8               	movwf	main@number
   504     07A2                     l767:
   505                           
   506                           ;newmain.c: 77:                 RC3 = ((number >> 0) & 1);
   507     07A2  1878               	btfsc	main@number,0
   508     07A3  2FA5               	goto	u251
   509     07A4  2FA8               	goto	u250
   510     07A5                     u251:
   511     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   512     07A6  1587               	bsf	7,3	;volatile
   513     07A7  2FAA               	goto	u264
   514     07A8                     u250:
   515     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   516     07A9  1187               	bcf	7,3	;volatile
   517     07AA                     u264:
   518     07AA                     l769:
   519                           
   520                           ;newmain.c: 78:                 RC4 = ((number >> 1) & 1);
   521     07AA  0878               	movf	main@number,w
   522     07AB  00F4               	movwf	??_main
   523     07AC  3001               	movlw	1
   524     07AD                     u275:
   525     07AD  1003               	clrc
   526     07AE  0CF4               	rrf	??_main,f
   527     07AF  3EFF               	addlw	-1
   528     07B0  1D03               	skipz
   529     07B1  2FAD               	goto	u275
   530     07B2  1874               	btfsc	??_main,0
   531     07B3  2FB5               	goto	u281
   532     07B4  2FB8               	goto	u280
   533     07B5                     u281:
   534     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   535     07B6  1607               	bsf	7,4	;volatile
   536     07B7  2FBA               	goto	u294
   537     07B8                     u280:
   538     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   539     07B9  1207               	bcf	7,4	;volatile
   540     07BA                     u294:
   541     07BA                     l771:
   542                           
   543                           ;newmain.c: 79:                 RC5 = ((number >> 2) & 1);
   544     07BA  0878               	movf	main@number,w
   545     07BB  00F4               	movwf	??_main
   546     07BC  3002               	movlw	2
   547     07BD                     u305:
   548     07BD  1003               	clrc
   549     07BE  0CF4               	rrf	??_main,f
   550     07BF  3EFF               	addlw	-1
   551     07C0  1D03               	skipz
   552     07C1  2FBD               	goto	u305
   553     07C2  1874               	btfsc	??_main,0
   554     07C3  2FC5               	goto	u311
   555     07C4  2FC8               	goto	u310
   556     07C5                     u311:
   557     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   558     07C6  1687               	bsf	7,5	;volatile
   559     07C7  2FCA               	goto	u324
   560     07C8                     u310:
   561     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   562     07C9  1287               	bcf	7,5	;volatile
   563     07CA                     u324:
   564     07CA                     l773:
   565                           
   566                           ;newmain.c: 80:                 RA5 = ((number >> 3) & 1);
   567     07CA  0878               	movf	main@number,w
   568     07CB  00F4               	movwf	??_main
   569     07CC  3003               	movlw	3
   570     07CD                     u335:
   571     07CD  1003               	clrc
   572     07CE  0CF4               	rrf	??_main,f
   573     07CF  3EFF               	addlw	-1
   574     07D0  1D03               	skipz
   575     07D1  2FCD               	goto	u335
   576     07D2  1874               	btfsc	??_main,0
   577     07D3  2FD5               	goto	u341
   578     07D4  2FD8               	goto	u340
   579     07D5                     u341:
   580     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   581     07D6  1685               	bsf	5,5	;volatile
   582     07D7  2FDA               	goto	u354
   583     07D8                     u340:
   584     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   585     07D9  1285               	bcf	5,5	;volatile
   586     07DA                     u354:
   587     07DA                     l775:
   588                           
   589                           ;newmain.c: 82:         }
   590     07DA  3001               	movlw	1
   591     07DB  00F4               	movwf	??_main
   592     07DC  0874               	movf	??_main,w
   593     07DD  07F9               	addwf	main@ypos,f
   594     07DE                     l777:
   595     07DE  3004               	movlw	4
   596     07DF  0279               	subwf	main@ypos,w
   597     07E0  1C03               	skipc
   598     07E1  2FE3               	goto	u361
   599     07E2  2FE4               	goto	u360
   600     07E3                     u361:
   601     07E3  2F4D               	goto	l38
   602     07E4                     u360:
   603     07E4  2F4C               	goto	l749
   604     07E5  2800               	ljmp	start
   605     07E6                     __end_of_main:
   606                           
   607                           	psect	text1
   608     072F                     __ptext1:	
   609 ;; *************** function ___bmul *****************
   610 ;; Defined at:
   611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  multiplier      1    wreg     unsigned char 
   614 ;;  multiplicand    1    0[COMMON] unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  multiplier      1    3[COMMON] unsigned char 
   617 ;;  product         1    2[COMMON] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1
   627 ;;      Params:         1       0       0
   628 ;;      Locals:         2       0       0
   629 ;;      Temps:          1       0       0
   630 ;;      Totals:         4       0       0
   631 ;;Total ram usage:        4 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     072F                     ___bmul:	
   641                           ;psect for function ___bmul
   642                           
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   646                           ;___bmul@multiplier stored from wreg
   647     072F  00F3               	movwf	___bmul@multiplier
   648     0730                     l729:
   649     0730  01F2               	clrf	___bmul@product
   650     0731                     l731:
   651     0731  1C73               	btfss	___bmul@multiplier,0
   652     0732  2F34               	goto	u191
   653     0733  2F35               	goto	u190
   654     0734                     u191:
   655     0734  2F39               	goto	l735
   656     0735                     u190:
   657     0735                     l733:
   658     0735  0870               	movf	___bmul@multiplicand,w
   659     0736  00F1               	movwf	??___bmul
   660     0737  0871               	movf	??___bmul,w
   661     0738  07F2               	addwf	___bmul@product,f
   662     0739                     l735:
   663     0739  1003               	clrc
   664     073A  0DF0               	rlf	___bmul@multiplicand,f
   665     073B                     l737:
   666     073B  1003               	clrc
   667     073C  0CF3               	rrf	___bmul@multiplier,f
   668     073D  0873               	movf	___bmul@multiplier,w
   669     073E  1D03               	btfss	3,2
   670     073F  2F41               	goto	u201
   671     0740  2F42               	goto	u200
   672     0741                     u201:
   673     0741  2F31               	goto	l731
   674     0742                     u200:
   675     0742                     l739:
   676     0742  0872               	movf	___bmul@product,w
   677     0743                     l163:
   678     0743  0008               	return
   679     0744                     __end_of___bmul:
   680     007E                     btemp	set	126	;btemp
   681     007E                     wtemp0	set	126
   682                           
   683                           	psect	config
   684                           
   685                           ;Config register CONFIG @ 0x2007
   686                           ;	Oscillator Selection bits
   687                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDTE = OFF, WDT disabled
   690                           ;	Power-up Timer Enable bit
   691                           ;	PWRTE = ON, PWRT enabled
   692                           ;	MCLR Pin Function Select bit
   693                           ;	MCLRE = ON, MCLR pin function is MCLR
   694                           ;	Code Protection bit
   695                           ;	CP = OFF, Program memory code protection is disabled
   696                           ;	Data Code Protection bit
   697                           ;	CPD = OFF, Data memory code protection is disabled
   698                           ;	Brown Out Detect
   699                           ;	BOREN = OFF, BOR disabled
   700                           ;	Internal External Switchover bit
   701                           ;	IESO = OFF, Internal External Switchover mode is disabled
   702                           ;	Fail-Safe Clock Monitor Enabled bit
   703                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   704     2007                     	org	8199
   705     2007  30E4               	dw	12516

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0      12
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     469
                                              4 COMMON     6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               20      0       0       5        0.0%
BITBANK1            20      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       C       4       15.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16       8        0.0%
ABS                  0      0      16       6        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Apr 11 13:24:04 2023

         ___bmul@product 0072                       l41 0752                       l42 0770  
                     l43 0754                       l44 0756                       l45 0758  
                     l38 074D                      l163 0743                      l731 0731  
                    l733 0735                      l735 0739                      l815 0762  
                    l743 0744                      l737 073B                      l729 0730  
                    l761 077C                      l745 0747                      l739 0742  
                    l771 07BA                      l763 0780                      l747 0749  
                    l773 07CA                      l765 079C                      l757 075A  
                    l749 074C                      l767 07A2                      l775 07DA  
                    l759 0778                      l777 07DE                      l769 07AA  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA4 002C                      _RC0 0038                      _RC1 0039  
                    _RA5 002D                      _RC2 003A                      _RC3 003B  
                    _RC4 003C                      _RC5 003D                      u200 0742  
                    u201 0741                      u210 0778                      u211 0777  
                    u220 077C                      u221 077B                      u310 07C8  
                    u230 0780                      u311 07C5                      u231 077F  
                    u305 07BD                      u250 07A8                      u251 07A5  
                    u340 07D8                      u324 07CA                      u341 07D5  
                    u245 0785                      u190 0735                      u191 0734  
                    u335 07CD                      u360 07E4                      u280 07B8  
                    u264 07AA                      u361 07E3                      u281 07B5  
                    u354 07DA                      u275 07AD                      u294 07BA  
                    fsr0 0004                      indf 0000                     _main 0744  
                   btemp 007E                     start 0000        ___bmul@multiplier 0073  
                  ?_main 0070                    _ANSEL 0091                    _TRISA 0085  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_main 07E6                   ??_main 0074  
                 ___bmul 072F  __end_of__initialization 07FE      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 0723               __pmaintext 0744  
                ?___bmul 0070                  __ptext1 072F                  _hexkeys 0020  
   end_of_initialization 07FE               main@newpos 0077               main@number 0078  
         __end_of___bmul 0744      start_initialization 07E6                 ??___bmul 0071  
            __pdataBANK0 0020                ___latbits 0000               _CMCON0bits 0019  
               main@xpos 0076                 main@ypos 0079  
