

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Sep 05 13:12:50 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 04/07/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0006                     _PORTB	set	6
   171     0013                     _SSPBUF	set	19
   172     0014                     _SSPCON	set	20
   173     0038                     _RC0	set	56
   174     0039                     _RC1	set	57
   175     003A                     _RC2	set	58
   176     0086                     _TRISB	set	134
   177     0094                     _SSPSTATbits	set	148
   178     043A                     _TRISC2	set	1082
   179     0439                     _TRISC1	set	1081
   180     0438                     _TRISC0	set	1080
   181     043B                     _TRISC3	set	1083
   182     043D                     _TRISC5	set	1085
   183                           
   184                           	psect	strings
   185     0003                     __pstrings:
   186     0003                     stringtab:
   187     0003                     __stringtab:
   188                           
   189                           ;	String table - string pointers are 1 byte each
   190     0003  1BFF               	btfsc	btemp+1,7
   191     0004  280D               	ljmp	stringcode
   192     0005  1383               	bcf	3,7
   193     0006  187F               	btfsc	btemp+1,0
   194     0007  1783               	bsf	3,7
   195     0008  0800               	movf	0,w
   196     0009  0A84               	incf	4,f
   197     000A  1903               	skipnz
   198     000B  0AFF               	incf	btemp+1,f
   199     000C  0008               	return
   200     000D                     stringcode:
   201     000D                     stringdir:
   202     000D  3000               	movlw	high stringdir
   203     000E  008A               	movwf	10
   204     000F  0804               	movf	4,w
   205     0010  0A84               	incf	4,f
   206     0011  0782               	addwf	2,f
   207     0012                     __stringbase:
   208     0012  3400               	retlw	0
   209     0013                     __end_of__stringtab:
   210     0013                     STR_1:
   211     0013  346D               	retlw	109	;'m'
   212     0014  3479               	retlw	121	;'y'
   213     0015  3461               	retlw	97	;'a'
   214     0016  3464               	retlw	100	;'d'
   215     0017  3472               	retlw	114	;'r'
   216     0018  3400               	retlw	0
   217     0013                     
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_SPI_init_master:
   233     0070                     ??_SPI_init_master:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_SPI_write:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ??_SPI_write:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_SPI_data_ready:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_SPI_data_ready:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_SPI_read:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ??_SPI_read:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     SPI_write@write:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262     0070                     	ds	1
   263     0071                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x1
   266     0071                     	ds	3
   267                           
   268                           	psect	maintext
   269     07B0                     __pmaintext:	
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 185 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          3       0       0       0       0
   292 ;;      Totals:         3       0       0       0       0
   293 ;;Total ram usage:        3 bytes
   294 ;; Hardware stack levels required when called: 1
   295 ;; This function calls:
   296 ;;		_SPI_data_ready
   297 ;;		_SPI_init_master
   298 ;;		_SPI_read
   299 ;;		_SPI_write
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305     07B0                     _main:	
   306                           ;psect for function _main
   307                           
   308     07B0                     l818:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   311                           
   312                           
   313                           ;main.c: 187:     TRISB = 0b00000000;
   314     07B0  1683               	bsf	3,5	;RP0=1, select bank1
   315     07B1  1303               	bcf	3,6	;RP1=0, select bank1
   316     07B2  0186               	clrf	6	;volatile
   317     07B3                     l820:
   318                           
   319                           ;main.c: 190:     SPI_init_master();
   320     07B3  120A  118A  279B  120A  118A  	fcall	_SPI_init_master
   321     07B8                     l822:
   322                           
   323                           ;main.c: 198:         PORTB = 0b10101010;
   324     07B8  30AA               	movlw	170
   325     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   326     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   327     07BB  0086               	movwf	6	;volatile
   328     07BC                     l824:
   329                           
   330                           ;main.c: 199:         RC2 = 0;
   331     07BC  1107               	bcf	7,2	;volatile
   332     07BD                     l826:
   333                           
   334                           ;main.c: 201:         SPI_write(0b00000001);
   335     07BD  3001               	movlw	1
   336     07BE  120A  118A  27A4  120A  118A  	fcall	_SPI_write
   337     07C3                     l828:
   338                           
   339                           ;main.c: 203:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   340     07C3  300D               	movlw	13
   341     07C4  00F3               	movwf	??_main+2
   342     07C5  30AF               	movlw	175
   343     07C6  00F2               	movwf	??_main+1
   344     07C7  30B6               	movlw	182
   345     07C8  00F1               	movwf	??_main
   346     07C9                     u107:
   347     07C9  0BF1               	decfsz	??_main,f
   348     07CA  2FC9               	goto	u107
   349     07CB  0BF2               	decfsz	??_main+1,f
   350     07CC  2FC9               	goto	u107
   351     07CD  0BF3               	decfsz	??_main+2,f
   352     07CE  2FC9               	goto	u107
   353     07CF  0000               	nop
   354     07D0                     l830:
   355                           
   356                           ;main.c: 204:         SPI_write(0b00000000);
   357     07D0  3000               	movlw	0
   358     07D1  120A  118A  27A4  120A  118A  	fcall	_SPI_write
   359     07D6                     l832:
   360                           
   361                           ;main.c: 206:         RC2 = 1;
   362     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   363     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   364     07D8  1507               	bsf	7,2	;volatile
   365     07D9                     l834:
   366                           
   367                           ;main.c: 207:         if(SPI_data_ready()){
   368     07D9  120A  118A  2796  120A  118A  	fcall	_SPI_data_ready
   369     07DE  3A00               	xorlw	0
   370     07DF  1903               	skipnz
   371     07E0  2FE2               	goto	u71
   372     07E1  2FE3               	goto	u70
   373     07E2                     u71:
   374     07E2  2FEB               	goto	l838
   375     07E3                     u70:
   376     07E3                     l836:
   377                           
   378                           ;main.c: 208:             PORTB = SPI_read();
   379     07E3  120A  118A  2792  120A  118A  	fcall	_SPI_read
   380     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   381     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   382     07EA  0086               	movwf	6	;volatile
   383     07EB                     l838:
   384                           
   385                           ;main.c: 210:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   386     07EB  300D               	movlw	13
   387     07EC  00F3               	movwf	??_main+2
   388     07ED  30AF               	movlw	175
   389     07EE  00F2               	movwf	??_main+1
   390     07EF  30B6               	movlw	182
   391     07F0  00F1               	movwf	??_main
   392     07F1                     u117:
   393     07F1  0BF1               	decfsz	??_main,f
   394     07F2  2FF1               	goto	u117
   395     07F3  0BF2               	decfsz	??_main+1,f
   396     07F4  2FF1               	goto	u117
   397     07F5  0BF3               	decfsz	??_main+2,f
   398     07F6  2FF1               	goto	u117
   399     07F7  0000               	nop
   400     07F8  2FB8               	goto	l822
   401     07F9  120A  118A  2800   	ljmp	start
   402     07FC                     __end_of_main:
   403                           
   404                           	psect	text1
   405     07A4                     __ptext1:	
   406 ;; *************** function _SPI_write *****************
   407 ;; Defined at:
   408 ;;		line 31 in file "./spi.h"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  write           1    wreg     unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  write           1    0[COMMON] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         1       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         1       0       0       0       0
   426 ;;Total ram usage:        1 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;;		_radio_spi_command_array
   433 ;;		_radio_spi_command_single
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437     07A4                     _SPI_write:	
   438                           ;psect for function _SPI_write
   439                           
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _SPI_write: [wreg]
   443                           ;SPI_write@write stored from wreg
   444     07A4  00F0               	movwf	SPI_write@write
   445     07A5                     l716:
   446                           
   447                           ;./spi.h: 32:     SSPBUF = write;
   448     07A5  0870               	movf	SPI_write@write,w
   449     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   450     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   451     07A8  0093               	movwf	19	;volatile
   452     07A9                     l37:	
   453                           ;./spi.h: 34:     while(!SSPSTATbits.BF);
   454                           
   455     07A9  1683               	bsf	3,5	;RP0=1, select bank1
   456     07AA  1303               	bcf	3,6	;RP1=0, select bank1
   457     07AB  1C14               	btfss	20,0	;volatile
   458     07AC  2FAE               	goto	u21
   459     07AD  2FAF               	goto	u20
   460     07AE                     u21:
   461     07AE  2FA9               	goto	l37
   462     07AF                     u20:
   463     07AF                     l40:
   464     07AF  0008               	return
   465     07B0                     __end_of_SPI_write:
   466                           
   467                           	psect	text2
   468     0792                     __ptext2:	
   469 ;; *************** function _SPI_read *****************
   470 ;; Defined at:
   471 ;;		line 45 in file "./spi.h"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      unsigned char 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;;		_radio_has_recieved_packet
   496 ;;		_radio_get_packets
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500     0792                     _SPI_read:	
   501                           ;psect for function _SPI_read
   502                           
   503     0792                     l722:	
   504                           ;incstack = 0
   505                           ; Regs used in _SPI_read: [wreg]
   506                           
   507                           
   508                           ;./spi.h: 46:     return SSPBUF;
   509     0792  1283               	bcf	3,5	;RP0=0, select bank0
   510     0793  1303               	bcf	3,6	;RP1=0, select bank0
   511     0794  0813               	movf	19,w	;volatile
   512     0795                     l52:
   513     0795  0008               	return
   514     0796                     __end_of_SPI_read:
   515                           
   516                           	psect	text3
   517     079B                     __ptext3:	
   518 ;; *************** function _SPI_init_master *****************
   519 ;; Defined at:
   520 ;;		line 25 in file "./spi.h"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;;		_radio_reciever_start
   545 ;;		_radio_transmitter_start
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549     079B                     _SPI_init_master:	
   550                           ;psect for function _SPI_init_master
   551                           
   552     079B                     l710:	
   553                           ;incstack = 0
   554                           ; Regs used in _SPI_init_master: [wreg]
   555                           
   556                           
   557                           ;./spi.h: 26:     SSPCON = 0b00100000;
   558     079B  3020               	movlw	32
   559     079C  1283               	bcf	3,5	;RP0=0, select bank0
   560     079D  1303               	bcf	3,6	;RP1=0, select bank0
   561     079E  0094               	movwf	20	;volatile
   562     079F                     l712:
   563                           
   564                           ;./spi.h: 27:     TRISC5 = 0;
   565     079F  1683               	bsf	3,5	;RP0=1, select bank1
   566     07A0  1303               	bcf	3,6	;RP1=0, select bank1
   567     07A1  1287               	bcf	7,5	;volatile
   568     07A2                     l714:
   569                           
   570                           ;./spi.h: 28:     TRISC3 = 0;
   571     07A2  1187               	bcf	7,3	;volatile
   572     07A3                     l34:
   573     07A3  0008               	return
   574     07A4                     __end_of_SPI_init_master:
   575                           
   576                           	psect	text4
   577     0796                     __ptext4:	
   578 ;; *************** function _SPI_data_ready *****************
   579 ;; Defined at:
   580 ;;		line 37 in file "./spi.h"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607     0796                     _SPI_data_ready:	
   608                           ;psect for function _SPI_data_ready
   609                           
   610     0796                     l718:	
   611                           ;incstack = 0
   612                           ; Regs used in _SPI_data_ready: [wreg+status,2+status,0]
   613                           
   614                           
   615                           ;./spi.h: 38:     return SSPSTATbits.BF;
   616     0796  1683               	bsf	3,5	;RP0=1, select bank1
   617     0797  1303               	bcf	3,6	;RP1=0, select bank1
   618     0798  0814               	movf	20,w	;volatile
   619     0799  3901               	andlw	1
   620     079A                     l43:
   621     079A  0008               	return
   622     079B                     __end_of_SPI_data_ready:
   623     007E                     btemp	set	126	;btemp
   624     007E                     wtemp0	set	126
   625                           
   626                           	psect	config
   627                           
   628                           ;Config register CONFIG @ 0x2007
   629                           ;	Oscillator Selection bits
   630                           ;	FOSC = HS, HS oscillator
   631                           ;	Watchdog Timer Enable bit
   632                           ;	WDTE = OFF, WDT disabled
   633                           ;	Power-up Timer Enable bit
   634                           ;	PWRTE = OFF, PWRT disabled
   635                           ;	Brown-out Reset Enable bit
   636                           ;	BOREN = OFF, BOR disabled
   637                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   638                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   639                           ;	Data EEPROM Memory Code Protection bit
   640                           ;	CPD = OFF, Data EEPROM code protection off
   641                           ;	Flash Program Memory Write Enable bits
   642                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   643                           ;	In-Circuit Debugger Mode bit
   644                           ;	DEBUG = 0x1, unprogrammed default
   645                           ;	Flash Program Memory Code Protection bit
   646                           ;	CP = OFF, Code protection off
   647     2007                     	org	8199
   648     2007  3F3A               	dw	16186

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                     _SPI_data_ready
                    _SPI_init_master
                           _SPI_read
                          _SPI_write
 ---------------------------------------------------------------------------------
 (1) _SPI_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_data_ready                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_data_ready
   _SPI_init_master
   _SPI_read
   _SPI_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Sep 05 13:12:50 2022

                      pc 0002              _SSPSTATbits 0094                       l40 07AF  
                     l34 07A3                       l43 079A                       l52 0795  
                     l37 07A9                       u20 07AF                       u21 07AE  
                     u70 07E3                       u71 07E2                       fsr 0004  
                    l710 079B                      l712 079F                      l714 07A2  
                    l722 0792                      l716 07A5                      l820 07B3  
                    l718 0796                      l830 07D0                      l822 07B8  
                    l832 07D6                      l824 07BC                      l834 07D9  
                    l826 07BD                      l818 07B0                      l836 07E3  
                    l828 07C3                      l838 07EB                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      u107 07C9  
                    u117 07F1                      indf 0000                     STR_1 0013  
                   _main 07B0                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A         __end_of_SPI_read 0796                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071           _SPI_data_ready 0796                   _TRISC0 0438  
                 _TRISC1 0439                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_SPI_write 07B0   __end_of_SPI_data_ready 079B  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_SPI_read 0070        ??_SPI_init_master 0070  
        ?_SPI_data_ready 0070               __pmaintext 07B0           SPI_write@write 0070  
             ??_SPI_read 0070               __stringtab 0003                  __ptext1 07A4  
                __ptext2 0792                  __ptext3 079B                  __ptext4 0796  
   end_of_initialization 07FC                _SPI_write 07A4          _SPI_init_master 079B  
       ??_SPI_data_ready 0070      start_initialization 07FC               ?_SPI_write 0070  
              ___latbits 0002  __end_of_SPI_init_master 07A4                __pstrings 0003  
            ??_SPI_write 0070              __stringbase 0012                 _SPI_read 0792  
       ?_SPI_init_master 0070       __end_of__stringtab 0013                stringcode 000D  
               stringdir 000D                 stringtab 0003  
