Version 4.0 HI-TECH Software Intermediate Code
"1755 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1755: extern volatile __bit TRISIO1 __attribute__((address(0x429)));
[v _TRISIO1 `Vb ~T0 @X0 0 e@1065 ]
"1764
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1764: extern volatile __bit TRISIO4 __attribute__((address(0x42C)));
[v _TRISIO4 `Vb ~T0 @X0 0 e@1068 ]
"1761
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1761: extern volatile __bit TRISIO3 __attribute__((address(0x42B)));
[v _TRISIO3 `Vb ~T0 @X0 0 e@1067 ]
"1617
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1617: extern volatile __bit GPIO1 __attribute__((address(0x29)));
[v _GPIO1 `Vb ~T0 @X0 0 e@41 ]
"1626
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1626: extern volatile __bit GPIO4 __attribute__((address(0x2C)));
[v _GPIO4 `Vb ~T0 @X0 0 e@44 ]
"1623
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1623: extern volatile __bit GPIO3 __attribute__((address(0x2B)));
[v _GPIO3 `Vb ~T0 @X0 0 e@43 ]
"1629
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1629: extern volatile __bit GPIO5 __attribute__((address(0x2D)));
[v _GPIO5 `Vb ~T0 @X0 0 e@45 ]
"1614
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1614: extern volatile __bit GPIO0 __attribute__((address(0x28)));
[v _GPIO0 `Vb ~T0 @X0 0 e@40 ]
[v F36 `(v ~T0 @X0 1 tf1`ul ]
"12 C:\Program Files\Microchip\xc8\v2.40\pic\include\builtins.h
[v __delay `JF36 ~T0 @X0 0 e ]
[p i __delay ]
"1767 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1767: extern volatile __bit TRISIO5 __attribute__((address(0x42D)));
[v _TRISIO5 `Vb ~T0 @X0 0 e@1069 ]
"1752
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1752: extern volatile __bit TRISIO0 __attribute__((address(0x428)));
[v _TRISIO0 `Vb ~T0 @X0 0 e@1064 ]
"1620
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1620: extern volatile __bit GPIO2 __attribute__((address(0x2A)));
[v _GPIO2 `Vb ~T0 @X0 0 e@42 ]
[p mainexit ]
"1405
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1405: extern volatile unsigned char ANSEL __attribute__((address(0x09F)));
[v _ANSEL `Vuc ~T0 @X0 0 e@159 ]
"644
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 644: extern volatile unsigned char ADCON0 __attribute__((address(0x01F)));
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"565
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 565: extern volatile unsigned char CMCON __attribute__((address(0x019)));
[v _CMCON `Vuc ~T0 @X0 0 e@25 ]
"1209
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1209: extern volatile unsigned char VRCON __attribute__((address(0x099)));
[v _VRCON `Vuc ~T0 @X0 0 e@153 ]
"798
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 798: extern volatile unsigned char TRISIO __attribute__((address(0x085)));
[v _TRISIO `Vuc ~T0 @X0 0 e@133 ]
"219
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 219: extern volatile unsigned char GPIO __attribute__((address(0x005)));
[v _GPIO `Vuc ~T0 @X0 0 e@5 ]
"1 main.c
[p x FOSC  =  INTRCIO ]
"2
[p x WDTE  =  OFF ]
"3
[p x MCLRE  =  OFF ]
"4
[p x CP  =  OFF ]
"5
[p x CPD  =  OFF ]
"6
[p x BOREN  =  ON ]
"7
[p x PWRTE  =  ON ]
"55 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"75
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 75: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"95
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 95: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"115
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 115: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"201
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 201: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"221
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 221: __asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
"309
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 309: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"329
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 329: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"407
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 407: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"455
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 455: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"462
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 462: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"482
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 482: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"502
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 502: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"567
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 567: __asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
"626
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 626: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"646
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 646: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"730
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 730: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"800
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 800: __asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
"850
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 850: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"898
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 898: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"932
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 932: __asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
"992
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 992: __asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
"1037
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1037: __asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
"1042
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1042: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"1211
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1211: __asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
"1271
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1271: __asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
"1276
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1276: __asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
"1309
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1309: __asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
"1329
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1329: __asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
"1367
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1367: __asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
"1387
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1387: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"1407
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12f675.h: 1407: __asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
"28 ./softwarespi.h
[; ;./softwarespi.h: 28:     void SPI_init_master(){
[v _SPI_init_master `(v ~T0 @X0 1 ef ]
{
[e :U _SPI_init_master ]
[f ]
"30
[; ;./softwarespi.h: 30:         TRISIO1 = 0;
[e = _TRISIO1 -> -> 0 `i `b ]
"31
[; ;./softwarespi.h: 31:         TRISIO4 = 0;
[e = _TRISIO4 -> -> 0 `i `b ]
"32
[; ;./softwarespi.h: 32:         TRISIO3 = 1;
[e = _TRISIO3 -> -> 1 `i `b ]
"35
[; ;./softwarespi.h: 35:         GPIO1 = 0;
[e = _GPIO1 -> -> 0 `i `b ]
"36
[; ;./softwarespi.h: 36:         GPIO4 = 0;
[e = _GPIO4 -> -> 0 `i `b ]
"37
[; ;./softwarespi.h: 37:     }
[e :UE 81 ]
}
"39
[; ;./softwarespi.h: 39:     uint8_t SPI_write(uint8_t data){
[v _SPI_write `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _SPI_write ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"40
[; ;./softwarespi.h: 40:         uint8_t read = 0;
[v _read `uc ~T0 @X0 1 a ]
[e = _read -> -> 0 `i `uc ]
"41
[; ;./softwarespi.h: 41:         GPIO1 = 0;
[e = _GPIO1 -> -> 0 `i `b ]
"44
[; ;./softwarespi.h: 44:         for(uint8_t i = 0; i < 8; i++){
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 83  ]
[e $U 84  ]
[e :U 83 ]
{
"45
[; ;./softwarespi.h: 45:             if(data & 0x80){
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 86  ]
{
"46
[; ;./softwarespi.h: 46:                 GPIO4 = 1;
[e = _GPIO4 -> -> 1 `i `b ]
"47
[; ;./softwarespi.h: 47:             }else{
}
[e $U 87  ]
[e :U 86 ]
{
"48
[; ;./softwarespi.h: 48:                 GPIO4 = 0;
[e = _GPIO4 -> -> 0 `i `b ]
"49
[; ;./softwarespi.h: 49:             }
}
[e :U 87 ]
"50
[; ;./softwarespi.h: 50:             GPIO1 = 1;
[e = _GPIO1 -> -> 1 `i `b ]
"51
[; ;./softwarespi.h: 51:             GPIO1 = 0;
[e = _GPIO1 -> -> 0 `i `b ]
"53
[; ;./softwarespi.h: 53:             read <<= 1;
[e =<< _read -> -> 1 `i `uc ]
"54
[; ;./softwarespi.h: 54:             read |= GPIO3;
[e =| _read -> -> _GPIO3 `i `uc ]
"55
[; ;./softwarespi.h: 55:             data <<= 1;
[e =<< _data -> -> 1 `i `uc ]
"56
[; ;./softwarespi.h: 56:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 83  ]
[e :U 84 ]
}
"57
[; ;./softwarespi.h: 57:         read >>= 1;
[e =>> _read -> -> 1 `i `uc ]
"59
[; ;./softwarespi.h: 59:         return read;
[e ) _read ]
[e $UE 82  ]
"60
[; ;./softwarespi.h: 60:     }
[e :UE 82 ]
}
"97 ./nrf24l01.h
[; ;./nrf24l01.h: 97:     void arrcpy(uint8_t *dst, uint8_t *src, uint8_t len)
[v _arrcpy `(v ~T0 @X0 1 ef3`*uc`*uc`uc ]
"98
[; ;./nrf24l01.h: 98:     {
{
[e :U _arrcpy ]
"97
[; ;./nrf24l01.h: 97:     void arrcpy(uint8_t *dst, uint8_t *src, uint8_t len)
[v _dst `*uc ~T0 @X0 1 r1 ]
[v _src `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"98
[; ;./nrf24l01.h: 98:     {
[f ]
"99
[; ;./nrf24l01.h: 99:         for (uint8_t i = 0; i < len; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 92  ]
[e :U 89 ]
"100
[; ;./nrf24l01.h: 100:         {
{
"101
[; ;./nrf24l01.h: 101:             dst[i] = src[i];
[e = *U + _dst * -> _i `ux -> -> # *U _dst `ui `ux *U + _src * -> _i `ux -> -> # *U _src `ui `ux ]
"102
[; ;./nrf24l01.h: 102:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 92 ]
[e $ < -> _i `i -> _len `i 89  ]
[e :U 90 ]
}
"103
[; ;./nrf24l01.h: 103:     }
[e :UE 88 ]
}
"118
[; ;./nrf24l01.h: 118:     uint8_t nrf_command_with_data_overwrite(uint8_t command, uint8_t *data, uint8_t len)
[v _nrf_command_with_data_overwrite `(uc ~T0 @X0 1 ef3`uc`*uc`uc ]
"119
[; ;./nrf24l01.h: 119:     {
{
[e :U _nrf_command_with_data_overwrite ]
"118
[; ;./nrf24l01.h: 118:     uint8_t nrf_command_with_data_overwrite(uint8_t command, uint8_t *data, uint8_t len)
[v _command `uc ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"119
[; ;./nrf24l01.h: 119:     {
[f ]
"120
[; ;./nrf24l01.h: 120:         GPIO5 = 0; uint8_t status = SPI_write(command); for (uint8_t i = 0; i < len; i++) { data[i] = SPI_write(data[i]); } GPIO5 = 1; return status;
[e = _GPIO5 -> -> 0 `i `b ]
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _SPI_write (1 _command ]
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 97  ]
[e :U 94 ]
{
[e = *U + _data * -> _i `ux -> -> # *U _data `ui `ux ( _SPI_write (1 *U + _data * -> _i `ux -> -> # *U _data `ui `ux ]
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 97 ]
[e $ < -> _i `i -> _len `i 94  ]
[e :U 95 ]
}
[e = _GPIO5 -> -> 1 `i `b ]
[e ) _status ]
[e $UE 93  ]
"121
[; ;./nrf24l01.h: 121:     }
[e :UE 93 ]
}
"124
[; ;./nrf24l01.h: 124:     uint8_t nrf_command_with_data(uint8_t command, uint8_t *data, uint8_t len)
[v _nrf_command_with_data `(uc ~T0 @X0 1 ef3`uc`*uc`uc ]
"125
[; ;./nrf24l01.h: 125:     {
{
[e :U _nrf_command_with_data ]
"124
[; ;./nrf24l01.h: 124:     uint8_t nrf_command_with_data(uint8_t command, uint8_t *data, uint8_t len)
[v _command `uc ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"125
[; ;./nrf24l01.h: 125:     {
[f ]
"126
[; ;./nrf24l01.h: 126:         GPIO5 = 0; uint8_t status = SPI_write(command); for (uint8_t i = 0; i < len; i++) { SPI_write(data[i]); } GPIO5 = 1; return status;
[e = _GPIO5 -> -> 0 `i `b ]
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _SPI_write (1 _command ]
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 102  ]
[e :U 99 ]
{
[e ( _SPI_write (1 *U + _data * -> _i `ux -> -> # *U _data `ui `ux ]
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 102 ]
[e $ < -> _i `i -> _len `i 99  ]
[e :U 100 ]
}
[e = _GPIO5 -> -> 1 `i `b ]
[e ) _status ]
[e $UE 98  ]
"127
[; ;./nrf24l01.h: 127:     }
[e :UE 98 ]
}
"131
[; ;./nrf24l01.h: 131:     uint8_t nrf_write_register(uint8_t reg, uint8_t *data, uint8_t len)
[v _nrf_write_register `(uc ~T0 @X0 1 ef3`uc`*uc`uc ]
"132
[; ;./nrf24l01.h: 132:     {
{
[e :U _nrf_write_register ]
"131
[; ;./nrf24l01.h: 131:     uint8_t nrf_write_register(uint8_t reg, uint8_t *data, uint8_t len)
[v _reg `uc ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"132
[; ;./nrf24l01.h: 132:     {
[f ]
"133
[; ;./nrf24l01.h: 133:         return nrf_command_with_data(reg | 0b00100000, data, len);
[e ) ( _nrf_command_with_data (3 , , -> | -> _reg `i -> 32 `i `uc _data _len ]
[e $UE 103  ]
"134
[; ;./nrf24l01.h: 134:     }
[e :UE 103 ]
}
"137
[; ;./nrf24l01.h: 137:     uint8_t nrf_read_register(uint8_t reg, uint8_t *data, uint8_t len)
[v _nrf_read_register `(uc ~T0 @X0 1 ef3`uc`*uc`uc ]
"138
[; ;./nrf24l01.h: 138:     {
{
[e :U _nrf_read_register ]
"137
[; ;./nrf24l01.h: 137:     uint8_t nrf_read_register(uint8_t reg, uint8_t *data, uint8_t len)
[v _reg `uc ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"138
[; ;./nrf24l01.h: 138:     {
[f ]
"139
[; ;./nrf24l01.h: 139:         return nrf_command_with_data_overwrite(reg | 0b00000000, data, len);
[e ) ( _nrf_command_with_data_overwrite (3 , , -> | -> _reg `i -> 0 `i `uc _data _len ]
[e $UE 104  ]
"140
[; ;./nrf24l01.h: 140:     }
[e :UE 104 ]
}
"143
[; ;./nrf24l01.h: 143:     uint8_t nrf_write_payload(uint8_t *data, uint8_t len)
[v _nrf_write_payload `(uc ~T0 @X0 1 ef2`*uc`uc ]
"144
[; ;./nrf24l01.h: 144:     {
{
[e :U _nrf_write_payload ]
"143
[; ;./nrf24l01.h: 143:     uint8_t nrf_write_payload(uint8_t *data, uint8_t len)
[v _data `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"144
[; ;./nrf24l01.h: 144:     {
[f ]
"145
[; ;./nrf24l01.h: 145:         uint8_t status = nrf_write_register(0b10100000, data, len);
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _nrf_write_register (3 , , -> -> 160 `i `uc _data _len ]
"146
[; ;./nrf24l01.h: 146:         GPIO0 = 1;
[e = _GPIO0 -> -> 1 `i `b ]
"147
[; ;./nrf24l01.h: 147:         _delay((unsigned long)((20)*(4000000UL/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `ul `d .4000000.0 `ul ]
"148
[; ;./nrf24l01.h: 148:         GPIO0 = 0;
[e = _GPIO0 -> -> 0 `i `b ]
"149
[; ;./nrf24l01.h: 149:         return status;
[e ) _status ]
[e $UE 105  ]
"150
[; ;./nrf24l01.h: 150:     }
[e :UE 105 ]
}
"153
[; ;./nrf24l01.h: 153:     uint8_t nrf_write_command(uint8_t command)
[v _nrf_write_command `(uc ~T0 @X0 1 ef1`uc ]
"154
[; ;./nrf24l01.h: 154:     {
{
[e :U _nrf_write_command ]
"153
[; ;./nrf24l01.h: 153:     uint8_t nrf_write_command(uint8_t command)
[v _command `uc ~T0 @X0 1 r1 ]
"154
[; ;./nrf24l01.h: 154:     {
[f ]
"155
[; ;./nrf24l01.h: 155:         GPIO5 = 0;
[e = _GPIO5 -> -> 0 `i `b ]
"156
[; ;./nrf24l01.h: 156:         uint8_t status = SPI_write(command);
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _SPI_write (1 _command ]
"157
[; ;./nrf24l01.h: 157:         GPIO5 = 1;
[e = _GPIO5 -> -> 1 `i `b ]
"158
[; ;./nrf24l01.h: 158:         return status;
[e ) _status ]
[e $UE 106  ]
"159
[; ;./nrf24l01.h: 159:     }
[e :UE 106 ]
}
"165
[; ;./nrf24l01.h: 165:     void nrf_flush_rxtx()
[v _nrf_flush_rxtx `(v ~T0 @X0 1 ef ]
"166
[; ;./nrf24l01.h: 166:     {
{
[e :U _nrf_flush_rxtx ]
[f ]
"167
[; ;./nrf24l01.h: 167:         uint8_t data = 0b01110000;
[v _data `uc ~T0 @X0 1 a ]
[e = _data -> -> 112 `i `uc ]
"168
[; ;./nrf24l01.h: 168:         nrf_write_register(0x07, &data, 1);
[e ( _nrf_write_register (3 , , -> -> 7 `i `uc &U _data -> -> 1 `i `uc ]
"169
[; ;./nrf24l01.h: 169:         nrf_write_command(0b11100001);
[e ( _nrf_write_command (1 -> -> 225 `i `uc ]
"170
[; ;./nrf24l01.h: 170:         nrf_write_command(0b11100010);
[e ( _nrf_write_command (1 -> -> 226 `i `uc ]
"171
[; ;./nrf24l01.h: 171:     }
[e :UE 107 ]
}
"175
[; ;./nrf24l01.h: 175:     void nrf_setup(uint8_t *addr, uint8_t addr_size, uint8_t payload_size)
[v _nrf_setup `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
"176
[; ;./nrf24l01.h: 176:     {
{
[e :U _nrf_setup ]
"175
[; ;./nrf24l01.h: 175:     void nrf_setup(uint8_t *addr, uint8_t addr_size, uint8_t payload_size)
[v _addr `*uc ~T0 @X0 1 r1 ]
[v _addr_size `uc ~T0 @X0 1 r2 ]
[v _payload_size `uc ~T0 @X0 1 r3 ]
"176
[; ;./nrf24l01.h: 176:     {
[f ]
"177
[; ;./nrf24l01.h: 177:         TRISIO5 = 0;
[e = _TRISIO5 -> -> 0 `i `b ]
"178
[; ;./nrf24l01.h: 178:         TRISIO0 = 0;
[e = _TRISIO0 -> -> 0 `i `b ]
"180
[; ;./nrf24l01.h: 180:         GPIO5 = 1;
[e = _GPIO5 -> -> 1 `i `b ]
"181
[; ;./nrf24l01.h: 181:         GPIO0 = 0;
[e = _GPIO0 -> -> 0 `i `b ]
"183
[; ;./nrf24l01.h: 183:         _delay((unsigned long)((100)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"185
[; ;./nrf24l01.h: 185:         uint8_t data[5];
[v _data `uc ~T0 @X0 -> 5 `i a ]
"187
[; ;./nrf24l01.h: 187:         data[0] = 0x0B;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 11 `i `uc ]
"188
[; ;./nrf24l01.h: 188:         nrf_write_register(0x00, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 0 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"189
[; ;./nrf24l01.h: 189:         data[0] = 0x00;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 0 `i `uc ]
"190
[; ;./nrf24l01.h: 190:         nrf_write_register(0x01, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 1 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"191
[; ;./nrf24l01.h: 191:         data[0] = 0x01;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
"192
[; ;./nrf24l01.h: 192:         nrf_write_register(0x02, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 2 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"194
[; ;./nrf24l01.h: 194:         switch (addr_size){
[e $U 110  ]
{
"195
[; ;./nrf24l01.h: 195:             case 3:
[e :U 111 ]
"196
[; ;./nrf24l01.h: 196:                 data[0] = 0x01;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
"197
[; ;./nrf24l01.h: 197:                 break;
[e $U 109  ]
"198
[; ;./nrf24l01.h: 198:             case 4:
[e :U 112 ]
"199
[; ;./nrf24l01.h: 199:                 data[0] = 0x02;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 2 `i `uc ]
"200
[; ;./nrf24l01.h: 200:                 break;
[e $U 109  ]
"201
[; ;./nrf24l01.h: 201:             case 5:
[e :U 113 ]
"202
[; ;./nrf24l01.h: 202:                 data[0] = 0x03;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 3 `i `uc ]
"203
[; ;./nrf24l01.h: 203:                 break;
[e $U 109  ]
"204
[; ;./nrf24l01.h: 204:         }
}
[e $U 109  ]
[e :U 110 ]
[e [\ -> _addr_size `i , $ -> 3 `i 111
 , $ -> 4 `i 112
 , $ -> 5 `i 113
 109 ]
[e :U 109 ]
"206
[; ;./nrf24l01.h: 206:         nrf_write_register(0x03, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 3 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"207
[; ;./nrf24l01.h: 207:         data[0] = 0x00;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 0 `i `uc ]
"208
[; ;./nrf24l01.h: 208:         nrf_write_register(0x04, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 4 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"209
[; ;./nrf24l01.h: 209:         data[0] = 0x01;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
"210
[; ;./nrf24l01.h: 210:         nrf_write_register(0x05, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 5 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"211
[; ;./nrf24l01.h: 211:         data[0] = 0x26;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux -> -> 38 `i `uc ]
"212
[; ;./nrf24l01.h: 212:         nrf_write_register(0x06, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 6 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"213
[; ;./nrf24l01.h: 213:         data[0] = payload_size;
[e = *U + &U _data * -> -> -> 0 `i `ui `ux -> -> # *U &U _data `ui `ux _payload_size ]
"214
[; ;./nrf24l01.h: 214:         nrf_write_register(0x11, (uint8_t *)&data, 1);
[e ( _nrf_write_register (3 , , -> -> 17 `i `uc -> &U _data `*uc -> -> 1 `i `uc ]
"216
[; ;./nrf24l01.h: 216:         arrcpy(data, addr, addr_size);
[e ( _arrcpy (3 , , &U _data _addr _addr_size ]
"217
[; ;./nrf24l01.h: 217:         nrf_write_register(0x0A, data, addr_size);
[e ( _nrf_write_register (3 , , -> -> 10 `i `uc &U _data _addr_size ]
"219
[; ;./nrf24l01.h: 219:         arrcpy(data, addr, addr_size);
[e ( _arrcpy (3 , , &U _data _addr _addr_size ]
"220
[; ;./nrf24l01.h: 220:         nrf_write_register(0x10, data, addr_size);
[e ( _nrf_write_register (3 , , -> -> 16 `i `uc &U _data _addr_size ]
"222
[; ;./nrf24l01.h: 222:         nrf_flush_rxtx();
[e ( _nrf_flush_rxtx ..  ]
"223
[; ;./nrf24l01.h: 223:     }
[e :UE 108 ]
}
"226
[; ;./nrf24l01.h: 226:     void nrf_set_rx_mode()
[v _nrf_set_rx_mode `(v ~T0 @X0 1 ef ]
"227
[; ;./nrf24l01.h: 227:     {
{
[e :U _nrf_set_rx_mode ]
[f ]
"228
[; ;./nrf24l01.h: 228:         uint8_t config;
[v _config `uc ~T0 @X0 1 a ]
"229
[; ;./nrf24l01.h: 229:         nrf_read_register(0x00, &config, 1);
[e ( _nrf_read_register (3 , , -> -> 0 `i `uc &U _config -> -> 1 `i `uc ]
"231
[; ;./nrf24l01.h: 231:         GPIO0 = 1;
[e = _GPIO0 -> -> 1 `i `b ]
"233
[; ;./nrf24l01.h: 233:         if (config & 0x01)
[e $ ! != & -> _config `i -> 1 `i -> 0 `i 115  ]
"234
[; ;./nrf24l01.h: 234:             return;
[e $UE 114  ]
[e :U 115 ]
"236
[; ;./nrf24l01.h: 236:         config |= 0x01;
[e =| _config -> -> 1 `i `uc ]
"237
[; ;./nrf24l01.h: 237:         nrf_write_register(0x00, &config, 1);
[e ( _nrf_write_register (3 , , -> -> 0 `i `uc &U _config -> -> 1 `i `uc ]
"238
[; ;./nrf24l01.h: 238:     }
[e :UE 114 ]
}
"241
[; ;./nrf24l01.h: 241:     void nrf_set_tx_mode()
[v _nrf_set_tx_mode `(v ~T0 @X0 1 ef ]
"242
[; ;./nrf24l01.h: 242:     {
{
[e :U _nrf_set_tx_mode ]
[f ]
"243
[; ;./nrf24l01.h: 243:         uint8_t config;
[v _config `uc ~T0 @X0 1 a ]
"244
[; ;./nrf24l01.h: 244:         nrf_read_register(0x00, &config, 1);
[e ( _nrf_read_register (3 , , -> -> 0 `i `uc &U _config -> -> 1 `i `uc ]
"246
[; ;./nrf24l01.h: 246:         GPIO0 = 0;
[e = _GPIO0 -> -> 0 `i `b ]
"248
[; ;./nrf24l01.h: 248:         if (!(config & 0x01))
[e $ ! ! != & -> _config `i -> 1 `i -> 0 `i 117  ]
"249
[; ;./nrf24l01.h: 249:             return;
[e $UE 116  ]
[e :U 117 ]
"251
[; ;./nrf24l01.h: 251:         config &= ~0x01;
[e =& _config -> ~ -> 1 `i `uc ]
"252
[; ;./nrf24l01.h: 252:         nrf_write_register(0x00, &config, 1);
[e ( _nrf_write_register (3 , , -> -> 0 `i `uc &U _config -> -> 1 `i `uc ]
"254
[; ;./nrf24l01.h: 254:         GPIO0 = 0;
[e = _GPIO0 -> -> 0 `i `b ]
"255
[; ;./nrf24l01.h: 255:     }
[e :UE 116 ]
}
"258
[; ;./nrf24l01.h: 258:     uint8_t nrf_data_available()
[v _nrf_data_available `(uc ~T0 @X0 1 ef ]
"259
[; ;./nrf24l01.h: 259:     {
{
[e :U _nrf_data_available ]
[f ]
"260
[; ;./nrf24l01.h: 260:         uint8_t status = nrf_write_command(0b11111111);
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _nrf_write_command (1 -> -> 255 `i `uc ]
"261
[; ;./nrf24l01.h: 261:         return (status & 0x40) != 0;
[e ) -> -> != & -> _status `i -> 64 `i -> 0 `i `i `uc ]
[e $UE 118  ]
"262
[; ;./nrf24l01.h: 262:     }
[e :UE 118 ]
}
"265
[; ;./nrf24l01.h: 265:     void nrf_send(uint8_t *data, uint8_t len)
[v _nrf_send `(v ~T0 @X0 1 ef2`*uc`uc ]
"266
[; ;./nrf24l01.h: 266:     {
{
[e :U _nrf_send ]
"265
[; ;./nrf24l01.h: 265:     void nrf_send(uint8_t *data, uint8_t len)
[v _data `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"266
[; ;./nrf24l01.h: 266:     {
[f ]
"267
[; ;./nrf24l01.h: 267:         nrf_set_tx_mode();
[e ( _nrf_set_tx_mode ..  ]
"268
[; ;./nrf24l01.h: 268:         nrf_write_payload(data, len);
[e ( _nrf_write_payload (2 , _data _len ]
"271
[; ;./nrf24l01.h: 271:         uint8_t stat;
[v _stat `uc ~T0 @X0 1 a ]
"272
[; ;./nrf24l01.h: 272:         do
[e :U 122 ]
"273
[; ;./nrf24l01.h: 273:         {
{
"274
[; ;./nrf24l01.h: 274:             stat = nrf_write_command(0b11111111);
[e = _stat ( _nrf_write_command (1 -> -> 255 `i `uc ]
"275
[; ;./nrf24l01.h: 275:         } while ((stat & 0x20) == 0);
}
[e $ == & -> _stat `i -> 32 `i -> 0 `i 122  ]
[e :U 121 ]
"278
[; ;./nrf24l01.h: 278:         uint8_t clear = 0x20;
[v _clear `uc ~T0 @X0 1 a ]
[e = _clear -> -> 32 `i `uc ]
"279
[; ;./nrf24l01.h: 279:         nrf_write_register(0x07, &clear, 1);
[e ( _nrf_write_register (3 , , -> -> 7 `i `uc &U _clear -> -> 1 `i `uc ]
"280
[; ;./nrf24l01.h: 280:     }
[e :UE 119 ]
}
"283
[; ;./nrf24l01.h: 283:     uint8_t nrf_read(uint8_t *data, uint8_t len)
[v _nrf_read `(uc ~T0 @X0 1 ef2`*uc`uc ]
"284
[; ;./nrf24l01.h: 284:     {
{
[e :U _nrf_read ]
"283
[; ;./nrf24l01.h: 283:     uint8_t nrf_read(uint8_t *data, uint8_t len)
[v _data `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"284
[; ;./nrf24l01.h: 284:     {
[f ]
"285
[; ;./nrf24l01.h: 285:         uint8_t status = nrf_read_register(0b01100001, data, len);
[v _status `uc ~T0 @X0 1 a ]
[e = _status ( _nrf_read_register (3 , , -> -> 97 `i `uc _data _len ]
"288
[; ;./nrf24l01.h: 288:         nrf_write_command(0b11100010);
[e ( _nrf_write_command (1 -> -> 226 `i `uc ]
"289
[; ;./nrf24l01.h: 289:         uint8_t clear = 0x40;
[v _clear `uc ~T0 @X0 1 a ]
[e = _clear -> -> 64 `i `uc ]
"290
[; ;./nrf24l01.h: 290:         nrf_write_register(0x07, &clear, 1);
[e ( _nrf_write_register (3 , , -> -> 7 `i `uc &U _clear -> -> 1 `i `uc ]
"291
[; ;./nrf24l01.h: 291:         return status;
[e ) _status ]
[e $UE 123  ]
"292
[; ;./nrf24l01.h: 292:     }
[e :UE 123 ]
}
"16 main.c
[; ;main.c: 16: uint8_t RADIO_ADDR[5] = {0x01, 0x04, 0x06, 0x04, 0x05};
[v _RADIO_ADDR `uc ~T0 @X0 -> 5 `i e ]
[i _RADIO_ADDR
:U ..
-> -> 1 `i `uc
-> -> 4 `i `uc
-> -> 6 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
..
]
"20
[; ;main.c: 20: void send_data(uint8_t data){
[v _send_data `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _send_data ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
"21
[; ;main.c: 21:     GPIO2 = 1;
[e = _GPIO2 -> -> 1 `i `b ]
"22
[; ;main.c: 22:     _delay((unsigned long)((10)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"25
[; ;main.c: 25:     for (int i = 0; i < 8; i++)
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 125  ]
[e $U 126  ]
[e :U 125 ]
"26
[; ;main.c: 26:     {
{
"27
[; ;main.c: 27:         GPIO2 = (data >> i) & 1;
[e = _GPIO2 -> & >> -> _data `i _i -> 1 `i `b ]
"28
[; ;main.c: 28:         _delay((unsigned long)((10)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"29
[; ;main.c: 29:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 125  ]
[e :U 126 ]
}
"31
[; ;main.c: 31:     GPIO2 = 0;
[e = _GPIO2 -> -> 0 `i `b ]
"32
[; ;main.c: 32:     _delay((unsigned long)((50)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"33
[; ;main.c: 33: }
[e :UE 124 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"35
[; ;main.c: 35: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"36
[; ;main.c: 36: {
{
[e :U _main ]
[f ]
"37
[; ;main.c: 37:     ANSEL = 0;
[e = _ANSEL -> -> 0 `i `uc ]
"38
[; ;main.c: 38:     ADCON0 = 0;
[e = _ADCON0 -> -> 0 `i `uc ]
"39
[; ;main.c: 39:     CMCON = 0x07;
[e = _CMCON -> -> 7 `i `uc ]
"40
[; ;main.c: 40:     VRCON = 0;
[e = _VRCON -> -> 0 `i `uc ]
"42
[; ;main.c: 42:     TRISIO = 0;
[e = _TRISIO -> -> 0 `i `uc ]
"43
[; ;main.c: 43:     GPIO = 0;
[e = _GPIO -> -> 0 `i `uc ]
"46
[; ;main.c: 46:     SPI_init_master();
[e ( _SPI_init_master ..  ]
"49
[; ;main.c: 49:     nrf_setup(RADIO_ADDR, 5, 3);
[e ( _nrf_setup (3 , , &U _RADIO_ADDR -> -> 5 `i `uc -> -> 3 `i `uc ]
"51
[; ;main.c: 51:     nrf_set_tx_mode();
[e ( _nrf_set_tx_mode ..  ]
"53
[; ;main.c: 53:     while (1)
[e :U 130 ]
"54
[; ;main.c: 54:     {
{
"55
[; ;main.c: 55:         GPIO2 = 1;
[e = _GPIO2 -> -> 1 `i `b ]
[v F646 `uc ~T0 @X0 -> 3 `i s ]
[i F646
:U ..
"56
[; ;main.c: 56:         uint8_t data[3] = "SS";
-> 83 `c
-> 83 `c
-> 0 `c
..
]
[v _data `uc ~T0 @X0 -> 3 `i a ]
[e = _data F646 ]
"57
[; ;main.c: 57:         nrf_send(data, 3);
[e ( _nrf_send (2 , &U _data -> -> 3 `i `uc ]
"58
[; ;main.c: 58:         _delay((unsigned long)((400)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 400 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"59
[; ;main.c: 59:         GPIO2 = 0;
[e = _GPIO2 -> -> 0 `i `b ]
"60
[; ;main.c: 60:         _delay((unsigned long)((400)*(4000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 400 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"61
[; ;main.c: 61:     }
}
[e :U 129 ]
[e $U 130  ]
[e :U 131 ]
"62
[; ;main.c: 62: }
[e :UE 128 ]
}
