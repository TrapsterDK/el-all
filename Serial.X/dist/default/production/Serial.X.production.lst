

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 30 12:00:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 04/07/2022 GMT
    15                           ; 
    16                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0006                     _PORTB	set	6
   169     0013                     _SSPBUF	set	19
   170     0014                     _SSPCON	set	20
   171     0086                     _TRISB	set	134
   172     0094                     _SSPSTATbits	set	148
   173     043B                     _TRISC3	set	1083
   174     043D                     _TRISC5	set	1085
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2FAC   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_SPI_init_master:
   191     0070                     ??_SPI_init_master:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     ?_SPI_write:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_SPI_write:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_SPI_master:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     SPI_write@write:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211     0070                     	ds	1
   212     0071                     ??_SPI_master:
   213                           
   214                           ; 1 bytes @ 0x1
   215     0071                     	ds	3
   216     0074                     ??_main:
   217                           
   218                           	psect	maintext
   219     07AC                     __pmaintext:	
   220                           ; 1 bytes @ 0x4
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 61 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels required when called: 2
   246 ;; This function calls:
   247 ;;		_SPI_master
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     07AC                     _main:	
   254                           ;psect for function _main
   255                           
   256     07AC                     l691:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   259                           
   260                           
   261                           ;main.c: 62:     TRISB = 0b00000000;
   262     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   263     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   264     07AE  0186               	clrf	6	;volatile
   265     07AF                     l693:
   266                           
   267                           ;main.c: 65:     SPI_master();
   268     07AF  120A  118A  27C3  120A  118A  	fcall	_SPI_master
   269     07B4                     l57:
   270     07B4  120A  118A  2800   	ljmp	start
   271     07B7                     __end_of_main:
   272                           
   273                           	psect	text1
   274     07C3                     __ptext1:	
   275 ;; *************** function _SPI_master *****************
   276 ;; Defined at:
   277 ;;		line 33 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0
   293 ;;      Temps:          3       0       0       0       0
   294 ;;      Totals:         3       0       0       0       0
   295 ;;Total ram usage:        3 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; Hardware stack levels required when called: 1
   298 ;; This function calls:
   299 ;;		_SPI_init_master
   300 ;;		_SPI_write
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306     07C3                     _SPI_master:	
   307                           ;psect for function _SPI_master
   308                           
   309     07C3                     l669:	
   310                           ;incstack = 0
   311                           ; Regs used in _SPI_master: [wreg+status,2+status,0+pclath+cstack]
   312                           
   313                           
   314                           ;main.c: 34:     PORTB = 0b10000000;
   315     07C3  3080               	movlw	128
   316     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   317     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   318     07C6  0086               	movwf	6	;volatile
   319     07C7                     l671:
   320                           
   321                           ;main.c: 35:     SPI_init_master();
   322     07C7  120A  118A  27A3  120A  118A  	fcall	_SPI_init_master
   323     07CC                     l673:
   324                           
   325                           ;main.c: 37:         PORTB = 0b00110011;
   326     07CC  3033               	movlw	51
   327     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   328     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   329     07CF  0086               	movwf	6	;volatile
   330                           
   331                           ;main.c: 38:         SPI_write(0b00110011);
   332     07D0  3033               	movlw	51
   333     07D1  120A  118A  27B7  120A  118A  	fcall	_SPI_write
   334     07D6                     l675:
   335                           
   336                           ;main.c: 39:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   337     07D6  300D               	movlw	13
   338     07D7  00F3               	movwf	??_SPI_master+2
   339     07D8  30AF               	movlw	175
   340     07D9  00F2               	movwf	??_SPI_master+1
   341     07DA  30B6               	movlw	182
   342     07DB  00F1               	movwf	??_SPI_master
   343     07DC                     u37:
   344     07DC  0BF1               	decfsz	??_SPI_master,f
   345     07DD  2FDC               	goto	u37
   346     07DE  0BF2               	decfsz	??_SPI_master+1,f
   347     07DF  2FDC               	goto	u37
   348     07E0  0BF3               	decfsz	??_SPI_master+2,f
   349     07E1  2FDC               	goto	u37
   350     07E2  0000               	nop
   351     07E3                     l677:
   352                           
   353                           ;main.c: 40:         PORTB = 0b11001100;
   354     07E3  30CC               	movlw	204
   355     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   356     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   357     07E6  0086               	movwf	6	;volatile
   358                           
   359                           ;main.c: 41:         SPI_write(0b11001100);
   360     07E7  30CC               	movlw	204
   361     07E8  120A  118A  27B7  120A  118A  	fcall	_SPI_write
   362     07ED                     l679:
   363                           
   364                           ;main.c: 42:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   365     07ED  300D               	movlw	13
   366     07EE  00F3               	movwf	??_SPI_master+2
   367     07EF  30AF               	movlw	175
   368     07F0  00F2               	movwf	??_SPI_master+1
   369     07F1  30B6               	movlw	182
   370     07F2  00F1               	movwf	??_SPI_master
   371     07F3                     u47:
   372     07F3  0BF1               	decfsz	??_SPI_master,f
   373     07F4  2FF3               	goto	u47
   374     07F5  0BF2               	decfsz	??_SPI_master+1,f
   375     07F6  2FF3               	goto	u47
   376     07F7  0BF3               	decfsz	??_SPI_master+2,f
   377     07F8  2FF3               	goto	u47
   378     07F9  0000               	nop
   379     07FA  2FCC               	goto	l673
   380     07FB  0008               	return
   381     07FC                     __end_of_SPI_master:
   382                           
   383                           	psect	text2
   384     07B7                     __ptext2:	
   385 ;; *************** function _SPI_write *****************
   386 ;; Defined at:
   387 ;;		line 31 in file "./spi.h"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  write           1    wreg     unsigned char 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  write           1    0[COMMON] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         1       0       0       0       0
   405 ;;Total ram usage:        1 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_SPI_master
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414     07B7                     _SPI_write:	
   415                           ;psect for function _SPI_write
   416                           
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _SPI_write: [wreg]
   420                           ;SPI_write@write stored from wreg
   421     07B7  00F0               	movwf	SPI_write@write
   422     07B8                     l655:
   423                           
   424                           ;./spi.h: 32:     SSPBUF = write;
   425     07B8  0870               	movf	SPI_write@write,w
   426     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   427     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   428     07BB  0093               	movwf	19	;volatile
   429     07BC                     l25:	
   430                           ;./spi.h: 34:     while(!SSPSTATbits.BF);
   431                           
   432     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   433     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   434     07BE  1C14               	btfss	20,0	;volatile
   435     07BF  2FC1               	goto	u11
   436     07C0  2FC2               	goto	u10
   437     07C1                     u11:
   438     07C1  2FBC               	goto	l25
   439     07C2                     u10:
   440     07C2                     l28:
   441     07C2  0008               	return
   442     07C3                     __end_of_SPI_write:
   443                           
   444                           	psect	text3
   445     07A3                     __ptext3:	
   446 ;; *************** function _SPI_init_master *****************
   447 ;; Defined at:
   448 ;;		line 25 in file "./spi.h"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_SPI_master
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475     07A3                     _SPI_init_master:	
   476                           ;psect for function _SPI_init_master
   477                           
   478     07A3                     l649:	
   479                           ;incstack = 0
   480                           ; Regs used in _SPI_init_master: [wreg]
   481                           
   482                           
   483                           ;./spi.h: 26:     SSPCON = 0b00100000;
   484     07A3  3020               	movlw	32
   485     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   486     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   487     07A6  0094               	movwf	20	;volatile
   488     07A7                     l651:
   489                           
   490                           ;./spi.h: 27:     TRISC5 = 0;
   491     07A7  1683               	bsf	3,5	;RP0=1, select bank1
   492     07A8  1303               	bcf	3,6	;RP1=0, select bank1
   493     07A9  1287               	bcf	7,5	;volatile
   494     07AA                     l653:
   495                           
   496                           ;./spi.h: 28:     TRISC3 = 0;
   497     07AA  1187               	bcf	7,3	;volatile
   498     07AB                     l22:
   499     07AB  0008               	return
   500     07AC                     __end_of_SPI_init_master:
   501     007E                     btemp	set	126	;btemp
   502     007E                     wtemp0	set	126
   503                           
   504                           	psect	config
   505                           
   506                           ;Config register CONFIG @ 0x2007
   507                           ;	Oscillator Selection bits
   508                           ;	FOSC = HS, HS oscillator
   509                           ;	Watchdog Timer Enable bit
   510                           ;	WDTE = OFF, WDT disabled
   511                           ;	Power-up Timer Enable bit
   512                           ;	PWRTE = OFF, PWRT disabled
   513                           ;	Brown-out Reset Enable bit
   514                           ;	BOREN = OFF, BOR disabled
   515                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   516                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   517                           ;	Data EEPROM Memory Code Protection bit
   518                           ;	CPD = OFF, Data EEPROM code protection off
   519                           ;	Flash Program Memory Write Enable bits
   520                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   521                           ;	In-Circuit Debugger Mode bit
   522                           ;	DEBUG = 0x1, unprogrammed default
   523                           ;	Flash Program Memory Code Protection bit
   524                           ;	CP = OFF, Code protection off
   525     2007                     	org	8199
   526     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_master
    _SPI_master->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                         _SPI_master
 ---------------------------------------------------------------------------------
 (1) _SPI_master                                           3     3      0      15
                                              1 COMMON     3     3      0
                    _SPI_init_master
                          _SPI_write
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_master
     _SPI_init_master
     _SPI_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 30 12:00:09 2023

            _SSPSTATbits 0094                       l22 07AB                       l25 07BC  
                     l28 07C2                       l57 07B4                       u10 07C2  
                     u11 07C1                       u37 07DC                       u47 07F3  
             _SPI_master 07C3                      l651 07A7                      l653 07AA  
                    l655 07B8                      l671 07C7                      l649 07A3  
                    l673 07CC                      l675 07D6                      l691 07AC  
                    l677 07E3                      l669 07C3                      l693 07AF  
                    l679 07ED                     _main 07AC                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07B7              ?_SPI_master 0070  
                 ??_main 0074                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_write 07C3  
__end_of__initialization 07FC           __pcstackCOMMON 0070        ??_SPI_init_master 0070  
             __pmaintext 07AC           SPI_write@write 0070             ??_SPI_master 0071  
                __ptext1 07C3                  __ptext2 07B7                  __ptext3 07A3  
   end_of_initialization 07FC       __end_of_SPI_master 07FC                _SPI_write 07B7  
        _SPI_init_master 07A3      start_initialization 07FC               ?_SPI_write 0070  
              ___latbits 0002  __end_of_SPI_init_master 07AC              ??_SPI_write 0070  
       ?_SPI_init_master 0070  
