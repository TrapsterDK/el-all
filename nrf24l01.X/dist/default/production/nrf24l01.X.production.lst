

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Sep 05 15:19:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 04/07/2022 GMT
    16                           ; 
    17                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0006                     _PORTB	set	6
   170     0013                     _SSPBUF	set	19
   171     0014                     _SSPCON	set	20
   172     0038                     _RC0	set	56
   173     0039                     _RC1	set	57
   174     003A                     _RC2	set	58
   175     0086                     _TRISB	set	134
   176     0094                     _SSPSTATbits	set	148
   177     043A                     _TRISC2	set	1082
   178     0439                     _TRISC1	set	1081
   179     0438                     _TRISC0	set	1080
   180     043B                     _TRISC3	set	1083
   181     043D                     _TRISC5	set	1085
   182                           
   183                           	psect	strings
   184     0003                     __pstrings:
   185     0003                     stringtab:
   186     0003                     __stringtab:
   187                           
   188                           ;	String table - string pointers are 1 byte each
   189     0003  1BFF               	btfsc	btemp+1,7
   190     0004  280D               	ljmp	stringcode
   191     0005  1383               	bcf	3,7
   192     0006  187F               	btfsc	btemp+1,0
   193     0007  1783               	bsf	3,7
   194     0008  0800               	movf	0,w
   195     0009  0A84               	incf	4,f
   196     000A  1903               	skipnz
   197     000B  0AFF               	incf	btemp+1,f
   198     000C  0008               	return
   199     000D                     stringcode:
   200     000D                     stringdir:
   201     000D  3000               	movlw	high stringdir
   202     000E  008A               	movwf	10
   203     000F  0804               	movf	4,w
   204     0010  0A84               	incf	4,f
   205     0011  0782               	addwf	2,f
   206     0012                     __stringbase:
   207     0012  3400               	retlw	0
   208     0013                     __end_of__stringtab:
   209     0013                     STR_1:
   210     0013  346D               	retlw	109	;'m'
   211     0014  3479               	retlw	121	;'y'
   212     0015  3461               	retlw	97	;'a'
   213     0016  3464               	retlw	100	;'d'
   214     0017  3472               	retlw	114	;'r'
   215     0018  3400               	retlw	0
   216     0013                     
   217                           	psect	cinit
   218     07FC                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07FC                     __initialization:
   222     07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FC                     __end_of__initialization:
   226     07FC  0183               	clrf	3
   227     07FD  120A  118A  2FB1   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	cstackCOMMON
   230     0070                     __pcstackCOMMON:
   231     0070                     ?_SPI_init_master:
   232     0070                     ??_SPI_init_master:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_SPI_write:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ??_SPI_write:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_SPI_read:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ??_SPI_read:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     SPI_write@write:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255     0070                     	ds	1
   256     0071                     ??_main:
   257                           
   258                           ; 1 bytes @ 0x1
   259     0071                     	ds	3
   260                           
   261                           	psect	maintext
   262     07B1                     __pmaintext:	
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 185 in file "main.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0
   284 ;;      Temps:          3       0       0       0       0
   285 ;;      Totals:         3       0       0       0       0
   286 ;;Total ram usage:        3 bytes
   287 ;; Hardware stack levels required when called: 1
   288 ;; This function calls:
   289 ;;		_SPI_init_master
   290 ;;		_SPI_read
   291 ;;		_SPI_write
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     07B1                     _main:	
   298                           ;psect for function _main
   299                           
   300     07B1                     l817:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   303                           
   304                           
   305                           ;main.c: 187:     TRISB = 0b00000000;
   306     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   307     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   308     07B3  0186               	clrf	6	;volatile
   309     07B4                     l819:
   310                           
   311                           ;main.c: 190:     SPI_init_master();
   312     07B4  120A  118A  279C  120A  118A  	fcall	_SPI_init_master
   313     07B9                     l821:
   314                           
   315                           ;main.c: 191:     TRISC0 = 1;
   316     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   317     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   318     07BB  1407               	bsf	7,0	;volatile
   319     07BC                     l823:
   320                           
   321                           ;main.c: 192:     TRISC1 = 0;
   322     07BC  1087               	bcf	7,1	;volatile
   323     07BD                     l825:
   324                           
   325                           ;main.c: 193:     TRISC2 = 0;
   326     07BD  1107               	bcf	7,2	;volatile
   327     07BE                     l827:
   328                           
   329                           ;main.c: 194:     RC1 = 0;
   330     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   331     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   332     07C0  1087               	bcf	7,1	;volatile
   333     07C1                     l829:
   334                           
   335                           ;main.c: 195:     RC2 = 1;
   336     07C1  1507               	bsf	7,2	;volatile
   337     07C2                     l831:
   338                           
   339                           ;main.c: 198:         PORTB = 0b10101010;
   340     07C2  30AA               	movlw	170
   341     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   342     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   343     07C5  0086               	movwf	6	;volatile
   344     07C6                     l833:
   345                           
   346                           ;main.c: 199:         RC2 = 0;
   347     07C6  1107               	bcf	7,2	;volatile
   348     07C7                     l835:
   349                           
   350                           ;main.c: 201:         SPI_write(0b00000001);
   351     07C7  3001               	movlw	1
   352     07C8  120A  118A  27A5  120A  118A  	fcall	_SPI_write
   353     07CD                     l837:
   354                           
   355                           ;main.c: 203:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   356     07CD  300D               	movlw	13
   357     07CE  00F3               	movwf	??_main+2
   358     07CF  30AF               	movlw	175
   359     07D0  00F2               	movwf	??_main+1
   360     07D1  30B6               	movlw	182
   361     07D2  00F1               	movwf	??_main
   362     07D3                     u97:
   363     07D3  0BF1               	decfsz	??_main,f
   364     07D4  2FD3               	goto	u97
   365     07D5  0BF2               	decfsz	??_main+1,f
   366     07D6  2FD3               	goto	u97
   367     07D7  0BF3               	decfsz	??_main+2,f
   368     07D8  2FD3               	goto	u97
   369     07D9  0000               	nop
   370     07DA                     l839:
   371                           
   372                           ;main.c: 204:         SPI_write(0b00000000);
   373     07DA  3000               	movlw	0
   374     07DB  120A  118A  27A5  120A  118A  	fcall	_SPI_write
   375     07E0                     l841:
   376                           
   377                           ;main.c: 206:         RC2 = 1;
   378     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   379     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   380     07E2  1507               	bsf	7,2	;volatile
   381     07E3                     l843:
   382                           
   383                           ;main.c: 212:             PORTB = SPI_read();
   384     07E3  120A  118A  2798  120A  118A  	fcall	_SPI_read
   385     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   386     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   387     07EA  0086               	movwf	6	;volatile
   388     07EB                     l845:
   389                           
   390                           ;main.c: 213:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   391     07EB  300D               	movlw	13
   392     07EC  00F3               	movwf	??_main+2
   393     07ED  30AF               	movlw	175
   394     07EE  00F2               	movwf	??_main+1
   395     07EF  30B6               	movlw	182
   396     07F0  00F1               	movwf	??_main
   397     07F1                     u107:
   398     07F1  0BF1               	decfsz	??_main,f
   399     07F2  2FF1               	goto	u107
   400     07F3  0BF2               	decfsz	??_main+1,f
   401     07F4  2FF1               	goto	u107
   402     07F5  0BF3               	decfsz	??_main+2,f
   403     07F6  2FF1               	goto	u107
   404     07F7  0000               	nop
   405     07F8  2FC2               	goto	l831
   406     07F9  120A  118A  2800   	ljmp	start
   407     07FC                     __end_of_main:
   408                           
   409                           	psect	text1
   410     07A5                     __ptext1:	
   411 ;; *************** function _SPI_write *****************
   412 ;; Defined at:
   413 ;;		line 31 in file "./spi.h"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  write           1    wreg     unsigned char 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  write           1    0[COMMON] unsigned char 
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         1       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0
   430 ;;      Totals:         1       0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;;		_radio_spi_command_array
   438 ;;		_radio_spi_command_single
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     07A5                     _SPI_write:	
   443                           ;psect for function _SPI_write
   444                           
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _SPI_write: [wreg]
   448                           ;SPI_write@write stored from wreg
   449     07A5  00F0               	movwf	SPI_write@write
   450     07A6                     l715:
   451                           
   452                           ;./spi.h: 32:     SSPBUF = write;
   453     07A6  0870               	movf	SPI_write@write,w
   454     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   455     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   456     07A9  0093               	movwf	19	;volatile
   457     07AA                     l37:	
   458                           ;./spi.h: 34:     while(!SSPSTATbits.BF);
   459                           
   460     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   461     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   462     07AC  1C14               	btfss	20,0	;volatile
   463     07AD  2FAF               	goto	u21
   464     07AE  2FB0               	goto	u20
   465     07AF                     u21:
   466     07AF  2FAA               	goto	l37
   467     07B0                     u20:
   468     07B0                     l40:
   469     07B0  0008               	return
   470     07B1                     __end_of_SPI_write:
   471                           
   472                           	psect	text2
   473     0798                     __ptext2:	
   474 ;; *************** function _SPI_read *****************
   475 ;; Defined at:
   476 ;;		line 45 in file "./spi.h"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      unsigned char 
   483 ;; Registers used:
   484 ;;		wreg
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;;		_radio_has_recieved_packet
   501 ;;		_radio_get_packets
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     0798                     _SPI_read:	
   506                           ;psect for function _SPI_read
   507                           
   508     0798                     l717:	
   509                           ;incstack = 0
   510                           ; Regs used in _SPI_read: [wreg]
   511                           
   512                           
   513                           ;./spi.h: 46:     return SSPBUF;
   514     0798  1283               	bcf	3,5	;RP0=0, select bank0
   515     0799  1303               	bcf	3,6	;RP1=0, select bank0
   516     079A  0813               	movf	19,w	;volatile
   517     079B                     l52:
   518     079B  0008               	return
   519     079C                     __end_of_SPI_read:
   520                           
   521                           	psect	text3
   522     079C                     __ptext3:	
   523 ;; *************** function _SPI_init_master *****************
   524 ;; Defined at:
   525 ;;		line 25 in file "./spi.h"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;;		_radio_reciever_start
   550 ;;		_radio_transmitter_start
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554     079C                     _SPI_init_master:	
   555                           ;psect for function _SPI_init_master
   556                           
   557     079C                     l709:	
   558                           ;incstack = 0
   559                           ; Regs used in _SPI_init_master: [wreg]
   560                           
   561                           
   562                           ;./spi.h: 26:     SSPCON = 0b00100010;
   563     079C  3022               	movlw	34
   564     079D  1283               	bcf	3,5	;RP0=0, select bank0
   565     079E  1303               	bcf	3,6	;RP1=0, select bank0
   566     079F  0094               	movwf	20	;volatile
   567     07A0                     l711:
   568                           
   569                           ;./spi.h: 27:     TRISC5 = 0;
   570     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   571     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   572     07A2  1287               	bcf	7,5	;volatile
   573     07A3                     l713:
   574                           
   575                           ;./spi.h: 28:     TRISC3 = 0;
   576     07A3  1187               	bcf	7,3	;volatile
   577     07A4                     l34:
   578     07A4  0008               	return
   579     07A5                     __end_of_SPI_init_master:
   580     007E                     btemp	set	126	;btemp
   581     007E                     wtemp0	set	126
   582                           
   583                           	psect	config
   584                           
   585                           ;Config register CONFIG @ 0x2007
   586                           ;	Oscillator Selection bits
   587                           ;	FOSC = HS, HS oscillator
   588                           ;	Watchdog Timer Enable bit
   589                           ;	WDTE = OFF, WDT disabled
   590                           ;	Power-up Timer Enable bit
   591                           ;	PWRTE = OFF, PWRT disabled
   592                           ;	Brown-out Reset Enable bit
   593                           ;	BOREN = OFF, BOR disabled
   594                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   595                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   596                           ;	Data EEPROM Memory Code Protection bit
   597                           ;	CPD = OFF, Data EEPROM code protection off
   598                           ;	Flash Program Memory Write Enable bits
   599                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   600                           ;	In-Circuit Debugger Mode bit
   601                           ;	DEBUG = 0x1, unprogrammed default
   602                           ;	Flash Program Memory Code Protection bit
   603                           ;	CP = OFF, Code protection off
   604     2007                     	org	8199
   605     2007  3F3A               	dw	16186

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                    _SPI_init_master
                           _SPI_read
                          _SPI_write
 ---------------------------------------------------------------------------------
 (1) _SPI_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init_master
   _SPI_read
   _SPI_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Sep 05 15:19:05 2022

                      pc 0002              _SSPSTATbits 0094                       l40 07B0  
                     l34 07A4                       l52 079B                       l37 07AA  
                     u20 07B0                       u21 07AF                       u97 07D3  
                     fsr 0004                      l711 07A0                      l713 07A3  
                    l715 07A6                      l709 079C                      l717 0798  
                    l821 07B9                      l831 07C2                      l823 07BC  
                    l841 07E0                      l833 07C6                      l825 07BD  
                    l817 07B1                      l843 07E3                      l835 07C7  
                    l827 07BE                      l819 07B4                      l845 07EB  
                    l837 07CD                      l829 07C1                      l839 07DA  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    u107 07F1                      indf 0000                     STR_1 0013  
                   _main 07B1                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A         __end_of_SPI_read 079C                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_write 07B1  
__end_of__initialization 07FC           __pcstackCOMMON 0070                ?_SPI_read 0070  
      ??_SPI_init_master 0070               __pmaintext 07B1           SPI_write@write 0070  
             ??_SPI_read 0070               __stringtab 0003                  __ptext1 07A5  
                __ptext2 0798                  __ptext3 079C     end_of_initialization 07FC  
              _SPI_write 07A5          _SPI_init_master 079C      start_initialization 07FC  
             ?_SPI_write 0070                ___latbits 0002  __end_of_SPI_init_master 07A5  
              __pstrings 0003              ??_SPI_write 0070              __stringbase 0012  
               _SPI_read 0798         ?_SPI_init_master 0070       __end_of__stringtab 0013  
              stringcode 000D                 stringdir 000D                 stringtab 0003  
