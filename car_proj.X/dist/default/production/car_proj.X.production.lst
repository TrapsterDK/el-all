

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 23 13:27:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Version 2.40
    33                           ; Generated 04/07/2022 GMT
    34                           ; 
    35                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     0000                     	;# 
   128     0001                     	;# 
   129     0002                     	;# 
   130     0003                     	;# 
   131     0004                     	;# 
   132     0005                     	;# 
   133     0006                     	;# 
   134     0007                     	;# 
   135     0008                     	;# 
   136     0009                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000D                     	;# 
   141     000E                     	;# 
   142     000E                     	;# 
   143     000F                     	;# 
   144     0010                     	;# 
   145     0011                     	;# 
   146     0012                     	;# 
   147     0013                     	;# 
   148     0014                     	;# 
   149     0015                     	;# 
   150     0015                     	;# 
   151     0016                     	;# 
   152     0017                     	;# 
   153     0018                     	;# 
   154     0019                     	;# 
   155     001A                     	;# 
   156     001B                     	;# 
   157     001B                     	;# 
   158     001C                     	;# 
   159     001D                     	;# 
   160     001E                     	;# 
   161     001F                     	;# 
   162     0081                     	;# 
   163     0085                     	;# 
   164     0086                     	;# 
   165     0087                     	;# 
   166     0088                     	;# 
   167     0089                     	;# 
   168     008C                     	;# 
   169     008D                     	;# 
   170     008E                     	;# 
   171     0091                     	;# 
   172     0092                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009C                     	;# 
   178     009D                     	;# 
   179     009E                     	;# 
   180     009F                     	;# 
   181     010C                     	;# 
   182     010D                     	;# 
   183     010E                     	;# 
   184     010F                     	;# 
   185     018C                     	;# 
   186     018D                     	;# 
   187     0000                     	;# 
   188     0001                     	;# 
   189     0002                     	;# 
   190     0003                     	;# 
   191     0004                     	;# 
   192     0005                     	;# 
   193     0006                     	;# 
   194     0007                     	;# 
   195     0008                     	;# 
   196     0009                     	;# 
   197     000A                     	;# 
   198     000B                     	;# 
   199     000C                     	;# 
   200     000D                     	;# 
   201     000E                     	;# 
   202     000E                     	;# 
   203     000F                     	;# 
   204     0010                     	;# 
   205     0011                     	;# 
   206     0012                     	;# 
   207     0013                     	;# 
   208     0014                     	;# 
   209     0015                     	;# 
   210     0015                     	;# 
   211     0016                     	;# 
   212     0017                     	;# 
   213     0018                     	;# 
   214     0019                     	;# 
   215     001A                     	;# 
   216     001B                     	;# 
   217     001B                     	;# 
   218     001C                     	;# 
   219     001D                     	;# 
   220     001E                     	;# 
   221     001F                     	;# 
   222     0081                     	;# 
   223     0085                     	;# 
   224     0086                     	;# 
   225     0087                     	;# 
   226     0088                     	;# 
   227     0089                     	;# 
   228     008C                     	;# 
   229     008D                     	;# 
   230     008E                     	;# 
   231     0091                     	;# 
   232     0092                     	;# 
   233     0093                     	;# 
   234     0094                     	;# 
   235     0098                     	;# 
   236     0099                     	;# 
   237     009C                     	;# 
   238     009D                     	;# 
   239     009E                     	;# 
   240     009F                     	;# 
   241     010C                     	;# 
   242     010D                     	;# 
   243     010E                     	;# 
   244     010F                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247                           
   248                           	psect	idataBANK0
   249     07F4                     __pidataBANK0:
   250                           
   251                           ;initializer for _a_sek
   252     07F4  340F               	retlw	15
   253     07F5  3400               	retlw	0
   254                           
   255                           ;initializer for _alarm
   256     07F6  3401               	retlw	1
   257                           
   258                           	psect	strings
   259     0800                     __pstrings:
   260     0800                     stringtab:
   261     0800                     __stringtab:
   262                           
   263                           ;	String table - string pointers are 1 byte each
   264     0800  1BFF               	btfsc	btemp+1,7
   265     0801  280A               	ljmp	stringcode
   266     0802  1383               	bcf	3,7
   267     0803  187F               	btfsc	btemp+1,0
   268     0804  1783               	bsf	3,7
   269     0805  0800               	movf	0,w
   270     0806  0A84               	incf	4,f
   271     0807  1903               	skipnz
   272     0808  0AFF               	incf	btemp+1,f
   273     0809  0008               	return
   274     080A                     stringcode:
   275     080A                     stringdir:
   276     080A  3008               	movlw	high stringdir
   277     080B  008A               	movwf	10
   278     080C  0804               	movf	4,w
   279     080D  0A84               	incf	4,f
   280     080E  0782               	addwf	2,f
   281     080F                     __stringbase:
   282     080F  3400               	retlw	0
   283     0810                     __end_of__stringtab:
   284     0810                     _dpowers:
   285     0810  3401               	retlw	1
   286     0811  3400               	retlw	0
   287     0812  340A               	retlw	10
   288     0813  3400               	retlw	0
   289     0814  3464               	retlw	100
   290     0815  3400               	retlw	0
   291     0816  34E8               	retlw	232
   292     0817  3403               	retlw	3
   293     0818  3410               	retlw	16
   294     0819  3427               	retlw	39
   295     081A                     __end_of_dpowers:
   296     0010                     _T1CONbits	set	16
   297     000E                     _TMR1L	set	14
   298     000F                     _TMR1H	set	15
   299     0010                     _T1CON	set	16
   300     000B                     _INTCON	set	11
   301     0001                     _TMR0	set	1
   302     0034                     _RB4	set	52
   303     0033                     _RB3	set	51
   304     0039                     _RC1	set	57
   305     0035                     _RB5	set	53
   306     0032                     _RB2	set	50
   307     005A                     _TMR0IF	set	90
   308     0048                     _RE0	set	72
   309     0049                     _RE1	set	73
   310     0047                     _RD7	set	71
   311     0046                     _RD6	set	70
   312     0045                     _RD5	set	69
   313     0044                     _RD4	set	68
   314     0087                     _TRISC	set	135
   315     0086                     _TRISB	set	134
   316     009F                     _ADCON1	set	159
   317     009C                     _CMCON	set	156
   318     0089                     _TRISE	set	137
   319     0088                     _TRISD	set	136
   320     0081                     _OPTION_REG	set	129
   321     081A                     STR_1:
   322     081A  3425               	retlw	37	;'%'
   323     081B  3430               	retlw	48	;'0'
   324     081C  3432               	retlw	50	;'2'
   325     081D  3464               	retlw	100	;'d'
   326     081E  343A               	retlw	58	;':'
   327     081F  3425               	retlw	37	;'%'
   328     0820  3430               	retlw	48	;'0'
   329     0821  3432               	retlw	50	;'2'
   330     0822  3464               	retlw	100	;'d'
   331     0823  343A               	retlw	58	;':'
   332     0824  3425               	retlw	37	;'%'
   333     0825  3430               	retlw	48	;'0'
   334     0826  3432               	retlw	50	;'2'
   335     0827  3464               	retlw	100	;'d'
   336     0828  3400               	retlw	0
   337     0829                     STR_4:
   338     0829  3461               	retlw	97	;'a'
   339     082A  346C               	retlw	108	;'l'
   340     082B  343A               	retlw	58	;':'
   341     082C  3400               	retlw	0
   342     082D                     STR_3:
   343     082D  346B               	retlw	107	;'k'
   344     082E  346C               	retlw	108	;'l'
   345     082F  343A               	retlw	58	;':'
   346     0830  3400               	retlw	0
   347     0831                     STR_5:
   348     0831  3421               	retlw	33	;'!'
   349     0832  3400               	retlw	0
   350     0833                     STR_6:
   351     0833  3441               	retlw	65	;'A'
   352     0834  3400               	retlw	0
   353     081A                     
   354                           	psect	cinit
   355     0011                     start_initialization:	
   356                           ; #config settings
   357                           
   358     0011                     __initialization:
   359                           
   360                           ; Initialize objects allocated to BANK0
   361     0011  120A  118A  27F4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   362     0016  00EB               	movwf	__pdataBANK0& (0+127)
   363     0017  120A  118A  27F5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   364     001C  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   365     001D  120A  118A  27F6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   366     0022  00ED               	movwf	(__pdataBANK0+2)& (0+127)
   367                           
   368                           ; Clear objects allocated to BANK0
   369     0023  01DC               	clrf	__pbssBANK0& (0+127)
   370     0024  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   371     0025  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   372     0026  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   373     0027  01E0               	clrf	(__pbssBANK0+4)& (0+127)
   374     0028  01E1               	clrf	(__pbssBANK0+5)& (0+127)
   375     0029  01E2               	clrf	(__pbssBANK0+6)& (0+127)
   376     002A  01E3               	clrf	(__pbssBANK0+7)& (0+127)
   377     002B  01E4               	clrf	(__pbssBANK0+8)& (0+127)
   378     002C  01E5               	clrf	(__pbssBANK0+9)& (0+127)
   379     002D  01E6               	clrf	(__pbssBANK0+10)& (0+127)
   380     002E  01E7               	clrf	(__pbssBANK0+11)& (0+127)
   381     002F  01E8               	clrf	(__pbssBANK0+12)& (0+127)
   382     0030  01E9               	clrf	(__pbssBANK0+13)& (0+127)
   383     0031  01EA               	clrf	(__pbssBANK0+14)& (0+127)
   384                           
   385                           ; Clear objects allocated to COMMON
   386     0032  01F9               	clrf	__pbssCOMMON& (0+127)
   387     0033  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   388     0034                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391     0034                     __end_of__initialization:
   392     0034  0183               	clrf	3
   393     0035  120A  118A  2D6E   	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396     0079                     __pbssCOMMON:
   397     0079                     _antal:
   398     0079                     	ds	2
   399                           
   400                           	psect	bssBANK0
   401     005C                     __pbssBANK0:
   402     005C                     _drive_timer:
   403     005C                     	ds	2
   404     005E                     _update_timer:
   405     005E                     	ds	2
   406     0060                     _a_tim:
   407     0060                     	ds	2
   408     0062                     _a_min:
   409     0062                     	ds	2
   410     0064                     _tim:
   411     0064                     	ds	2
   412     0066                     _min:
   413     0066                     	ds	2
   414     0068                     _sek:
   415     0068                     	ds	2
   416     006A                     _drive_mode:
   417     006A                     	ds	1
   418                           
   419                           	psect	dataBANK0
   420     006B                     __pdataBANK0:
   421     006B                     _a_sek:
   422     006B                     	ds	2
   423     006D                     _alarm:
   424     006D                     	ds	1
   425                           
   426                           	psect	cstackCOMMON
   427     0070                     __pcstackCOMMON:
   428     0070                     ?_isdigit:
   429     0070                     ?_LCD_Out:	
   430                           ; 1 bit 
   431                           
   432     0070                     ?_LCD_Write:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_LCD_Init:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_LCD_putc:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_update_screen:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_ISR:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 2 bytes @ 0x0
   455     0070                     	ds	3
   456     0073                     ??_isdigit:
   457     0073                     ??_LCD_Out:	
   458                           ; 1 bytes @ 0x3
   459                           
   460     0073                     ?___wmul:	
   461                           ; 1 bytes @ 0x3
   462                           
   463     0073                     ?___lwdiv:	
   464                           ; 2 bytes @ 0x3
   465                           
   466     0073                     ?___xxtofl:	
   467                           ; 2 bytes @ 0x3
   468                           
   469     0073                     LCD_Out@c:	
   470                           ; 4 bytes @ 0x3
   471                           
   472     0073                     _isdigit$635:	
   473                           ; 1 bytes @ 0x3
   474                           
   475     0073                     ___wmul@multiplier:	
   476                           ; 1 bytes @ 0x3
   477                           
   478     0073                     ___lwdiv@divisor:	
   479                           ; 2 bytes @ 0x3
   480                           
   481     0073                     ___xxtofl@val:	
   482                           ; 2 bytes @ 0x3
   483                           
   484                           
   485                           ; 4 bytes @ 0x3
   486     0073                     	ds	1
   487     0074                     ??_LCD_Write:
   488     0074                     ??_LCD_putc:	
   489                           ; 1 bytes @ 0x4
   490                           
   491     0074                     isdigit@c:	
   492                           ; 1 bytes @ 0x4
   493                           
   494                           
   495                           ; 1 bytes @ 0x4
   496     0074                     	ds	1
   497     0075                     LCD_putc@c:
   498     0075                     ___wmul@multiplicand:	
   499                           ; 1 bytes @ 0x5
   500                           
   501     0075                     ___lwdiv@dividend:	
   502                           ; 2 bytes @ 0x5
   503                           
   504                           
   505                           ; 2 bytes @ 0x5
   506     0075                     	ds	1
   507     0076                     ?_LCD_putrs:
   508     0076                     LCD_Write@c:	
   509                           ; 1 bytes @ 0x6
   510                           
   511     0076                     LCD_putrs@a:	
   512                           ; 1 bytes @ 0x6
   513                           
   514                           
   515                           ; 2 bytes @ 0x6
   516     0076                     	ds	1
   517     0077                     ??_LCD_Init:
   518     0077                     ??___wmul:	
   519                           ; 1 bytes @ 0x7
   520                           
   521     0077                     ??___lwdiv:	
   522                           ; 1 bytes @ 0x7
   523                           
   524     0077                     ___fltol@sign1:	
   525                           ; 1 bytes @ 0x7
   526                           
   527     0077                     ___wmul@product:	
   528                           ; 1 bytes @ 0x7
   529                           
   530                           
   531                           ; 2 bytes @ 0x7
   532     0077                     	ds	1
   533     0078                     ??___lwmod:
   534     0078                     ___fltol@exp1:	
   535                           ; 1 bytes @ 0x8
   536                           
   537                           
   538                           ; 1 bytes @ 0x8
   539     0078                     	ds	1
   540     0079                     ??_update_screen:
   541                           
   542                           	psect	cstackBANK0
   543     0020                     __pcstackBANK0:	
   544                           ; 1 bytes @ 0x9
   545                           
   546     0020                     ??_LCD_putrs:
   547     0020                     ??___xxtofl:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0020                     LCD_Init@cmd:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0020                     ___lwdiv@counter:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 1 bytes @ 0x0
   558     0020                     	ds	1
   559     0021                     ___lwdiv@quotient:
   560                           
   561                           ; 2 bytes @ 0x1
   562     0021                     	ds	2
   563     0023                     ?___lwmod:
   564     0023                     LCD_putrs@i:	
   565                           ; 2 bytes @ 0x3
   566                           
   567     0023                     ___lwmod@divisor:	
   568                           ; 2 bytes @ 0x3
   569                           
   570                           
   571                           ; 2 bytes @ 0x3
   572     0023                     	ds	1
   573     0024                     ___xxtofl@sign:
   574                           
   575                           ; 1 bytes @ 0x4
   576     0024                     	ds	1
   577     0025                     ___xxtofl@exp:
   578     0025                     ___lwmod@dividend:	
   579                           ; 1 bytes @ 0x5
   580                           
   581                           
   582                           ; 2 bytes @ 0x5
   583     0025                     	ds	1
   584     0026                     ___xxtofl@arg:
   585                           
   586                           ; 4 bytes @ 0x6
   587     0026                     	ds	1
   588     0027                     ___lwmod@counter:
   589                           
   590                           ; 1 bytes @ 0x7
   591     0027                     	ds	1
   592     0028                     ?_sprintf:
   593     0028                     sprintf@f:	
   594                           ; 2 bytes @ 0x8
   595                           
   596                           
   597                           ; 1 bytes @ 0x8
   598     0028                     	ds	2
   599     002A                     ?___fldiv:
   600     002A                     ___fldiv@a:	
   601                           ; 4 bytes @ 0xA
   602                           
   603                           
   604                           ; 4 bytes @ 0xA
   605     002A                     	ds	4
   606     002E                     ___fldiv@b:
   607                           
   608                           ; 4 bytes @ 0xE
   609     002E                     	ds	1
   610     002F                     ??_sprintf:
   611                           
   612                           ; 1 bytes @ 0xF
   613     002F                     	ds	3
   614     0032                     ??___fldiv:
   615     0032                     sprintf@ap:	
   616                           ; 1 bytes @ 0x12
   617                           
   618                           
   619                           ; 1 bytes @ 0x12
   620     0032                     	ds	1
   621     0033                     sprintf@prec:
   622                           
   623                           ; 1 bytes @ 0x13
   624     0033                     	ds	1
   625     0034                     sprintf@val:
   626                           
   627                           ; 2 bytes @ 0x14
   628     0034                     	ds	2
   629     0036                     sprintf@flag:
   630                           
   631                           ; 1 bytes @ 0x16
   632     0036                     	ds	1
   633     0037                     sprintf@width:
   634     0037                     ___fldiv@rem:	
   635                           ; 2 bytes @ 0x17
   636                           
   637                           
   638                           ; 4 bytes @ 0x17
   639     0037                     	ds	2
   640     0039                     sprintf@sp:
   641                           
   642                           ; 1 bytes @ 0x19
   643     0039                     	ds	1
   644     003A                     sprintf@c:
   645                           
   646                           ; 1 bytes @ 0x1A
   647     003A                     	ds	1
   648     003B                     ___fldiv@sign:
   649     003B                     update_screen@a_str:	
   650                           ; 1 bytes @ 0x1B
   651                           
   652                           
   653                           ; 9 bytes @ 0x1B
   654     003B                     	ds	1
   655     003C                     ___fldiv@new_exp:
   656                           
   657                           ; 2 bytes @ 0x1C
   658     003C                     	ds	2
   659     003E                     ___fldiv@grs:
   660                           
   661                           ; 4 bytes @ 0x1E
   662     003E                     	ds	4
   663     0042                     ___fldiv@bexp:
   664                           
   665                           ; 1 bytes @ 0x22
   666     0042                     	ds	1
   667     0043                     ___fldiv@aexp:
   668                           
   669                           ; 1 bytes @ 0x23
   670     0043                     	ds	1
   671     0044                     ?___fltol:
   672     0044                     ___fltol@f1:	
   673                           ; 4 bytes @ 0x24
   674                           
   675     0044                     update_screen@str:	
   676                           ; 4 bytes @ 0x24
   677                           
   678                           
   679                           ; 9 bytes @ 0x24
   680     0044                     	ds	4
   681     0048                     ??___fltol:
   682                           
   683                           ; 1 bytes @ 0x28
   684     0048                     	ds	5
   685     004D                     _update_screen$127:
   686                           
   687                           ; 2 bytes @ 0x2D
   688     004D                     	ds	2
   689     004F                     _update_screen$128:
   690                           
   691                           ; 2 bytes @ 0x2F
   692     004F                     	ds	2
   693     0051                     _update_screen$129:
   694                           
   695                           ; 2 bytes @ 0x31
   696     0051                     	ds	2
   697     0053                     _update_screen$130:
   698                           
   699                           ; 2 bytes @ 0x33
   700     0053                     	ds	2
   701     0055                     _update_screen$131:
   702                           
   703                           ; 2 bytes @ 0x35
   704     0055                     	ds	2
   705     0057                     _update_screen$132:
   706                           
   707                           ; 2 bytes @ 0x37
   708     0057                     	ds	2
   709     0059                     ??_main:
   710                           
   711                           ; 1 bytes @ 0x39
   712     0059                     	ds	1
   713     005A                     main@dist:
   714                           
   715                           ; 2 bytes @ 0x3A
   716     005A                     	ds	2
   717                           
   718                           	psect	maintext
   719     056E                     __pmaintext:	
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 136 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  dist            2   58[BANK0 ] int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2  291[None  ] int 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : B00/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       2       0       0       0
   741 ;;      Temps:          0       1       0       0       0
   742 ;;      Totals:         0       3       0       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels required when called: 5
   745 ;; This function calls:
   746 ;;		_LCD_Init
   747 ;;		___fldiv
   748 ;;		___fltol
   749 ;;		___xxtofl
   750 ;;		_update_screen
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756     056E                     _main:	
   757                           ;psect for function _main
   758                           
   759     056E                     l2935:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 138:     OPTION_REG = 0b10000100;
   765     056E  3084               	movlw	132
   766     056F  1683               	bsf	3,5	;RP0=1, select bank1
   767     0570  1303               	bcf	3,6	;RP1=0, select bank1
   768     0571  0081               	movwf	1	;volatile
   769                           
   770                           ;main.c: 139:     INTCON = 0b11100000;
   771     0572  30E0               	movlw	224
   772     0573  008B               	movwf	11	;volatile
   773                           
   774                           ;main.c: 140:     TMR0 = 178;
   775     0574  30B2               	movlw	178
   776     0575  1283               	bcf	3,5	;RP0=0, select bank0
   777     0576  1303               	bcf	3,6	;RP1=0, select bank0
   778     0577  0081               	movwf	1	;volatile
   779     0578                     l2937:
   780                           
   781                           ;main.c: 142:     TRISD = 0x00;
   782     0578  1683               	bsf	3,5	;RP0=1, select bank1
   783     0579  1303               	bcf	3,6	;RP1=0, select bank1
   784     057A  0188               	clrf	8	;volatile
   785     057B                     l2939:
   786                           
   787                           ;main.c: 143:     TRISE = 0x00;
   788     057B  0189               	clrf	9	;volatile
   789                           
   790                           ;main.c: 144:     CMCON = 0b00000111;
   791     057C  3007               	movlw	7
   792     057D  009C               	movwf	28	;volatile
   793                           
   794                           ;main.c: 145:     ADCON1 = 0x4E;
   795     057E  304E               	movlw	78
   796     057F  009F               	movwf	31	;volatile
   797     0580                     l2941:
   798                           
   799                           ;main.c: 147:     LCD_Init();
   800     0580  120A  158A  2713  120A  118A  	fcall	_LCD_Init
   801     0585                     l2943:
   802                           
   803                           ;main.c: 150:     TRISB = 0b11110011;
   804     0585  30F3               	movlw	243
   805     0586  1683               	bsf	3,5	;RP0=1, select bank1
   806     0587  1303               	bcf	3,6	;RP1=0, select bank1
   807     0588  0086               	movwf	6	;volatile
   808     0589                     l2945:
   809                           
   810                           ;main.c: 151:     T1CON = 0x10;
   811     0589  3010               	movlw	16
   812     058A  1283               	bcf	3,5	;RP0=0, select bank0
   813     058B  1303               	bcf	3,6	;RP1=0, select bank0
   814     058C  0090               	movwf	16	;volatile
   815     058D                     l2947:
   816                           
   817                           ;main.c: 153:     TRISC = 0;
   818     058D  1683               	bsf	3,5	;RP0=1, select bank1
   819     058E  1303               	bcf	3,6	;RP1=0, select bank1
   820     058F  0187               	clrf	7	;volatile
   821     0590                     l2949:
   822                           
   823                           ;main.c: 155:     {;main.c: 156:         if(RC1 == 0 || RC1 && drive_timer == 0){
   824     0590  1283               	bcf	3,5	;RP0=0, select bank0
   825     0591  1303               	bcf	3,6	;RP1=0, select bank0
   826     0592  1C87               	btfss	7,1	;volatile
   827     0593  2D95               	goto	u3391
   828     0594  2D96               	goto	u3390
   829     0595                     u3391:
   830     0595  2DA0               	goto	l2955
   831     0596                     u3390:
   832     0596                     l2951:
   833     0596  1C87               	btfss	7,1	;volatile
   834     0597  2D99               	goto	u3401
   835     0598  2D9A               	goto	u3400
   836     0599                     u3401:
   837     0599  2E2A               	goto	l2979
   838     059A                     u3400:
   839     059A                     l2953:
   840     059A  085C               	movf	_drive_timer,w
   841     059B  045D               	iorwf	_drive_timer+1,w
   842     059C  1D03               	btfss	3,2
   843     059D  2D9F               	goto	u3411
   844     059E  2DA0               	goto	u3410
   845     059F                     u3411:
   846     059F  2E2A               	goto	l2979
   847     05A0                     u3410:
   848     05A0                     l2955:
   849                           
   850                           ;main.c: 157:             if(drive_mode){
   851     05A0  086A               	movf	_drive_mode,w
   852     05A1  1903               	btfsc	3,2
   853     05A2  2DA4               	goto	u3421
   854     05A3  2DA5               	goto	u3420
   855     05A4                     u3421:
   856     05A4  2E27               	goto	l303
   857     05A5                     u3420:
   858     05A5                     l2957:
   859                           
   860                           ;main.c: 158:                 int dist;;main.c: 160:                 TMR1H = 0;
   861     05A5  018F               	clrf	15	;volatile
   862                           
   863                           ;main.c: 161:                 TMR1L = 0;
   864     05A6  018E               	clrf	14	;volatile
   865     05A7                     l2959:
   866                           
   867                           ;main.c: 163:                 RB3 = 1;
   868     05A7  1586               	bsf	6,3	;volatile
   869     05A8                     l2961:
   870                           
   871                           ;main.c: 164:                 _delay((unsigned long)((10)*(10000000/4000000.0)));
   872     05A8  3007               	movlw	7
   873     05A9  1283               	bcf	3,5	;RP0=0, select bank0
   874     05AA  1303               	bcf	3,6	;RP1=0, select bank0
   875     05AB  00D9               	movwf	??_main
   876     05AC                     u3487:
   877     05AC  0BD9               	decfsz	??_main,f
   878     05AD  2DAC               	goto	u3487
   879     05AE  0000               	nop
   880     05AF                     l2963:
   881                           
   882                           ;main.c: 165:                 RB3 = 0;
   883     05AF  1283               	bcf	3,5	;RP0=0, select bank0
   884     05B0  1303               	bcf	3,6	;RP1=0, select bank0
   885     05B1  1186               	bcf	6,3	;volatile
   886     05B2                     l297:	
   887                           ;main.c: 167:                 while(!RB4);
   888                           
   889     05B2  1E06               	btfss	6,4	;volatile
   890     05B3  2DB5               	goto	u3431
   891     05B4  2DB6               	goto	u3430
   892     05B5                     u3431:
   893     05B5  2DB2               	goto	l297
   894     05B6                     u3430:
   895     05B6                     l299:
   896                           
   897                           ;main.c: 168:                 T1CONbits.TMR1ON = 1;
   898     05B6  1410               	bsf	16,0	;volatile
   899     05B7                     l300:	
   900                           ;main.c: 169:                 while(RB4);
   901                           
   902     05B7  1A06               	btfsc	6,4	;volatile
   903     05B8  2DBA               	goto	u3441
   904     05B9  2DBB               	goto	u3440
   905     05BA                     u3441:
   906     05BA  2DB7               	goto	l300
   907     05BB                     u3440:
   908     05BB                     l302:
   909                           
   910                           ;main.c: 170:                 T1CONbits.TMR1ON = 0;
   911     05BB  1010               	bcf	16,0	;volatile
   912     05BC                     l2965:
   913                           
   914                           ;main.c: 172:                 dist = (TMR1L | (TMR1H<<8));
   915     05BC  080F               	movf	15,w	;volatile
   916     05BD  00DB               	movwf	main@dist+1
   917     05BE  080E               	movf	14,w	;volatile
   918     05BF  00DA               	movwf	main@dist
   919     05C0                     l2967:
   920                           
   921                           ;main.c: 173:                 dist = dist/58.82;
   922     05C0  085A               	movf	main@dist,w
   923     05C1  00F3               	movwf	___xxtofl@val
   924     05C2  085B               	movf	main@dist+1,w
   925     05C3  00F4               	movwf	___xxtofl@val+1
   926     05C4  3000               	movlw	0
   927     05C5  1BF4               	btfsc	___xxtofl@val+1,7
   928     05C6  30FF               	movlw	255
   929     05C7  00F5               	movwf	___xxtofl@val+2
   930     05C8  00F6               	movwf	___xxtofl@val+3
   931     05C9  3001               	movlw	1
   932     05CA  120A  118A  2644  120A  118A  	fcall	___xxtofl
   933     05CF  0876               	movf	?___xxtofl+3,w
   934     05D0  1283               	bcf	3,5	;RP0=0, select bank0
   935     05D1  1303               	bcf	3,6	;RP1=0, select bank0
   936     05D2  00B1               	movwf	___fldiv@b+3
   937     05D3  0875               	movf	?___xxtofl+2,w
   938     05D4  00B0               	movwf	___fldiv@b+2
   939     05D5  0874               	movf	?___xxtofl+1,w
   940     05D6  00AF               	movwf	___fldiv@b+1
   941     05D7  0873               	movf	?___xxtofl,w
   942     05D8  00AE               	movwf	___fldiv@b
   943     05D9  3042               	movlw	66
   944     05DA  00AD               	movwf	___fldiv@a+3
   945     05DB  306B               	movlw	107
   946     05DC  00AC               	movwf	___fldiv@a+2
   947     05DD  3047               	movlw	71
   948     05DE  00AB               	movwf	___fldiv@a+1
   949     05DF  30AE               	movlw	174
   950     05E0  00AA               	movwf	___fldiv@a
   951     05E1  120A  118A  2038  120A  118A  	fcall	___fldiv
   952     05E6  1283               	bcf	3,5	;RP0=0, select bank0
   953     05E7  1303               	bcf	3,6	;RP1=0, select bank0
   954     05E8  082D               	movf	?___fldiv+3,w
   955     05E9  00C7               	movwf	___fltol@f1+3
   956     05EA  082C               	movf	?___fldiv+2,w
   957     05EB  00C6               	movwf	___fltol@f1+2
   958     05EC  082B               	movf	?___fldiv+1,w
   959     05ED  00C5               	movwf	___fltol@f1+1
   960     05EE  082A               	movf	?___fldiv,w
   961     05EF  00C4               	movwf	___fltol@f1
   962     05F0  120A  158A  2788  120A  118A  	fcall	___fltol
   963     05F5  1283               	bcf	3,5	;RP0=0, select bank0
   964     05F6  1303               	bcf	3,6	;RP1=0, select bank0
   965     05F7  0845               	movf	?___fltol+1,w
   966     05F8  00DB               	movwf	main@dist+1
   967     05F9  0844               	movf	?___fltol,w
   968     05FA  00DA               	movwf	main@dist
   969     05FB                     l2969:
   970                           
   971                           ;main.c: 174:                 dist = dist + 1;
   972     05FB  085A               	movf	main@dist,w
   973     05FC  3E01               	addlw	1
   974     05FD  00DA               	movwf	main@dist
   975     05FE  085B               	movf	main@dist+1,w
   976     05FF  1803               	skipnc
   977     0600  3E01               	addlw	1
   978     0601  3E00               	addlw	0
   979     0602  00DB               	movwf	main@dist+1
   980     0603                     l2971:
   981                           
   982                           ;main.c: 176:                 if(dist>=2 && dist<=300)
   983     0603  085B               	movf	main@dist+1,w
   984     0604  3A80               	xorlw	128
   985     0605  00FF               	movwf	btemp+1
   986     0606  3080               	movlw	128
   987     0607  027F               	subwf	btemp+1,w
   988     0608  1D03               	skipz
   989     0609  2E0C               	goto	u3455
   990     060A  3002               	movlw	2
   991     060B  025A               	subwf	main@dist,w
   992     060C                     u3455:
   993     060C  1C03               	skipc
   994     060D  2E0F               	goto	u3451
   995     060E  2E10               	goto	u3450
   996     060F                     u3451:
   997     060F  2E27               	goto	l303
   998     0610                     u3450:
   999     0610                     l2973:
  1000     0610  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0611  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0612  085B               	movf	main@dist+1,w
  1003     0613  3A80               	xorlw	128
  1004     0614  00FF               	movwf	btemp+1
  1005     0615  3081               	movlw	129
  1006     0616  027F               	subwf	btemp+1,w
  1007     0617  1D03               	skipz
  1008     0618  2E1B               	goto	u3465
  1009     0619  302D               	movlw	45
  1010     061A  025A               	subwf	main@dist,w
  1011     061B                     u3465:
  1012     061B  1803               	skipnc
  1013     061C  2E1E               	goto	u3461
  1014     061D  2E1F               	goto	u3460
  1015     061E                     u3461:
  1016     061E  2E27               	goto	l303
  1017     061F                     u3460:
  1018     061F                     l2975:
  1019                           
  1020                           ;main.c: 177:                 {;main.c: 178:                     drive_timer = 1000;
  1021     061F  30E8               	movlw	232
  1022     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0622  00DC               	movwf	_drive_timer
  1025     0623  3003               	movlw	3
  1026     0624  00DD               	movwf	_drive_timer+1
  1027     0625                     l2977:
  1028                           
  1029                           ;main.c: 179:                     RC1 = 1;
  1030     0625  1487               	bsf	7,1	;volatile
  1031                           
  1032                           ;main.c: 180:                 }
  1033     0626  2E2A               	goto	l2979
  1034     0627                     l303:	
  1035                           ;main.c: 181:                 else{
  1036                           
  1037                           
  1038                           ;main.c: 182:                     RC1 = 0;
  1039     0627  1283               	bcf	3,5	;RP0=0, select bank0
  1040     0628  1303               	bcf	3,6	;RP1=0, select bank0
  1041     0629  1087               	bcf	7,1	;volatile
  1042     062A                     l2979:
  1043                           
  1044                           ;main.c: 190:         if (update_timer >= 1000){
  1045     062A  085F               	movf	_update_timer+1,w
  1046     062B  3A80               	xorlw	128
  1047     062C  00FF               	movwf	btemp+1
  1048     062D  3083               	movlw	131
  1049     062E  027F               	subwf	btemp+1,w
  1050     062F  1D03               	skipz
  1051     0630  2E33               	goto	u3475
  1052     0631  30E8               	movlw	232
  1053     0632  025E               	subwf	_update_timer,w
  1054     0633                     u3475:
  1055     0633  1C03               	skipc
  1056     0634  2E36               	goto	u3471
  1057     0635  2E37               	goto	u3470
  1058     0636                     u3471:
  1059     0636  2D90               	goto	l2949
  1060     0637                     u3470:
  1061     0637                     l2981:
  1062                           
  1063                           ;main.c: 191:             update_timer = 0;
  1064     0637  1283               	bcf	3,5	;RP0=0, select bank0
  1065     0638  1303               	bcf	3,6	;RP1=0, select bank0
  1066     0639  01DE               	clrf	_update_timer
  1067     063A  01DF               	clrf	_update_timer+1
  1068     063B                     l2983:
  1069                           
  1070                           ;main.c: 192:             update_screen();
  1071     063B  120A  118A  23CB  120A  118A  	fcall	_update_screen
  1072     0640  2D90               	goto	l2949
  1073     0641  120A  118A  280E   	ljmp	start
  1074     0644                     __end_of_main:
  1075                           
  1076                           	psect	text1
  1077     03CB                     __ptext1:	
  1078 ;; *************** function _update_screen *****************
  1079 ;; Defined at:
  1080 ;;		line 45 in file "main.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  str             9   36[BANK0 ] unsigned char [9]
  1085 ;;  a_str           9   27[BANK0 ] unsigned char [9]
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0      30       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0      30       0       0       0
  1099 ;;Total ram usage:       30 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 4
  1102 ;; This function calls:
  1103 ;;		_LCD_Write
  1104 ;;		_LCD_putrs
  1105 ;;		_sprintf
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111     03CB                     _update_screen:	
  1112                           ;psect for function _update_screen
  1113                           
  1114     03CB                     l2723:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _update_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1117                           
  1118                           
  1119                           ;main.c: 47:     sek = ((((60) < ((((sek) > (0)) ? (sek) : (0)))) ? (60) : ((((sek) > (0
      +                          )) ? (sek) : (0)))));
  1120     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1121     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1122     03CD  0869               	movf	_sek+1,w
  1123     03CE  3A80               	xorlw	128
  1124     03CF  00FF               	movwf	btemp+1
  1125     03D0  3080               	movlw	128
  1126     03D1  027F               	subwf	btemp+1,w
  1127     03D2  1D03               	skipz
  1128     03D3  2BD6               	goto	u3035
  1129     03D4  3001               	movlw	1
  1130     03D5  0268               	subwf	_sek,w
  1131     03D6                     u3035:
  1132     03D6  1803               	skipnc
  1133     03D7  2BD9               	goto	u3031
  1134     03D8  2BDA               	goto	u3030
  1135     03D9                     u3031:
  1136     03D9  2BDF               	goto	l2727
  1137     03DA                     u3030:
  1138     03DA                     l2725:
  1139     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1140     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1141     03DC  01CD               	clrf	_update_screen$127
  1142     03DD  01CE               	clrf	_update_screen$127+1
  1143     03DE  2BE5               	goto	l2729
  1144     03DF                     l2727:
  1145     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1146     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1147     03E1  0869               	movf	_sek+1,w
  1148     03E2  00CE               	movwf	_update_screen$127+1
  1149     03E3  0868               	movf	_sek,w
  1150     03E4  00CD               	movwf	_update_screen$127
  1151     03E5                     l2729:
  1152     03E5  084E               	movf	_update_screen$127+1,w
  1153     03E6  3A80               	xorlw	128
  1154     03E7  00FF               	movwf	btemp+1
  1155     03E8  3080               	movlw	128
  1156     03E9  027F               	subwf	btemp+1,w
  1157     03EA  1D03               	skipz
  1158     03EB  2BEE               	goto	u3045
  1159     03EC  303D               	movlw	61
  1160     03ED  024D               	subwf	_update_screen$127,w
  1161     03EE                     u3045:
  1162     03EE  1803               	skipnc
  1163     03EF  2BF1               	goto	u3041
  1164     03F0  2BF2               	goto	u3040
  1165     03F1                     u3041:
  1166     03F1  2C11               	goto	l2737
  1167     03F2                     u3040:
  1168     03F2                     l2731:
  1169     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1170     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1171     03F4  0869               	movf	_sek+1,w
  1172     03F5  3A80               	xorlw	128
  1173     03F6  00FF               	movwf	btemp+1
  1174     03F7  3080               	movlw	128
  1175     03F8  027F               	subwf	btemp+1,w
  1176     03F9  1D03               	skipz
  1177     03FA  2BFD               	goto	u3055
  1178     03FB  3001               	movlw	1
  1179     03FC  0268               	subwf	_sek,w
  1180     03FD                     u3055:
  1181     03FD  1803               	skipnc
  1182     03FE  2C00               	goto	u3051
  1183     03FF  2C01               	goto	u3050
  1184     0400                     u3051:
  1185     0400  2C06               	goto	l2735
  1186     0401                     u3050:
  1187     0401                     l2733:
  1188     0401  1283               	bcf	3,5	;RP0=0, select bank0
  1189     0402  1303               	bcf	3,6	;RP1=0, select bank0
  1190     0403  01CF               	clrf	_update_screen$128
  1191     0404  01D0               	clrf	_update_screen$128+1
  1192     0405  2C0C               	goto	l143
  1193     0406                     l2735:
  1194     0406  1283               	bcf	3,5	;RP0=0, select bank0
  1195     0407  1303               	bcf	3,6	;RP1=0, select bank0
  1196     0408  0869               	movf	_sek+1,w
  1197     0409  00D0               	movwf	_update_screen$128+1
  1198     040A  0868               	movf	_sek,w
  1199     040B  00CF               	movwf	_update_screen$128
  1200     040C                     l143:
  1201     040C  0850               	movf	_update_screen$128+1,w
  1202     040D  00E9               	movwf	_sek+1
  1203     040E  084F               	movf	_update_screen$128,w
  1204     040F  00E8               	movwf	_sek
  1205     0410  2C17               	goto	l2739
  1206     0411                     l2737:
  1207     0411  303C               	movlw	60
  1208     0412  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0413  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0414  00E8               	movwf	_sek
  1211     0415  3000               	movlw	0
  1212     0416  00E9               	movwf	_sek+1
  1213     0417                     l2739:
  1214                           
  1215                           ;main.c: 48:     min = ((((60) < ((((min) > (0)) ? (min) : (0)))) ? (60) : ((((min) > (0
      +                          )) ? (min) : (0)))));
  1216     0417  0867               	movf	_min+1,w
  1217     0418  3A80               	xorlw	128
  1218     0419  00FF               	movwf	btemp+1
  1219     041A  3080               	movlw	128
  1220     041B  027F               	subwf	btemp+1,w
  1221     041C  1D03               	skipz
  1222     041D  2C20               	goto	u3065
  1223     041E  3001               	movlw	1
  1224     041F  0266               	subwf	_min,w
  1225     0420                     u3065:
  1226     0420  1803               	skipnc
  1227     0421  2C23               	goto	u3061
  1228     0422  2C24               	goto	u3060
  1229     0423                     u3061:
  1230     0423  2C29               	goto	l2743
  1231     0424                     u3060:
  1232     0424                     l2741:
  1233     0424  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0425  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0426  01D1               	clrf	_update_screen$129
  1236     0427  01D2               	clrf	_update_screen$129+1
  1237     0428  2C2F               	goto	l2745
  1238     0429                     l2743:
  1239     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1240     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1241     042B  0867               	movf	_min+1,w
  1242     042C  00D2               	movwf	_update_screen$129+1
  1243     042D  0866               	movf	_min,w
  1244     042E  00D1               	movwf	_update_screen$129
  1245     042F                     l2745:
  1246     042F  0852               	movf	_update_screen$129+1,w
  1247     0430  3A80               	xorlw	128
  1248     0431  00FF               	movwf	btemp+1
  1249     0432  3080               	movlw	128
  1250     0433  027F               	subwf	btemp+1,w
  1251     0434  1D03               	skipz
  1252     0435  2C38               	goto	u3075
  1253     0436  303D               	movlw	61
  1254     0437  0251               	subwf	_update_screen$129,w
  1255     0438                     u3075:
  1256     0438  1803               	skipnc
  1257     0439  2C3B               	goto	u3071
  1258     043A  2C3C               	goto	u3070
  1259     043B                     u3071:
  1260     043B  2C5B               	goto	l2753
  1261     043C                     u3070:
  1262     043C                     l2747:
  1263     043C  1283               	bcf	3,5	;RP0=0, select bank0
  1264     043D  1303               	bcf	3,6	;RP1=0, select bank0
  1265     043E  0867               	movf	_min+1,w
  1266     043F  3A80               	xorlw	128
  1267     0440  00FF               	movwf	btemp+1
  1268     0441  3080               	movlw	128
  1269     0442  027F               	subwf	btemp+1,w
  1270     0443  1D03               	skipz
  1271     0444  2C47               	goto	u3085
  1272     0445  3001               	movlw	1
  1273     0446  0266               	subwf	_min,w
  1274     0447                     u3085:
  1275     0447  1803               	skipnc
  1276     0448  2C4A               	goto	u3081
  1277     0449  2C4B               	goto	u3080
  1278     044A                     u3081:
  1279     044A  2C50               	goto	l2751
  1280     044B                     u3080:
  1281     044B                     l2749:
  1282     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1283     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1284     044D  01D3               	clrf	_update_screen$130
  1285     044E  01D4               	clrf	_update_screen$130+1
  1286     044F  2C56               	goto	l155
  1287     0450                     l2751:
  1288     0450  1283               	bcf	3,5	;RP0=0, select bank0
  1289     0451  1303               	bcf	3,6	;RP1=0, select bank0
  1290     0452  0867               	movf	_min+1,w
  1291     0453  00D4               	movwf	_update_screen$130+1
  1292     0454  0866               	movf	_min,w
  1293     0455  00D3               	movwf	_update_screen$130
  1294     0456                     l155:
  1295     0456  0854               	movf	_update_screen$130+1,w
  1296     0457  00E7               	movwf	_min+1
  1297     0458  0853               	movf	_update_screen$130,w
  1298     0459  00E6               	movwf	_min
  1299     045A  2C61               	goto	l2755
  1300     045B                     l2753:
  1301     045B  303C               	movlw	60
  1302     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1303     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1304     045E  00E6               	movwf	_min
  1305     045F  3000               	movlw	0
  1306     0460  00E7               	movwf	_min+1
  1307     0461                     l2755:
  1308                           
  1309                           ;main.c: 49:     tim = ((((24) < ((((tim) > (0)) ? (tim) : (0)))) ? (24) : ((((tim) > (0
      +                          )) ? (tim) : (0)))));
  1310     0461  0865               	movf	_tim+1,w
  1311     0462  3A80               	xorlw	128
  1312     0463  00FF               	movwf	btemp+1
  1313     0464  3080               	movlw	128
  1314     0465  027F               	subwf	btemp+1,w
  1315     0466  1D03               	skipz
  1316     0467  2C6A               	goto	u3095
  1317     0468  3001               	movlw	1
  1318     0469  0264               	subwf	_tim,w
  1319     046A                     u3095:
  1320     046A  1803               	skipnc
  1321     046B  2C6D               	goto	u3091
  1322     046C  2C6E               	goto	u3090
  1323     046D                     u3091:
  1324     046D  2C73               	goto	l2759
  1325     046E                     u3090:
  1326     046E                     l2757:
  1327     046E  1283               	bcf	3,5	;RP0=0, select bank0
  1328     046F  1303               	bcf	3,6	;RP1=0, select bank0
  1329     0470  01D5               	clrf	_update_screen$131
  1330     0471  01D6               	clrf	_update_screen$131+1
  1331     0472  2C79               	goto	l2761
  1332     0473                     l2759:
  1333     0473  1283               	bcf	3,5	;RP0=0, select bank0
  1334     0474  1303               	bcf	3,6	;RP1=0, select bank0
  1335     0475  0865               	movf	_tim+1,w
  1336     0476  00D6               	movwf	_update_screen$131+1
  1337     0477  0864               	movf	_tim,w
  1338     0478  00D5               	movwf	_update_screen$131
  1339     0479                     l2761:
  1340     0479  0856               	movf	_update_screen$131+1,w
  1341     047A  3A80               	xorlw	128
  1342     047B  00FF               	movwf	btemp+1
  1343     047C  3080               	movlw	128
  1344     047D  027F               	subwf	btemp+1,w
  1345     047E  1D03               	skipz
  1346     047F  2C82               	goto	u3105
  1347     0480  3019               	movlw	25
  1348     0481  0255               	subwf	_update_screen$131,w
  1349     0482                     u3105:
  1350     0482  1803               	skipnc
  1351     0483  2C85               	goto	u3101
  1352     0484  2C86               	goto	u3100
  1353     0485                     u3101:
  1354     0485  2CA5               	goto	l2769
  1355     0486                     u3100:
  1356     0486                     l2763:
  1357     0486  1283               	bcf	3,5	;RP0=0, select bank0
  1358     0487  1303               	bcf	3,6	;RP1=0, select bank0
  1359     0488  0865               	movf	_tim+1,w
  1360     0489  3A80               	xorlw	128
  1361     048A  00FF               	movwf	btemp+1
  1362     048B  3080               	movlw	128
  1363     048C  027F               	subwf	btemp+1,w
  1364     048D  1D03               	skipz
  1365     048E  2C91               	goto	u3115
  1366     048F  3001               	movlw	1
  1367     0490  0264               	subwf	_tim,w
  1368     0491                     u3115:
  1369     0491  1803               	skipnc
  1370     0492  2C94               	goto	u3111
  1371     0493  2C95               	goto	u3110
  1372     0494                     u3111:
  1373     0494  2C9A               	goto	l2767
  1374     0495                     u3110:
  1375     0495                     l2765:
  1376     0495  1283               	bcf	3,5	;RP0=0, select bank0
  1377     0496  1303               	bcf	3,6	;RP1=0, select bank0
  1378     0497  01D7               	clrf	_update_screen$132
  1379     0498  01D8               	clrf	_update_screen$132+1
  1380     0499  2CA0               	goto	l167
  1381     049A                     l2767:
  1382     049A  1283               	bcf	3,5	;RP0=0, select bank0
  1383     049B  1303               	bcf	3,6	;RP1=0, select bank0
  1384     049C  0865               	movf	_tim+1,w
  1385     049D  00D8               	movwf	_update_screen$132+1
  1386     049E  0864               	movf	_tim,w
  1387     049F  00D7               	movwf	_update_screen$132
  1388     04A0                     l167:
  1389     04A0  0858               	movf	_update_screen$132+1,w
  1390     04A1  00E5               	movwf	_tim+1
  1391     04A2  0857               	movf	_update_screen$132,w
  1392     04A3  00E4               	movwf	_tim
  1393     04A4  2CAB               	goto	l2771
  1394     04A5                     l2769:
  1395     04A5  3018               	movlw	24
  1396     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1397     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1398     04A8  00E4               	movwf	_tim
  1399     04A9  3000               	movlw	0
  1400     04AA  00E5               	movwf	_tim+1
  1401     04AB                     l2771:
  1402                           
  1403                           ;main.c: 52:     char a_str[9];;main.c: 53:     char str[9];;main.c: 56:     sprintf(str
      +                          , "%02d:%02d:%02d", tim, min, sek);
  1404     04AB  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1405     04AC  00A8               	movwf	sprintf@f
  1406     04AD  0865               	movf	_tim+1,w
  1407     04AE  00AA               	movwf	?_sprintf+2
  1408     04AF  0864               	movf	_tim,w
  1409     04B0  00A9               	movwf	?_sprintf+1
  1410     04B1  0867               	movf	_min+1,w
  1411     04B2  00AC               	movwf	?_sprintf+4
  1412     04B3  0866               	movf	_min,w
  1413     04B4  00AB               	movwf	?_sprintf+3
  1414     04B5  0869               	movf	_sek+1,w
  1415     04B6  00AE               	movwf	?_sprintf+6
  1416     04B7  0868               	movf	_sek,w
  1417     04B8  00AD               	movwf	?_sprintf+5
  1418     04B9  3044               	movlw	(low (update_screen@str| 0))& (0+255)
  1419     04BA  120A  118A  220B  120A  118A  	fcall	_sprintf
  1420     04BF                     l2773:
  1421                           
  1422                           ;main.c: 57:     sprintf(a_str, "%02d:%02d:%02d", a_tim, a_min, a_sek);
  1423     04BF  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1424     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1425     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1426     04C2  00A8               	movwf	sprintf@f
  1427     04C3  0861               	movf	_a_tim+1,w
  1428     04C4  00AA               	movwf	?_sprintf+2
  1429     04C5  0860               	movf	_a_tim,w
  1430     04C6  00A9               	movwf	?_sprintf+1
  1431     04C7  0863               	movf	_a_min+1,w
  1432     04C8  00AC               	movwf	?_sprintf+4
  1433     04C9  0862               	movf	_a_min,w
  1434     04CA  00AB               	movwf	?_sprintf+3
  1435     04CB  086C               	movf	_a_sek+1,w
  1436     04CC  00AE               	movwf	?_sprintf+6
  1437     04CD  086B               	movf	_a_sek,w
  1438     04CE  00AD               	movwf	?_sprintf+5
  1439     04CF  303B               	movlw	(low (update_screen@a_str| 0))& (0+255)
  1440     04D0  120A  118A  220B  120A  118A  	fcall	_sprintf
  1441     04D5                     l2775:
  1442     04D5  3000               	movlw	0
  1443     04D6  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1444     04DB                     l2777:
  1445     04DB  3001               	movlw	1
  1446     04DC  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1447     04E1                     l2779:
  1448     04E1  3008               	movlw	8
  1449     04E2  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1450     04E7                     l2781:
  1451     04E7  3000               	movlw	0
  1452     04E8  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1453     04ED                     l2789:
  1454                           
  1455                           ;main.c: 63:     LCD_putrs("kl:");
  1456     04ED  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1457     04EE  00F6               	movwf	LCD_putrs@a
  1458     04EF  3080               	movlw	128
  1459     04F0  00F7               	movwf	LCD_putrs@a+1
  1460     04F1  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1461     04F6                     l2791:
  1462     04F6  3008               	movlw	8
  1463     04F7  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1464     04FC                     l2793:
  1465     04FC  3004               	movlw	4
  1466     04FD  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1467     0502                     l2801:
  1468                           
  1469                           ;main.c: 66:     LCD_putrs(str);
  1470     0502  3044               	movlw	(low (update_screen@str| 0))& (0+255)
  1471     0503  00F6               	movwf	LCD_putrs@a
  1472     0504  3000               	movlw	0
  1473     0505  00F7               	movwf	LCD_putrs@a+1
  1474     0506  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1475     050B                     l2805:
  1476     050B  300C               	movlw	12
  1477     050C  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1478     0511  3000               	movlw	0
  1479     0512  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1480     0517                     l2811:
  1481                           
  1482                           ;main.c: 69:     LCD_putrs("al:");
  1483     0517  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1484     0518  00F6               	movwf	LCD_putrs@a
  1485     0519  3080               	movlw	128
  1486     051A  00F7               	movwf	LCD_putrs@a+1
  1487     051B  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1488     0520                     l2815:
  1489     0520  300C               	movlw	12
  1490     0521  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1491     0526  3004               	movlw	4
  1492     0527  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1493     052C                     l2821:
  1494                           
  1495                           ;main.c: 72:     LCD_putrs(a_str);
  1496     052C  303B               	movlw	(low (update_screen@a_str| 0))& (0+255)
  1497     052D  00F6               	movwf	LCD_putrs@a
  1498     052E  3000               	movlw	0
  1499     052F  00F7               	movwf	LCD_putrs@a+1
  1500     0530  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1501     0535                     l2823:
  1502                           
  1503                           ;main.c: 75:     if (drive_mode == 1){
  1504     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1505     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1506     0537  036A               	decf	_drive_mode,w
  1507     0538  1D03               	btfss	3,2
  1508     0539  2D3B               	goto	u3121
  1509     053A  2D3C               	goto	u3120
  1510     053B                     u3121:
  1511     053B  2D51               	goto	l2835
  1512     053C                     u3120:
  1513     053C                     l2825:
  1514     053C  3008               	movlw	8
  1515     053D  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1516     0542  300F               	movlw	15
  1517     0543  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1518     0548                     l2833:
  1519                           
  1520                           ;main.c: 77:         LCD_putrs("!");
  1521     0548  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1522     0549  00F6               	movwf	LCD_putrs@a
  1523     054A  3080               	movlw	128
  1524     054B  00F7               	movwf	LCD_putrs@a+1
  1525     054C  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1526     0551                     l2835:
  1527                           
  1528                           ;main.c: 81:     if (alarm == 1){
  1529     0551  1283               	bcf	3,5	;RP0=0, select bank0
  1530     0552  1303               	bcf	3,6	;RP1=0, select bank0
  1531     0553  036D               	decf	_alarm,w
  1532     0554  1D03               	btfss	3,2
  1533     0555  2D57               	goto	u3131
  1534     0556  2D58               	goto	u3130
  1535     0557                     u3131:
  1536     0557  2D6D               	goto	l274
  1537     0558                     u3130:
  1538     0558                     l2839:
  1539     0558  300C               	movlw	12
  1540     0559  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1541     055E  300F               	movlw	15
  1542     055F  120A  158A  2601  120A  118A  	fcall	_LCD_Write
  1543     0564                     l2845:
  1544                           
  1545                           ;main.c: 83:         LCD_putrs("A");
  1546     0564  3024               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1547     0565  00F6               	movwf	LCD_putrs@a
  1548     0566  3080               	movlw	128
  1549     0567  00F7               	movwf	LCD_putrs@a+1
  1550     0568  120A  158A  26CD  120A  118A  	fcall	_LCD_putrs
  1551     056D                     l274:
  1552     056D  0008               	return
  1553     056E                     __end_of_update_screen:
  1554                           
  1555                           	psect	text2
  1556     020B                     __ptext2:	
  1557 ;; *************** function _sprintf *****************
  1558 ;; Defined at:
  1559 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  sp              1    wreg     PTR unsigned char 
  1562 ;;		 -> update_screen@a_str(9), update_screen@str(9), 
  1563 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1564 ;;		 -> STR_2(15), STR_1(15), 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1567 ;;		 -> update_screen@a_str(9), update_screen@str(9), 
  1568 ;;  tmpval          4    0        struct .
  1569 ;;  width           2   23[BANK0 ] int 
  1570 ;;  val             2   20[BANK0 ] unsigned int 
  1571 ;;  cp              2    0        PTR const unsigned char 
  1572 ;;  len             2    0        unsigned int 
  1573 ;;  c               1   26[BANK0 ] unsigned char 
  1574 ;;  flag            1   22[BANK0 ] unsigned char 
  1575 ;;  prec            1   19[BANK0 ] char 
  1576 ;;  ap              1   18[BANK0 ] PTR void [1]
  1577 ;;		 -> ?_sprintf(2), 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2    8[BANK0 ] int 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       7       0       0       0
  1588 ;;      Locals:         0       9       0       0       0
  1589 ;;      Temps:          0       3       0       0       0
  1590 ;;      Totals:         0      19       0       0       0
  1591 ;;Total ram usage:       19 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 2
  1594 ;; This function calls:
  1595 ;;		___lwdiv
  1596 ;;		___lwmod
  1597 ;;		___wmul
  1598 ;;		_isdigit
  1599 ;; This function is called by:
  1600 ;;		_update_screen
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604     020B                     _sprintf:	
  1605                           ;psect for function _sprintf
  1606                           
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1610                           ;sprintf@sp stored from wreg
  1611     020B  1283               	bcf	3,5	;RP0=0, select bank0
  1612     020C  1303               	bcf	3,6	;RP1=0, select bank0
  1613     020D  00B9               	movwf	sprintf@sp
  1614     020E                     l2573:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1617     020E  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1618     020F  00B2               	movwf	sprintf@ap
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1621     0210  2BB6               	goto	l2677
  1622     0211                     l2575:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1625     0211  3025               	movlw	37
  1626     0212  063A               	xorwf	sprintf@c,w
  1627     0213  1903               	btfsc	3,2
  1628     0214  2A16               	goto	u2841
  1629     0215  2A17               	goto	u2840
  1630     0216                     u2841:
  1631     0216  2A21               	goto	l2581
  1632     0217                     u2840:
  1633     0217                     l2577:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1636     0217  0839               	movf	sprintf@sp,w
  1637     0218  0084               	movwf	4
  1638     0219  083A               	movf	sprintf@c,w
  1639     021A  1383               	bcf	3,7	;select IRP bank0
  1640     021B  0080               	movwf	0
  1641     021C                     l2579:
  1642     021C  3001               	movlw	1
  1643     021D  00AF               	movwf	??_sprintf
  1644     021E  082F               	movf	??_sprintf,w
  1645     021F  07B9               	addwf	sprintf@sp,f
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1648     0220  2BB6               	goto	l2677
  1649     0221                     l2581:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1652     0221  01B7               	clrf	sprintf@width
  1653     0222  01B8               	clrf	sprintf@width+1
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1656     0223  01B6               	clrf	sprintf@flag
  1657     0224  2A2A               	goto	l2587
  1658     0225                     l407:	
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1660                           
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1663     0225  1536               	bsf	sprintf@flag,2
  1664     0226                     l2583:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1667     0226  3001               	movlw	1
  1668     0227  00AF               	movwf	??_sprintf
  1669     0228  082F               	movf	??_sprintf,w
  1670     0229  07A8               	addwf	sprintf@f,f
  1671     022A                     l2587:	
  1672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1673                           
  1674     022A  0828               	movf	sprintf@f,w
  1675     022B  0084               	movwf	4
  1676     022C  120A  158A  200A  120A  118A  	fcall	stringdir
  1677     0231  00AF               	movwf	??_sprintf
  1678     0232  01B0               	clrf	??_sprintf+1
  1679                           
  1680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1681                           ; Switch size 1, requested type "simple"
  1682                           ; Number of cases is 1, Range of values is 0 to 0
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; simple_byte            4     3 (average)
  1686                           ; direct_byte           11     8 (fixed)
  1687                           ; jumptable            260     6 (fixed)
  1688                           ;	Chosen strategy is simple_byte
  1689     0233  0830               	movf	??_sprintf+1,w
  1690     0234  3A00               	xorlw	0	; case 0
  1691     0235  1903               	skipnz
  1692     0236  2A38               	goto	l3025
  1693     0237  2A3D               	goto	l2589
  1694     0238                     l3025:
  1695                           
  1696                           ; Switch size 1, requested type "simple"
  1697                           ; Number of cases is 1, Range of values is 48 to 48
  1698                           ; switch strategies available:
  1699                           ; Name         Instructions Cycles
  1700                           ; simple_byte            4     3 (average)
  1701                           ; direct_byte           14    11 (fixed)
  1702                           ; jumptable            263     9 (fixed)
  1703                           ;	Chosen strategy is simple_byte
  1704     0238  082F               	movf	??_sprintf,w
  1705     0239  3A30               	xorlw	48	; case 48
  1706     023A  1903               	skipnz
  1707     023B  2A25               	goto	l407
  1708     023C  2A3D               	goto	l2589
  1709     023D                     l2589:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1712     023D  0828               	movf	sprintf@f,w
  1713     023E  0084               	movwf	4
  1714     023F  120A  158A  200A  120A  118A  	fcall	stringdir
  1715     0244  120A  158A  25EF  120A  118A  	fcall	_isdigit
  1716     0249  1C03               	btfss	3,0
  1717     024A  2A4C               	goto	u2851
  1718     024B  2A4D               	goto	u2850
  1719     024C                     u2851:
  1720     024C  2A8D               	goto	l2603
  1721     024D                     u2850:
  1722     024D                     l2591:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1725     024D  1283               	bcf	3,5	;RP0=0, select bank0
  1726     024E  1303               	bcf	3,6	;RP1=0, select bank0
  1727     024F  01B7               	clrf	sprintf@width
  1728     0250  01B8               	clrf	sprintf@width+1
  1729     0251                     l2593:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1732     0251  300A               	movlw	10
  1733     0252  00F3               	movwf	___wmul@multiplier
  1734     0253  3000               	movlw	0
  1735     0254  00F4               	movwf	___wmul@multiplier+1
  1736     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1737     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1738     0257  0838               	movf	sprintf@width+1,w
  1739     0258  00F6               	movwf	___wmul@multiplicand+1
  1740     0259  0837               	movf	sprintf@width,w
  1741     025A  00F5               	movwf	___wmul@multiplicand
  1742     025B  120A  158A  263D  120A  118A  	fcall	___wmul
  1743     0260  0874               	movf	?___wmul+1,w
  1744     0261  1283               	bcf	3,5	;RP0=0, select bank0
  1745     0262  1303               	bcf	3,6	;RP1=0, select bank0
  1746     0263  00B8               	movwf	sprintf@width+1
  1747     0264  0873               	movf	?___wmul,w
  1748     0265  00B7               	movwf	sprintf@width
  1749     0266                     l2595:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1752     0266  0828               	movf	sprintf@f,w
  1753     0267  0084               	movwf	4
  1754     0268  120A  158A  200A  120A  118A  	fcall	stringdir
  1755     026D  3ED0               	addlw	208
  1756     026E  00AF               	movwf	??_sprintf
  1757     026F  30FF               	movlw	255
  1758     0270  1803               	skipnc
  1759     0271  3000               	movlw	0
  1760     0272  00B0               	movwf	??_sprintf+1
  1761     0273  082F               	movf	??_sprintf,w
  1762     0274  07B7               	addwf	sprintf@width,f
  1763     0275  1803               	skipnc
  1764     0276  0AB8               	incf	sprintf@width+1,f
  1765     0277  0830               	movf	??_sprintf+1,w
  1766     0278  07B8               	addwf	sprintf@width+1,f
  1767     0279                     l2597:
  1768     0279  3001               	movlw	1
  1769     027A  00AF               	movwf	??_sprintf
  1770     027B  082F               	movf	??_sprintf,w
  1771     027C  07A8               	addwf	sprintf@f,f
  1772     027D                     l2599:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1775     027D  0828               	movf	sprintf@f,w
  1776     027E  0084               	movwf	4
  1777     027F  120A  158A  200A  120A  118A  	fcall	stringdir
  1778     0284  120A  158A  25EF  120A  118A  	fcall	_isdigit
  1779     0289  1803               	btfsc	3,0
  1780     028A  2A8C               	goto	u2861
  1781     028B  2A8D               	goto	u2860
  1782     028C                     u2861:
  1783     028C  2A51               	goto	l2593
  1784     028D                     u2860:
  1785     028D                     l2603:
  1786     028D  3001               	movlw	1
  1787     028E  1283               	bcf	3,5	;RP0=0, select bank0
  1788     028F  1303               	bcf	3,6	;RP1=0, select bank0
  1789     0290  07A8               	addwf	sprintf@f,f
  1790     0291  30FF               	movlw	-1
  1791     0292  0728               	addwf	sprintf@f,w
  1792     0293  0084               	movwf	4
  1793     0294  120A  158A  200A  120A  118A  	fcall	stringdir
  1794     0299  00BA               	movwf	sprintf@c
  1795     029A  00AF               	movwf	??_sprintf
  1796     029B  01B0               	clrf	??_sprintf+1
  1797                           
  1798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     8 (fixed)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807     029C  0830               	movf	??_sprintf+1,w
  1808     029D  3A00               	xorlw	0	; case 0
  1809     029E  1903               	skipnz
  1810     029F  2AA1               	goto	l3027
  1811     02A0  2BB6               	goto	l2677
  1812     02A1                     l3027:
  1813                           
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 3, Range of values is 0 to 105
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte           10     6 (average)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821     02A1  082F               	movf	??_sprintf,w
  1822     02A2  3A00               	xorlw	0	; case 0
  1823     02A3  1903               	skipnz
  1824     02A4  2BC6               	goto	l2679
  1825     02A5  3A64               	xorlw	100	; case 100
  1826     02A6  1903               	skipnz
  1827     02A7  2AAC               	goto	l2605
  1828     02A8  3A0D               	xorlw	13	; case 105
  1829     02A9  1903               	skipnz
  1830     02AA  2AAC               	goto	l2605
  1831     02AB  2BB6               	goto	l2677
  1832     02AC                     l2605:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1835     02AC  0832               	movf	sprintf@ap,w
  1836     02AD  0084               	movwf	4
  1837     02AE  1383               	bcf	3,7	;select IRP bank0
  1838     02AF  0800               	movf	0,w
  1839     02B0  00B4               	movwf	sprintf@val
  1840     02B1  0A84               	incf	4,f
  1841     02B2  0800               	movf	0,w
  1842     02B3  00B5               	movwf	sprintf@val+1
  1843     02B4                     l2607:
  1844     02B4  3002               	movlw	2
  1845     02B5  00AF               	movwf	??_sprintf
  1846     02B6  082F               	movf	??_sprintf,w
  1847     02B7  07B2               	addwf	sprintf@ap,f
  1848     02B8                     l2609:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1851     02B8  1FB5               	btfss	sprintf@val+1,7
  1852     02B9  2ABB               	goto	u2871
  1853     02BA  2ABC               	goto	u2870
  1854     02BB                     u2871:
  1855     02BB  2AC5               	goto	l2615
  1856     02BC                     u2870:
  1857     02BC                     l2611:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1860     02BC  3003               	movlw	3
  1861     02BD  00AF               	movwf	??_sprintf
  1862     02BE  082F               	movf	??_sprintf,w
  1863     02BF  04B6               	iorwf	sprintf@flag,f
  1864     02C0                     l2613:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1867     02C0  09B4               	comf	sprintf@val,f
  1868     02C1  09B5               	comf	sprintf@val+1,f
  1869     02C2  0AB4               	incf	sprintf@val,f
  1870     02C3  1903               	skipnz
  1871     02C4  0AB5               	incf	sprintf@val+1,f
  1872     02C5                     l2615:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1875     02C5  01BA               	clrf	sprintf@c
  1876     02C6  0ABA               	incf	sprintf@c,f
  1877     02C7                     l2621:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1880     02C7  083A               	movf	sprintf@c,w
  1881     02C8  00AF               	movwf	??_sprintf
  1882     02C9  072F               	addwf	??_sprintf,w
  1883     02CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1884     02CB  0084               	movwf	4
  1885     02CC  120A  158A  200A  120A  118A  	fcall	stringdir
  1886     02D1  00B0               	movwf	??_sprintf+1
  1887     02D2  120A  158A  200A  120A  118A  	fcall	stringdir
  1888     02D7  00B1               	movwf	??_sprintf+2
  1889     02D8  0831               	movf	??_sprintf+2,w
  1890     02D9  0235               	subwf	sprintf@val+1,w
  1891     02DA  1D03               	skipz
  1892     02DB  2ADE               	goto	u2885
  1893     02DC  0830               	movf	??_sprintf+1,w
  1894     02DD  0234               	subwf	sprintf@val,w
  1895     02DE                     u2885:
  1896     02DE  1803               	skipnc
  1897     02DF  2AE1               	goto	u2881
  1898     02E0  2AE2               	goto	u2880
  1899     02E1                     u2881:
  1900     02E1  2AE3               	goto	l2625
  1901     02E2                     u2880:
  1902     02E2  2AED               	goto	l2627
  1903     02E3                     l2625:
  1904     02E3  3001               	movlw	1
  1905     02E4  00AF               	movwf	??_sprintf
  1906     02E5  082F               	movf	??_sprintf,w
  1907     02E6  07BA               	addwf	sprintf@c,f
  1908     02E7  3005               	movlw	5
  1909     02E8  063A               	xorwf	sprintf@c,w
  1910     02E9  1D03               	btfss	3,2
  1911     02EA  2AEC               	goto	u2891
  1912     02EB  2AED               	goto	u2890
  1913     02EC                     u2891:
  1914     02EC  2AC7               	goto	l2621
  1915     02ED                     u2890:
  1916     02ED                     l2627:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1919     02ED  0837               	movf	sprintf@width,w
  1920     02EE  0438               	iorwf	sprintf@width+1,w
  1921     02EF  1903               	btfsc	3,2
  1922     02F0  2AF2               	goto	u2901
  1923     02F1  2AF3               	goto	u2900
  1924     02F2                     u2901:
  1925     02F2  2AFF               	goto	l425
  1926     02F3                     u2900:
  1927     02F3                     l2629:
  1928     02F3  0836               	movf	sprintf@flag,w
  1929     02F4  3903               	andlw	3
  1930     02F5  1903               	btfsc	3,2
  1931     02F6  2AF8               	goto	u2911
  1932     02F7  2AF9               	goto	u2910
  1933     02F8                     u2911:
  1934     02F8  2AFF               	goto	l425
  1935     02F9                     u2910:
  1936     02F9                     l2631:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1939     02F9  30FF               	movlw	255
  1940     02FA  07B7               	addwf	sprintf@width,f
  1941     02FB  1803               	skipnc
  1942     02FC  0AB8               	incf	sprintf@width+1,f
  1943     02FD  30FF               	movlw	255
  1944     02FE  07B8               	addwf	sprintf@width+1,f
  1945     02FF                     l425:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1948     02FF  0838               	movf	sprintf@width+1,w
  1949     0300  3A80               	xorlw	128
  1950     0301  3C80               	sublw	128
  1951     0302  1D03               	skipz
  1952     0303  2B06               	goto	u2925
  1953     0304  0837               	movf	sprintf@width,w
  1954     0305  023A               	subwf	sprintf@c,w
  1955     0306                     u2925:
  1956     0306  1803               	skipnc
  1957     0307  2B09               	goto	u2921
  1958     0308  2B0A               	goto	u2920
  1959     0309                     u2921:
  1960     0309  2B16               	goto	l2635
  1961     030A                     u2920:
  1962     030A                     l2633:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1965     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1966     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1967     030C  083A               	movf	sprintf@c,w
  1968     030D  00AF               	movwf	??_sprintf
  1969     030E  01B0               	clrf	??_sprintf+1
  1970     030F  082F               	movf	??_sprintf,w
  1971     0310  02B7               	subwf	sprintf@width,f
  1972     0311  0830               	movf	??_sprintf+1,w
  1973     0312  1C03               	skipc
  1974     0313  03B8               	decf	sprintf@width+1,f
  1975     0314  02B8               	subwf	sprintf@width+1,f
  1976     0315  2B1A               	goto	l2637
  1977     0316                     l2635:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1980     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1981     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1982     0318  01B7               	clrf	sprintf@width
  1983     0319  01B8               	clrf	sprintf@width+1
  1984     031A                     l2637:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1987     031A  1D36               	btfss	sprintf@flag,2
  1988     031B  2B1D               	goto	u2931
  1989     031C  2B1E               	goto	u2930
  1990     031D                     u2931:
  1991     031D  2B49               	goto	l2653
  1992     031E                     u2930:
  1993     031E                     l2639:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  1996     031E  0836               	movf	sprintf@flag,w
  1997     031F  3903               	andlw	3
  1998     0320  1903               	btfsc	3,2
  1999     0321  2B23               	goto	u2941
  2000     0322  2B24               	goto	u2940
  2001     0323                     u2941:
  2002     0323  2B2D               	goto	l2645
  2003     0324                     u2940:
  2004     0324                     l2641:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2007     0324  0839               	movf	sprintf@sp,w
  2008     0325  0084               	movwf	4
  2009     0326  302D               	movlw	45
  2010     0327  1383               	bcf	3,7	;select IRP bank0
  2011     0328  0080               	movwf	0
  2012     0329                     l2643:
  2013     0329  3001               	movlw	1
  2014     032A  00AF               	movwf	??_sprintf
  2015     032B  082F               	movf	??_sprintf,w
  2016     032C  07B9               	addwf	sprintf@sp,f
  2017     032D                     l2645:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2020     032D  0837               	movf	sprintf@width,w
  2021     032E  0438               	iorwf	sprintf@width+1,w
  2022     032F  1903               	btfsc	3,2
  2023     0330  2B32               	goto	u2951
  2024     0331  2B33               	goto	u2950
  2025     0332                     u2951:
  2026     0332  2B73               	goto	l2667
  2027     0333                     u2950:
  2028     0333                     l2647:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2031     0333  0839               	movf	sprintf@sp,w
  2032     0334  0084               	movwf	4
  2033     0335  3030               	movlw	48
  2034     0336  1383               	bcf	3,7	;select IRP bank0
  2035     0337  0080               	movwf	0
  2036     0338                     l2649:
  2037     0338  3001               	movlw	1
  2038     0339  00AF               	movwf	??_sprintf
  2039     033A  082F               	movf	??_sprintf,w
  2040     033B  07B9               	addwf	sprintf@sp,f
  2041     033C                     l2651:
  2042     033C  30FF               	movlw	255
  2043     033D  07B7               	addwf	sprintf@width,f
  2044     033E  1803               	skipnc
  2045     033F  0AB8               	incf	sprintf@width+1,f
  2046     0340  30FF               	movlw	255
  2047     0341  07B8               	addwf	sprintf@width+1,f
  2048     0342  0837               	movf	sprintf@width,w
  2049     0343  0438               	iorwf	sprintf@width+1,w
  2050     0344  1D03               	btfss	3,2
  2051     0345  2B47               	goto	u2961
  2052     0346  2B48               	goto	u2960
  2053     0347                     u2961:
  2054     0347  2B33               	goto	l2647
  2055     0348                     u2960:
  2056     0348  2B73               	goto	l2667
  2057     0349                     l2653:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2060     0349  0837               	movf	sprintf@width,w
  2061     034A  0438               	iorwf	sprintf@width+1,w
  2062     034B  1903               	btfsc	3,2
  2063     034C  2B4E               	goto	u2971
  2064     034D  2B4F               	goto	u2970
  2065     034E                     u2971:
  2066     034E  2B64               	goto	l2661
  2067     034F                     u2970:
  2068     034F                     l2655:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2071     034F  0839               	movf	sprintf@sp,w
  2072     0350  0084               	movwf	4
  2073     0351  3020               	movlw	32
  2074     0352  1383               	bcf	3,7	;select IRP bank0
  2075     0353  0080               	movwf	0
  2076     0354                     l2657:
  2077     0354  3001               	movlw	1
  2078     0355  00AF               	movwf	??_sprintf
  2079     0356  082F               	movf	??_sprintf,w
  2080     0357  07B9               	addwf	sprintf@sp,f
  2081     0358                     l2659:
  2082     0358  30FF               	movlw	255
  2083     0359  07B7               	addwf	sprintf@width,f
  2084     035A  1803               	skipnc
  2085     035B  0AB8               	incf	sprintf@width+1,f
  2086     035C  30FF               	movlw	255
  2087     035D  07B8               	addwf	sprintf@width+1,f
  2088     035E  0837               	movf	sprintf@width,w
  2089     035F  0438               	iorwf	sprintf@width+1,w
  2090     0360  1D03               	btfss	3,2
  2091     0361  2B63               	goto	u2981
  2092     0362  2B64               	goto	u2980
  2093     0363                     u2981:
  2094     0363  2B4F               	goto	l2655
  2095     0364                     u2980:
  2096     0364                     l2661:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2099     0364  0836               	movf	sprintf@flag,w
  2100     0365  3903               	andlw	3
  2101     0366  1903               	btfsc	3,2
  2102     0367  2B69               	goto	u2991
  2103     0368  2B6A               	goto	u2990
  2104     0369                     u2991:
  2105     0369  2B73               	goto	l2667
  2106     036A                     u2990:
  2107     036A                     l2663:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2110     036A  0839               	movf	sprintf@sp,w
  2111     036B  0084               	movwf	4
  2112     036C  302D               	movlw	45
  2113     036D  1383               	bcf	3,7	;select IRP bank0
  2114     036E  0080               	movwf	0
  2115     036F                     l2665:
  2116     036F  3001               	movlw	1
  2117     0370  00AF               	movwf	??_sprintf
  2118     0371  082F               	movf	??_sprintf,w
  2119     0372  07B9               	addwf	sprintf@sp,f
  2120     0373                     l2667:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2123     0373  083A               	movf	sprintf@c,w
  2124     0374  00B3               	movwf	sprintf@prec
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2127     0375  2BAD               	goto	l2675
  2128     0376                     l2669:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2131     0376  300A               	movlw	10
  2132     0377  00A3               	movwf	___lwmod@divisor
  2133     0378  3000               	movlw	0
  2134     0379  00A4               	movwf	___lwmod@divisor+1
  2135     037A  0833               	movf	sprintf@prec,w
  2136     037B  00AF               	movwf	??_sprintf
  2137     037C  072F               	addwf	??_sprintf,w
  2138     037D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2139     037E  0084               	movwf	4
  2140     037F  120A  158A  200A  120A  118A  	fcall	stringdir
  2141     0384  00F3               	movwf	___lwdiv@divisor
  2142     0385  120A  158A  200A  120A  118A  	fcall	stringdir
  2143     038A  00F4               	movwf	___lwdiv@divisor+1
  2144     038B  0835               	movf	sprintf@val+1,w
  2145     038C  00F6               	movwf	___lwdiv@dividend+1
  2146     038D  0834               	movf	sprintf@val,w
  2147     038E  00F5               	movwf	___lwdiv@dividend
  2148     038F  120A  118A  27AE  120A  118A  	fcall	___lwdiv
  2149     0394  0874               	movf	?___lwdiv+1,w
  2150     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2151     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2152     0397  00A6               	movwf	___lwmod@dividend+1
  2153     0398  0873               	movf	?___lwdiv,w
  2154     0399  00A5               	movwf	___lwmod@dividend
  2155     039A  120A  158A  2691  120A  118A  	fcall	___lwmod
  2156     039F  1283               	bcf	3,5	;RP0=0, select bank0
  2157     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2158     03A1  0823               	movf	?___lwmod,w
  2159     03A2  3E30               	addlw	48
  2160     03A3  00BA               	movwf	sprintf@c
  2161     03A4                     l2671:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2164     03A4  0839               	movf	sprintf@sp,w
  2165     03A5  0084               	movwf	4
  2166     03A6  083A               	movf	sprintf@c,w
  2167     03A7  1383               	bcf	3,7	;select IRP bank0
  2168     03A8  0080               	movwf	0
  2169     03A9                     l2673:
  2170     03A9  3001               	movlw	1
  2171     03AA  00AF               	movwf	??_sprintf
  2172     03AB  082F               	movf	??_sprintf,w
  2173     03AC  07B9               	addwf	sprintf@sp,f
  2174     03AD                     l2675:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2177     03AD  30FF               	movlw	255
  2178     03AE  00AF               	movwf	??_sprintf
  2179     03AF  082F               	movf	??_sprintf,w
  2180     03B0  07B3               	addwf	sprintf@prec,f
  2181     03B1  0A33               	incf	sprintf@prec,w
  2182     03B2  1D03               	btfss	3,2
  2183     03B3  2BB5               	goto	u3001
  2184     03B4  2BB6               	goto	u3000
  2185     03B5                     u3001:
  2186     03B5  2B76               	goto	l2669
  2187     03B6                     u3000:
  2188     03B6                     l2677:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2191     03B6  3001               	movlw	1
  2192     03B7  07A8               	addwf	sprintf@f,f
  2193     03B8  30FF               	movlw	-1
  2194     03B9  0728               	addwf	sprintf@f,w
  2195     03BA  0084               	movwf	4
  2196     03BB  120A  158A  200A  120A  118A  	fcall	stringdir
  2197     03C0  00BA               	movwf	sprintf@c
  2198     03C1  083A               	movf	sprintf@c,w
  2199     03C2  1D03               	btfss	3,2
  2200     03C3  2BC5               	goto	u3011
  2201     03C4  2BC6               	goto	u3010
  2202     03C5                     u3011:
  2203     03C5  2A11               	goto	l2575
  2204     03C6                     u3010:
  2205     03C6                     l2679:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2208     03C6  0839               	movf	sprintf@sp,w
  2209     03C7  0084               	movwf	4
  2210     03C8  1383               	bcf	3,7	;select IRP bank0
  2211     03C9  0180               	clrf	0
  2212     03CA                     l442:
  2213     03CA  0008               	return
  2214     03CB                     __end_of_sprintf:
  2215                           
  2216                           	psect	text3
  2217     0DEF                     __ptext3:	
  2218 ;; *************** function _isdigit *****************
  2219 ;; Defined at:
  2220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  c               1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  c               1    4[COMMON] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       0       0       0       0
  2235 ;;      Locals:         2       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0
  2237 ;;      Totals:         2       0       0       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_sprintf
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248     0DEF                     _isdigit:	
  2249                           ;psect for function _isdigit
  2250                           
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2254                           ;isdigit@c stored from wreg
  2255     0DEF  00F4               	movwf	isdigit@c
  2256     0DF0                     l1745:
  2257     0DF0  01F3               	clrf	_isdigit$635
  2258     0DF1                     l1747:
  2259     0DF1  303A               	movlw	58
  2260     0DF2  0274               	subwf	isdigit@c,w
  2261     0DF3  1803               	skipnc
  2262     0DF4  2DF6               	goto	u1371
  2263     0DF5  2DF7               	goto	u1370
  2264     0DF6                     u1371:
  2265     0DF6  2DFF               	goto	l1753
  2266     0DF7                     u1370:
  2267     0DF7                     l1749:
  2268     0DF7  3030               	movlw	48
  2269     0DF8  0274               	subwf	isdigit@c,w
  2270     0DF9  1C03               	skipc
  2271     0DFA  2DFC               	goto	u1381
  2272     0DFB  2DFD               	goto	u1380
  2273     0DFC                     u1381:
  2274     0DFC  2DFF               	goto	l1753
  2275     0DFD                     u1380:
  2276     0DFD                     l1751:
  2277     0DFD  01F3               	clrf	_isdigit$635
  2278     0DFE  0AF3               	incf	_isdigit$635,f
  2279     0DFF                     l1753:
  2280     0DFF  0C73               	rrf	_isdigit$635,w
  2281     0E00                     l899:
  2282     0E00  0008               	return
  2283     0E01                     __end_of_isdigit:
  2284                           
  2285                           	psect	text4
  2286     0E3D                     __ptext4:	
  2287 ;; *************** function ___wmul *****************
  2288 ;; Defined at:
  2289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  multiplier      2    3[COMMON] unsigned int 
  2292 ;;  multiplicand    2    5[COMMON] unsigned int 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  product         2    7[COMMON] unsigned int 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2    3[COMMON] unsigned int 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         4       0       0       0       0
  2305 ;;      Locals:         2       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         6       0       0       0       0
  2308 ;;Total ram usage:        6 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_sprintf
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318     0E3D                     ___wmul:	
  2319                           ;psect for function ___wmul
  2320                           
  2321     0E3D                     l1757:	
  2322                           ;incstack = 0
  2323                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2324                           
  2325     0E3D  01F7               	clrf	___wmul@product
  2326     0E3E  01F8               	clrf	___wmul@product+1
  2327     0E3F                     l1759:
  2328     0E3F  1C73               	btfss	___wmul@multiplier,0
  2329     0E40  2E42               	goto	u1391
  2330     0E41  2E43               	goto	u1390
  2331     0E42                     u1391:
  2332     0E42  2E49               	goto	l446
  2333     0E43                     u1390:
  2334     0E43                     l1761:
  2335     0E43  0875               	movf	___wmul@multiplicand,w
  2336     0E44  07F7               	addwf	___wmul@product,f
  2337     0E45  1803               	skipnc
  2338     0E46  0AF8               	incf	___wmul@product+1,f
  2339     0E47  0876               	movf	___wmul@multiplicand+1,w
  2340     0E48  07F8               	addwf	___wmul@product+1,f
  2341     0E49                     l446:
  2342     0E49  3001               	movlw	1
  2343     0E4A                     u1405:
  2344     0E4A  1003               	clrc
  2345     0E4B  0DF5               	rlf	___wmul@multiplicand,f
  2346     0E4C  0DF6               	rlf	___wmul@multiplicand+1,f
  2347     0E4D  3EFF               	addlw	-1
  2348     0E4E  1D03               	skipz
  2349     0E4F  2E4A               	goto	u1405
  2350     0E50                     l1763:
  2351     0E50  3001               	movlw	1
  2352     0E51                     u1415:
  2353     0E51  1003               	clrc
  2354     0E52  0CF4               	rrf	___wmul@multiplier+1,f
  2355     0E53  0CF3               	rrf	___wmul@multiplier,f
  2356     0E54  3EFF               	addlw	-1
  2357     0E55  1D03               	skipz
  2358     0E56  2E51               	goto	u1415
  2359     0E57                     l1765:
  2360     0E57  0873               	movf	___wmul@multiplier,w
  2361     0E58  0474               	iorwf	___wmul@multiplier+1,w
  2362     0E59  1D03               	btfss	3,2
  2363     0E5A  2E5C               	goto	u1421
  2364     0E5B  2E5D               	goto	u1420
  2365     0E5C                     u1421:
  2366     0E5C  2E3F               	goto	l1759
  2367     0E5D                     u1420:
  2368     0E5D                     l1767:
  2369     0E5D  0878               	movf	___wmul@product+1,w
  2370     0E5E  00F4               	movwf	?___wmul+1
  2371     0E5F  0877               	movf	___wmul@product,w
  2372     0E60  00F3               	movwf	?___wmul
  2373     0E61                     l448:
  2374     0E61  0008               	return
  2375     0E62                     __end_of___wmul:
  2376                           
  2377                           	psect	text5
  2378     0E91                     __ptext5:	
  2379 ;; *************** function ___lwmod *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  divisor         2    3[BANK0 ] unsigned int 
  2384 ;;  dividend        2    5[BANK0 ] unsigned int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  counter         1    7[BANK0 ] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  2    3[BANK0 ] unsigned int 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       4       0       0       0
  2397 ;;      Locals:         0       1       0       0       0
  2398 ;;      Temps:          1       0       0       0       0
  2399 ;;      Totals:         1       5       0       0       0
  2400 ;;Total ram usage:        6 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_sprintf
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     0E91                     ___lwmod:	
  2411                           ;psect for function ___lwmod
  2412                           
  2413     0E91                     l2533:	
  2414                           ;incstack = 0
  2415                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2416                           
  2417     0E91  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0E92  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0E93  0823               	movf	___lwmod@divisor,w
  2420     0E94  0424               	iorwf	___lwmod@divisor+1,w
  2421     0E95  1903               	btfsc	3,2
  2422     0E96  2E98               	goto	u2751
  2423     0E97  2E99               	goto	u2750
  2424     0E98                     u2751:
  2425     0E98  2EC8               	goto	l2551
  2426     0E99                     u2750:
  2427     0E99                     l2535:
  2428     0E99  01A7               	clrf	___lwmod@counter
  2429     0E9A  0AA7               	incf	___lwmod@counter,f
  2430     0E9B  2EA7               	goto	l2541
  2431     0E9C                     l2537:
  2432     0E9C  3001               	movlw	1
  2433     0E9D                     u2765:
  2434     0E9D  1003               	clrc
  2435     0E9E  0DA3               	rlf	___lwmod@divisor,f
  2436     0E9F  0DA4               	rlf	___lwmod@divisor+1,f
  2437     0EA0  3EFF               	addlw	-1
  2438     0EA1  1D03               	skipz
  2439     0EA2  2E9D               	goto	u2765
  2440     0EA3                     l2539:
  2441     0EA3  3001               	movlw	1
  2442     0EA4  00F8               	movwf	??___lwmod
  2443     0EA5  0878               	movf	??___lwmod,w
  2444     0EA6  07A7               	addwf	___lwmod@counter,f
  2445     0EA7                     l2541:
  2446     0EA7  1FA4               	btfss	___lwmod@divisor+1,7
  2447     0EA8  2EAA               	goto	u2771
  2448     0EA9  2EAB               	goto	u2770
  2449     0EAA                     u2771:
  2450     0EAA  2E9C               	goto	l2537
  2451     0EAB                     u2770:
  2452     0EAB                     l2543:
  2453     0EAB  0824               	movf	___lwmod@divisor+1,w
  2454     0EAC  0226               	subwf	___lwmod@dividend+1,w
  2455     0EAD  1D03               	skipz
  2456     0EAE  2EB1               	goto	u2785
  2457     0EAF  0823               	movf	___lwmod@divisor,w
  2458     0EB0  0225               	subwf	___lwmod@dividend,w
  2459     0EB1                     u2785:
  2460     0EB1  1C03               	skipc
  2461     0EB2  2EB4               	goto	u2781
  2462     0EB3  2EB5               	goto	u2780
  2463     0EB4                     u2781:
  2464     0EB4  2EBB               	goto	l2547
  2465     0EB5                     u2780:
  2466     0EB5                     l2545:
  2467     0EB5  0823               	movf	___lwmod@divisor,w
  2468     0EB6  02A5               	subwf	___lwmod@dividend,f
  2469     0EB7  0824               	movf	___lwmod@divisor+1,w
  2470     0EB8  1C03               	skipc
  2471     0EB9  03A6               	decf	___lwmod@dividend+1,f
  2472     0EBA  02A6               	subwf	___lwmod@dividend+1,f
  2473     0EBB                     l2547:
  2474     0EBB  3001               	movlw	1
  2475     0EBC                     u2795:
  2476     0EBC  1003               	clrc
  2477     0EBD  0CA4               	rrf	___lwmod@divisor+1,f
  2478     0EBE  0CA3               	rrf	___lwmod@divisor,f
  2479     0EBF  3EFF               	addlw	-1
  2480     0EC0  1D03               	skipz
  2481     0EC1  2EBC               	goto	u2795
  2482     0EC2                     l2549:
  2483     0EC2  3001               	movlw	1
  2484     0EC3  02A7               	subwf	___lwmod@counter,f
  2485     0EC4  1D03               	btfss	3,2
  2486     0EC5  2EC7               	goto	u2801
  2487     0EC6  2EC8               	goto	u2800
  2488     0EC7                     u2801:
  2489     0EC7  2EAB               	goto	l2543
  2490     0EC8                     u2800:
  2491     0EC8                     l2551:
  2492     0EC8  0826               	movf	___lwmod@dividend+1,w
  2493     0EC9  00A4               	movwf	?___lwmod+1
  2494     0ECA  0825               	movf	___lwmod@dividend,w
  2495     0ECB  00A3               	movwf	?___lwmod
  2496     0ECC                     l728:
  2497     0ECC  0008               	return
  2498     0ECD                     __end_of___lwmod:
  2499                           
  2500                           	psect	text6
  2501     07AE                     __ptext6:	
  2502 ;; *************** function ___lwdiv *****************
  2503 ;; Defined at:
  2504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  divisor         2    3[COMMON] unsigned int 
  2507 ;;  dividend        2    5[COMMON] unsigned int 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  quotient        2    1[BANK0 ] unsigned int 
  2510 ;;  counter         1    0[BANK0 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2    3[COMMON] unsigned int 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         4       0       0       0       0
  2521 ;;      Locals:         0       3       0       0       0
  2522 ;;      Temps:          1       0       0       0       0
  2523 ;;      Totals:         5       3       0       0       0
  2524 ;;Total ram usage:        8 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_sprintf
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534     07AE                     ___lwdiv:	
  2535                           ;psect for function ___lwdiv
  2536                           
  2537     07AE                     l2507:	
  2538                           ;incstack = 0
  2539                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2540                           
  2541     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  2542     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  2543     07B0  01A1               	clrf	___lwdiv@quotient
  2544     07B1  01A2               	clrf	___lwdiv@quotient+1
  2545     07B2                     l2509:
  2546     07B2  0873               	movf	___lwdiv@divisor,w
  2547     07B3  0474               	iorwf	___lwdiv@divisor+1,w
  2548     07B4  1903               	btfsc	3,2
  2549     07B5  2FB7               	goto	u2681
  2550     07B6  2FB8               	goto	u2680
  2551     07B7                     u2681:
  2552     07B7  2FEF               	goto	l2529
  2553     07B8                     u2680:
  2554     07B8                     l2511:
  2555     07B8  01A0               	clrf	___lwdiv@counter
  2556     07B9  0AA0               	incf	___lwdiv@counter,f
  2557     07BA  2FC6               	goto	l2517
  2558     07BB                     l2513:
  2559     07BB  3001               	movlw	1
  2560     07BC                     u2695:
  2561     07BC  1003               	clrc
  2562     07BD  0DF3               	rlf	___lwdiv@divisor,f
  2563     07BE  0DF4               	rlf	___lwdiv@divisor+1,f
  2564     07BF  3EFF               	addlw	-1
  2565     07C0  1D03               	skipz
  2566     07C1  2FBC               	goto	u2695
  2567     07C2                     l2515:
  2568     07C2  3001               	movlw	1
  2569     07C3  00F7               	movwf	??___lwdiv
  2570     07C4  0877               	movf	??___lwdiv,w
  2571     07C5  07A0               	addwf	___lwdiv@counter,f
  2572     07C6                     l2517:
  2573     07C6  1FF4               	btfss	___lwdiv@divisor+1,7
  2574     07C7  2FC9               	goto	u2701
  2575     07C8  2FCA               	goto	u2700
  2576     07C9                     u2701:
  2577     07C9  2FBB               	goto	l2513
  2578     07CA                     u2700:
  2579     07CA                     l2519:
  2580     07CA  3001               	movlw	1
  2581     07CB                     u2715:
  2582     07CB  1003               	clrc
  2583     07CC  0DA1               	rlf	___lwdiv@quotient,f
  2584     07CD  0DA2               	rlf	___lwdiv@quotient+1,f
  2585     07CE  3EFF               	addlw	-1
  2586     07CF  1D03               	skipz
  2587     07D0  2FCB               	goto	u2715
  2588     07D1  0874               	movf	___lwdiv@divisor+1,w
  2589     07D2  0276               	subwf	___lwdiv@dividend+1,w
  2590     07D3  1D03               	skipz
  2591     07D4  2FD7               	goto	u2725
  2592     07D5  0873               	movf	___lwdiv@divisor,w
  2593     07D6  0275               	subwf	___lwdiv@dividend,w
  2594     07D7                     u2725:
  2595     07D7  1C03               	skipc
  2596     07D8  2FDA               	goto	u2721
  2597     07D9  2FDB               	goto	u2720
  2598     07DA                     u2721:
  2599     07DA  2FE2               	goto	l2525
  2600     07DB                     u2720:
  2601     07DB                     l2521:
  2602     07DB  0873               	movf	___lwdiv@divisor,w
  2603     07DC  02F5               	subwf	___lwdiv@dividend,f
  2604     07DD  0874               	movf	___lwdiv@divisor+1,w
  2605     07DE  1C03               	skipc
  2606     07DF  03F6               	decf	___lwdiv@dividend+1,f
  2607     07E0  02F6               	subwf	___lwdiv@dividend+1,f
  2608     07E1                     l2523:
  2609     07E1  1421               	bsf	___lwdiv@quotient,0
  2610     07E2                     l2525:
  2611     07E2  3001               	movlw	1
  2612     07E3                     u2735:
  2613     07E3  1003               	clrc
  2614     07E4  0CF4               	rrf	___lwdiv@divisor+1,f
  2615     07E5  0CF3               	rrf	___lwdiv@divisor,f
  2616     07E6  3EFF               	addlw	-1
  2617     07E7  1D03               	skipz
  2618     07E8  2FE3               	goto	u2735
  2619     07E9                     l2527:
  2620     07E9  3001               	movlw	1
  2621     07EA  02A0               	subwf	___lwdiv@counter,f
  2622     07EB  1D03               	btfss	3,2
  2623     07EC  2FEE               	goto	u2741
  2624     07ED  2FEF               	goto	u2740
  2625     07EE                     u2741:
  2626     07EE  2FCA               	goto	l2519
  2627     07EF                     u2740:
  2628     07EF                     l2529:
  2629     07EF  0822               	movf	___lwdiv@quotient+1,w
  2630     07F0  00F4               	movwf	?___lwdiv+1
  2631     07F1  0821               	movf	___lwdiv@quotient,w
  2632     07F2  00F3               	movwf	?___lwdiv
  2633     07F3                     l718:
  2634     07F3  0008               	return
  2635     07F4                     __end_of___lwdiv:
  2636                           
  2637                           	psect	text7
  2638     0ECD                     __ptext7:	
  2639 ;; *************** function _LCD_putrs *****************
  2640 ;; Defined at:
  2641 ;;		line 97 in file "lcd.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  a               2    6[COMMON] PTR const unsigned char 
  2644 ;;		 -> STR_6(2), STR_5(2), STR_4(4), STR_3(4), 
  2645 ;;		 -> update_screen@a_str(9), update_screen@str(9), 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  i               2    3[BANK0 ] int 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         2       0       0       0       0
  2658 ;;      Locals:         0       2       0       0       0
  2659 ;;      Temps:          0       3       0       0       0
  2660 ;;      Totals:         2       5       0       0       0
  2661 ;;Total ram usage:        7 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 3
  2664 ;; This function calls:
  2665 ;;		_LCD_putc
  2666 ;; This function is called by:
  2667 ;;		_update_screen
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671     0ECD                     _LCD_putrs:	
  2672                           ;psect for function _LCD_putrs
  2673                           
  2674     0ECD                     l2565:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2677                           
  2678                           
  2679                           ;lcd.c: 99:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2680     0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  2681     0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  2682     0ECF  01A3               	clrf	LCD_putrs@i
  2683     0ED0  01A4               	clrf	LCD_putrs@i+1
  2684     0ED1  2EF6               	goto	l2571
  2685     0ED2                     l2567:
  2686                           
  2687                           ;lcd.c: 100:         LCD_putc(a[i]);
  2688     0ED2  0823               	movf	LCD_putrs@i,w
  2689     0ED3  0776               	addwf	LCD_putrs@a,w
  2690     0ED4  00A1               	movwf	??_LCD_putrs+1
  2691     0ED5  0877               	movf	LCD_putrs@a+1,w
  2692     0ED6  00A0               	movwf	??_LCD_putrs
  2693     0ED7  1803               	skipnc
  2694     0ED8  0AA0               	incf	??_LCD_putrs,f
  2695     0ED9  1FA3               	btfss	LCD_putrs@i,7
  2696     0EDA  2EDC               	goto	u2810
  2697     0EDB  03A0               	decf	??_LCD_putrs,f
  2698     0EDC                     u2810:
  2699     0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  2700     0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  2701     0EDE  0820               	movf	??_LCD_putrs,w
  2702     0EDF  00A2               	movwf	??_LCD_putrs+2
  2703     0EE0  0822               	movf	??_LCD_putrs+2,w
  2704     0EE1  00FF               	movwf	btemp+1
  2705     0EE2  0821               	movf	??_LCD_putrs+1,w
  2706     0EE3  0084               	movwf	4
  2707     0EE4  120A  158A  2000  120A  158A  	fcall	stringtab
  2708     0EE9  120A  158A  2662  120A  158A  	fcall	_LCD_putc
  2709     0EEE                     l2569:
  2710                           
  2711                           ;lcd.c: 101:     }
  2712     0EEE  3001               	movlw	1
  2713     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0EF1  07A3               	addwf	LCD_putrs@i,f
  2716     0EF2  1803               	skipnc
  2717     0EF3  0AA4               	incf	LCD_putrs@i+1,f
  2718     0EF4  3000               	movlw	0
  2719     0EF5  07A4               	addwf	LCD_putrs@i+1,f
  2720     0EF6                     l2571:
  2721     0EF6  0823               	movf	LCD_putrs@i,w
  2722     0EF7  0776               	addwf	LCD_putrs@a,w
  2723     0EF8  00A1               	movwf	??_LCD_putrs+1
  2724     0EF9  0877               	movf	LCD_putrs@a+1,w
  2725     0EFA  00A0               	movwf	??_LCD_putrs
  2726     0EFB  1803               	skipnc
  2727     0EFC  0AA0               	incf	??_LCD_putrs,f
  2728     0EFD  1FA3               	btfss	LCD_putrs@i,7
  2729     0EFE  2F00               	goto	u2820
  2730     0EFF  03A0               	decf	??_LCD_putrs,f
  2731     0F00                     u2820:
  2732     0F00  1283               	bcf	3,5	;RP0=0, select bank0
  2733     0F01  1303               	bcf	3,6	;RP1=0, select bank0
  2734     0F02  0820               	movf	??_LCD_putrs,w
  2735     0F03  00A2               	movwf	??_LCD_putrs+2
  2736     0F04  0822               	movf	??_LCD_putrs+2,w
  2737     0F05  00FF               	movwf	btemp+1
  2738     0F06  0821               	movf	??_LCD_putrs+1,w
  2739     0F07  0084               	movwf	4
  2740     0F08  120A  158A  2000  120A  158A  	fcall	stringtab
  2741     0F0D  3A00               	xorlw	0
  2742     0F0E  1D03               	skipz
  2743     0F0F  2F11               	goto	u2831
  2744     0F10  2F12               	goto	u2830
  2745     0F11                     u2831:
  2746     0F11  2ED2               	goto	l2567
  2747     0F12                     u2830:
  2748     0F12                     l59:
  2749     0F12  0008               	return
  2750     0F13                     __end_of_LCD_putrs:
  2751                           
  2752                           	psect	text8
  2753     0E62                     __ptext8:	
  2754 ;; *************** function _LCD_putc *****************
  2755 ;; Defined at:
  2756 ;;		line 72 in file "lcd.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  c               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  c               1    5[COMMON] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0
  2772 ;;      Temps:          1       0       0       0       0
  2773 ;;      Totals:         2       0       0       0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		_LCD_Out
  2779 ;; This function is called by:
  2780 ;;		_LCD_putrs
  2781 ;;		_LCD_puts
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785     0E62                     _LCD_putc:	
  2786                           ;psect for function _LCD_putc
  2787                           
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _LCD_putc: [wreg+status,2+status,0+pclath+cstack]
  2791                           ;LCD_putc@c stored from wreg
  2792     0E62  00F5               	movwf	LCD_putc@c
  2793     0E63                     l2491:
  2794                           
  2795                           ;lcd.c: 74:     RE1 = 1;
  2796     0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2797     0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2798     0E65  1489               	bsf	9,1	;volatile
  2799     0E66                     l2493:
  2800                           
  2801                           ;lcd.c: 75:     LCD_Out((c & 0xF0) >> 4);
  2802     0E66  0875               	movf	LCD_putc@c,w
  2803     0E67  00F4               	movwf	??_LCD_putc
  2804     0E68  3004               	movlw	4
  2805     0E69                     u2675:
  2806     0E69  1003               	clrc
  2807     0E6A  0CF4               	rrf	??_LCD_putc,f
  2808     0E6B  3EFF               	addlw	-1
  2809     0E6C  1D03               	skipz
  2810     0E6D  2E69               	goto	u2675
  2811     0E6E  0874               	movf	??_LCD_putc,w
  2812     0E6F  390F               	andlw	15
  2813     0E70  120A  158A  261B  120A  158A  	fcall	_LCD_Out
  2814     0E75                     l2495:
  2815                           
  2816                           ;lcd.c: 77:     RE0 = 1;
  2817     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  2818     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  2819     0E77  1409               	bsf	9,0	;volatile
  2820     0E78                     l2497:
  2821                           
  2822                           ;lcd.c: 78:     _delay((unsigned long)((40)*(10000000/4000000.0)));
  2823     0E78  3021               	movlw	33
  2824     0E79  00F4               	movwf	??_LCD_putc
  2825     0E7A                     u3497:
  2826     0E7A  0BF4               	decfsz	??_LCD_putc,f
  2827     0E7B  2E7A               	goto	u3497
  2828     0E7C                     l2499:
  2829                           
  2830                           ;lcd.c: 79:     RE0 = 0;
  2831     0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  2832     0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  2833     0E7E  1009               	bcf	9,0	;volatile
  2834     0E7F                     l2501:
  2835                           
  2836                           ;lcd.c: 81:     LCD_Out(c & 0x0F);
  2837     0E7F  0875               	movf	LCD_putc@c,w
  2838     0E80  390F               	andlw	15
  2839     0E81  120A  158A  261B  120A  158A  	fcall	_LCD_Out
  2840     0E86                     l2503:
  2841                           
  2842                           ;lcd.c: 83:     RE0 = 1;
  2843     0E86  1283               	bcf	3,5	;RP0=0, select bank0
  2844     0E87  1303               	bcf	3,6	;RP1=0, select bank0
  2845     0E88  1409               	bsf	9,0	;volatile
  2846                           
  2847                           ;lcd.c: 84:     _delay((unsigned long)((40)*(10000000/4000000.0)));
  2848     0E89  3021               	movlw	33
  2849     0E8A  00F4               	movwf	??_LCD_putc
  2850     0E8B                     u3507:
  2851     0E8B  0BF4               	decfsz	??_LCD_putc,f
  2852     0E8C  2E8B               	goto	u3507
  2853     0E8D                     l2505:
  2854                           
  2855                           ;lcd.c: 85:     RE0 = 0;
  2856     0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  2857     0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  2858     0E8F  1009               	bcf	9,0	;volatile
  2859     0E90                     l47:
  2860     0E90  0008               	return
  2861     0E91                     __end_of_LCD_putc:
  2862                           
  2863                           	psect	text9
  2864     0644                     __ptext9:	
  2865 ;; *************** function ___xxtofl *****************
  2866 ;; Defined at:
  2867 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  sign            1    wreg     unsigned char 
  2870 ;;  val             4    3[COMMON] long 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  sign            1    4[BANK0 ] unsigned char 
  2873 ;;  arg             4    6[BANK0 ] unsigned long 
  2874 ;;  exp             1    5[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  4    3[COMMON] unsigned char 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         4       0       0       0       0
  2885 ;;      Locals:         0       6       0       0       0
  2886 ;;      Temps:          0       4       0       0       0
  2887 ;;      Totals:         4      10       0       0       0
  2888 ;;Total ram usage:       14 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898     0644                     ___xxtofl:	
  2899                           ;psect for function ___xxtofl
  2900                           
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2904                           ;___xxtofl@sign stored from wreg
  2905     0644  1283               	bcf	3,5	;RP0=0, select bank0
  2906     0645  1303               	bcf	3,6	;RP1=0, select bank0
  2907     0646  00A4               	movwf	___xxtofl@sign
  2908     0647                     l2883:
  2909     0647  0824               	movf	___xxtofl@sign,w
  2910     0648  1903               	btfsc	3,2
  2911     0649  2E4B               	goto	u3241
  2912     064A  2E4C               	goto	u3240
  2913     064B                     u3241:
  2914     064B  2E60               	goto	l2889
  2915     064C                     u3240:
  2916     064C                     l2885:
  2917     064C  1FF6               	btfss	___xxtofl@val+3,7
  2918     064D  2E4F               	goto	u3251
  2919     064E  2E50               	goto	u3250
  2920     064F                     u3251:
  2921     064F  2E60               	goto	l2889
  2922     0650                     u3250:
  2923     0650                     l2887:
  2924     0650  0973               	comf	___xxtofl@val,w
  2925     0651  00A6               	movwf	___xxtofl@arg
  2926     0652  0974               	comf	___xxtofl@val+1,w
  2927     0653  00A7               	movwf	___xxtofl@arg+1
  2928     0654  0975               	comf	___xxtofl@val+2,w
  2929     0655  00A8               	movwf	___xxtofl@arg+2
  2930     0656  0976               	comf	___xxtofl@val+3,w
  2931     0657  00A9               	movwf	___xxtofl@arg+3
  2932     0658  0AA6               	incf	___xxtofl@arg,f
  2933     0659  1903               	skipnz
  2934     065A  0AA7               	incf	___xxtofl@arg+1,f
  2935     065B  1903               	skipnz
  2936     065C  0AA8               	incf	___xxtofl@arg+2,f
  2937     065D  1903               	skipnz
  2938     065E  0AA9               	incf	___xxtofl@arg+3,f
  2939     065F  2E68               	goto	l879
  2940     0660                     l2889:
  2941     0660  0876               	movf	___xxtofl@val+3,w
  2942     0661  00A9               	movwf	___xxtofl@arg+3
  2943     0662  0875               	movf	___xxtofl@val+2,w
  2944     0663  00A8               	movwf	___xxtofl@arg+2
  2945     0664  0874               	movf	___xxtofl@val+1,w
  2946     0665  00A7               	movwf	___xxtofl@arg+1
  2947     0666  0873               	movf	___xxtofl@val,w
  2948     0667  00A6               	movwf	___xxtofl@arg
  2949     0668                     l879:
  2950     0668  0876               	movf	___xxtofl@val+3,w
  2951     0669  0475               	iorwf	___xxtofl@val+2,w
  2952     066A  0474               	iorwf	___xxtofl@val+1,w
  2953     066B  0473               	iorwf	___xxtofl@val,w
  2954     066C  1D03               	skipz
  2955     066D  2E6F               	goto	u3261
  2956     066E  2E70               	goto	u3260
  2957     066F                     u3261:
  2958     066F  2E79               	goto	l2895
  2959     0670                     u3260:
  2960     0670                     l2891:
  2961     0670  3000               	movlw	0
  2962     0671  00F6               	movwf	?___xxtofl+3
  2963     0672  3000               	movlw	0
  2964     0673  00F5               	movwf	?___xxtofl+2
  2965     0674  3000               	movlw	0
  2966     0675  00F4               	movwf	?___xxtofl+1
  2967     0676  3000               	movlw	0
  2968     0677  00F3               	movwf	?___xxtofl
  2969     0678  2EFD               	goto	l881
  2970     0679                     l2895:
  2971     0679  3096               	movlw	150
  2972     067A  00A5               	movwf	___xxtofl@exp
  2973     067B  2E89               	goto	l2899
  2974     067C                     l2897:
  2975     067C  3001               	movlw	1
  2976     067D  00A0               	movwf	??___xxtofl
  2977     067E  0820               	movf	??___xxtofl,w
  2978     067F  07A5               	addwf	___xxtofl@exp,f
  2979     0680  3001               	movlw	1
  2980     0681                     u3275:
  2981     0681  1003               	clrc
  2982     0682  0CA9               	rrf	___xxtofl@arg+3,f
  2983     0683  0CA8               	rrf	___xxtofl@arg+2,f
  2984     0684  0CA7               	rrf	___xxtofl@arg+1,f
  2985     0685  0CA6               	rrf	___xxtofl@arg,f
  2986     0686  3EFF               	addlw	-1
  2987     0687  1D03               	skipz
  2988     0688  2E81               	goto	u3275
  2989     0689                     l2899:
  2990     0689  30FE               	movlw	254
  2991     068A  0529               	andwf	___xxtofl@arg+3,w
  2992     068B  1D03               	btfss	3,2
  2993     068C  2E8E               	goto	u3281
  2994     068D  2E8F               	goto	u3280
  2995     068E                     u3281:
  2996     068E  2E7C               	goto	l2897
  2997     068F                     u3280:
  2998     068F  2EAB               	goto	l885
  2999     0690                     l2901:
  3000     0690  3001               	movlw	1
  3001     0691  00A0               	movwf	??___xxtofl
  3002     0692  0820               	movf	??___xxtofl,w
  3003     0693  07A5               	addwf	___xxtofl@exp,f
  3004     0694                     l2903:
  3005     0694  3001               	movlw	1
  3006     0695  07A6               	addwf	___xxtofl@arg,f
  3007     0696  3000               	movlw	0
  3008     0697  1803               	skipnc
  3009     0698  3001               	movlw	1
  3010     0699  07A7               	addwf	___xxtofl@arg+1,f
  3011     069A  3000               	movlw	0
  3012     069B  1803               	skipnc
  3013     069C  3001               	movlw	1
  3014     069D  07A8               	addwf	___xxtofl@arg+2,f
  3015     069E  3000               	movlw	0
  3016     069F  1803               	skipnc
  3017     06A0  3001               	movlw	1
  3018     06A1  07A9               	addwf	___xxtofl@arg+3,f
  3019     06A2                     l2905:
  3020     06A2  3001               	movlw	1
  3021     06A3                     u3295:
  3022     06A3  1003               	clrc
  3023     06A4  0CA9               	rrf	___xxtofl@arg+3,f
  3024     06A5  0CA8               	rrf	___xxtofl@arg+2,f
  3025     06A6  0CA7               	rrf	___xxtofl@arg+1,f
  3026     06A7  0CA6               	rrf	___xxtofl@arg,f
  3027     06A8  3EFF               	addlw	-1
  3028     06A9  1D03               	skipz
  3029     06AA  2EA3               	goto	u3295
  3030     06AB                     l885:
  3031     06AB  30FF               	movlw	255
  3032     06AC  0529               	andwf	___xxtofl@arg+3,w
  3033     06AD  1D03               	btfss	3,2
  3034     06AE  2EB0               	goto	u3301
  3035     06AF  2EB1               	goto	u3300
  3036     06B0                     u3301:
  3037     06B0  2E90               	goto	l2901
  3038     06B1                     u3300:
  3039     06B1  2EBD               	goto	l2909
  3040     06B2                     l2907:
  3041     06B2  3001               	movlw	1
  3042     06B3  02A5               	subwf	___xxtofl@exp,f
  3043     06B4  3001               	movlw	1
  3044     06B5  00A0               	movwf	??___xxtofl
  3045     06B6                     u3315:
  3046     06B6  1003               	clrc
  3047     06B7  0DA6               	rlf	___xxtofl@arg,f
  3048     06B8  0DA7               	rlf	___xxtofl@arg+1,f
  3049     06B9  0DA8               	rlf	___xxtofl@arg+2,f
  3050     06BA  0DA9               	rlf	___xxtofl@arg+3,f
  3051     06BB  0BA0               	decfsz	??___xxtofl,f
  3052     06BC  2EB6               	goto	u3315
  3053     06BD                     l2909:
  3054     06BD  1BA8               	btfsc	___xxtofl@arg+2,7
  3055     06BE  2EC0               	goto	u3321
  3056     06BF  2EC1               	goto	u3320
  3057     06C0                     u3321:
  3058     06C0  2EC7               	goto	l892
  3059     06C1                     u3320:
  3060     06C1                     l2911:
  3061     06C1  3002               	movlw	2
  3062     06C2  0225               	subwf	___xxtofl@exp,w
  3063     06C3  1803               	skipnc
  3064     06C4  2EC6               	goto	u3331
  3065     06C5  2EC7               	goto	u3330
  3066     06C6                     u3331:
  3067     06C6  2EB2               	goto	l2907
  3068     06C7                     u3330:
  3069     06C7                     l892:
  3070     06C7  1825               	btfsc	___xxtofl@exp,0
  3071     06C8  2ECA               	goto	u3341
  3072     06C9  2ECB               	goto	u3340
  3073     06CA                     u3341:
  3074     06CA  2ED3               	goto	l893
  3075     06CB                     u3340:
  3076     06CB                     l2913:
  3077     06CB  30FF               	movlw	255
  3078     06CC  05A6               	andwf	___xxtofl@arg,f
  3079     06CD  30FF               	movlw	255
  3080     06CE  05A7               	andwf	___xxtofl@arg+1,f
  3081     06CF  307F               	movlw	127
  3082     06D0  05A8               	andwf	___xxtofl@arg+2,f
  3083     06D1  30FF               	movlw	255
  3084     06D2  05A9               	andwf	___xxtofl@arg+3,f
  3085     06D3                     l893:
  3086     06D3  1003               	clrc
  3087     06D4  0CA5               	rrf	___xxtofl@exp,f
  3088     06D5                     l2915:
  3089     06D5  0825               	movf	___xxtofl@exp,w
  3090     06D6  00A0               	movwf	??___xxtofl
  3091     06D7  01A1               	clrf	??___xxtofl+1
  3092     06D8  01A2               	clrf	??___xxtofl+2
  3093     06D9  01A3               	clrf	??___xxtofl+3
  3094     06DA  3018               	movlw	24
  3095     06DB                     u3355:
  3096     06DB  1003               	clrc
  3097     06DC  0DA0               	rlf	??___xxtofl,f
  3098     06DD  0DA1               	rlf	??___xxtofl+1,f
  3099     06DE  0DA2               	rlf	??___xxtofl+2,f
  3100     06DF  0DA3               	rlf	??___xxtofl+3,f
  3101     06E0                     u3350:
  3102     06E0  3EFF               	addlw	-1
  3103     06E1  1D03               	skipz
  3104     06E2  2EDB               	goto	u3355
  3105     06E3  0820               	movf	??___xxtofl,w
  3106     06E4  04A6               	iorwf	___xxtofl@arg,f
  3107     06E5  0821               	movf	??___xxtofl+1,w
  3108     06E6  04A7               	iorwf	___xxtofl@arg+1,f
  3109     06E7  0822               	movf	??___xxtofl+2,w
  3110     06E8  04A8               	iorwf	___xxtofl@arg+2,f
  3111     06E9  0823               	movf	??___xxtofl+3,w
  3112     06EA  04A9               	iorwf	___xxtofl@arg+3,f
  3113     06EB                     l2917:
  3114     06EB  0824               	movf	___xxtofl@sign,w
  3115     06EC  1903               	btfsc	3,2
  3116     06ED  2EEF               	goto	u3361
  3117     06EE  2EF0               	goto	u3360
  3118     06EF                     u3361:
  3119     06EF  2EF5               	goto	l2923
  3120     06F0                     u3360:
  3121     06F0                     l2919:
  3122     06F0  1FF6               	btfss	___xxtofl@val+3,7
  3123     06F1  2EF3               	goto	u3371
  3124     06F2  2EF4               	goto	u3370
  3125     06F3                     u3371:
  3126     06F3  2EF5               	goto	l2923
  3127     06F4                     u3370:
  3128     06F4                     l2921:
  3129     06F4  17A9               	bsf	___xxtofl@arg+3,7
  3130     06F5                     l2923:
  3131     06F5  0829               	movf	___xxtofl@arg+3,w
  3132     06F6  00F6               	movwf	?___xxtofl+3
  3133     06F7  0828               	movf	___xxtofl@arg+2,w
  3134     06F8  00F5               	movwf	?___xxtofl+2
  3135     06F9  0827               	movf	___xxtofl@arg+1,w
  3136     06FA  00F4               	movwf	?___xxtofl+1
  3137     06FB  0826               	movf	___xxtofl@arg,w
  3138     06FC  00F3               	movwf	?___xxtofl
  3139     06FD                     l881:
  3140     06FD  0008               	return
  3141     06FE                     __end_of___xxtofl:
  3142                           
  3143                           	psect	text10
  3144     0F88                     __ptext10:	
  3145 ;; *************** function ___fltol *****************
  3146 ;; Defined at:
  3147 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  f1              4   36[BANK0 ] unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  exp1            1    8[COMMON] unsigned char 
  3152 ;;  sign1           1    7[COMMON] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  4   36[BANK0 ] long 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       4       0       0       0
  3163 ;;      Locals:         2       0       0       0       0
  3164 ;;      Temps:          0       4       0       0       0
  3165 ;;      Totals:         2       8       0       0       0
  3166 ;;Total ram usage:       10 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176     0F88                     ___fltol:	
  3177                           ;psect for function ___fltol
  3178                           
  3179     0F88                     l2847:	
  3180                           ;incstack = 0
  3181                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3182                           
  3183     0F88  1003               	clrc
  3184     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3185     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3186     0F8B  0D46               	rlf	___fltol@f1+2,w
  3187     0F8C  0D47               	rlf	___fltol@f1+3,w
  3188     0F8D  00F8               	movwf	___fltol@exp1
  3189     0F8E  0878               	movf	___fltol@exp1,w
  3190     0F8F  1D03               	btfss	3,2
  3191     0F90  2F92               	goto	u3141
  3192     0F91  2F93               	goto	u3140
  3193     0F92                     u3141:
  3194     0F92  2F9C               	goto	l2853
  3195     0F93                     u3140:
  3196     0F93                     l2849:
  3197     0F93  3000               	movlw	0
  3198     0F94  00C7               	movwf	?___fltol+3
  3199     0F95  3000               	movlw	0
  3200     0F96  00C6               	movwf	?___fltol+2
  3201     0F97  3000               	movlw	0
  3202     0F98  00C5               	movwf	?___fltol+1
  3203     0F99  3000               	movlw	0
  3204     0F9A  00C4               	movwf	?___fltol
  3205     0F9B  2FFF               	goto	l632
  3206     0F9C                     l2853:
  3207     0F9C  0844               	movf	___fltol@f1,w
  3208     0F9D  00C8               	movwf	??___fltol
  3209     0F9E  0845               	movf	___fltol@f1+1,w
  3210     0F9F  00C9               	movwf	??___fltol+1
  3211     0FA0  0846               	movf	___fltol@f1+2,w
  3212     0FA1  00CA               	movwf	??___fltol+2
  3213     0FA2  0847               	movf	___fltol@f1+3,w
  3214     0FA3  00CB               	movwf	??___fltol+3
  3215     0FA4  301F               	movlw	31
  3216     0FA5                     u3155:
  3217     0FA5  1003               	clrc
  3218     0FA6  0CCB               	rrf	??___fltol+3,f
  3219     0FA7  0CCA               	rrf	??___fltol+2,f
  3220     0FA8  0CC9               	rrf	??___fltol+1,f
  3221     0FA9  0CC8               	rrf	??___fltol,f
  3222     0FAA                     u3150:
  3223     0FAA  3EFF               	addlw	-1
  3224     0FAB  1D03               	skipz
  3225     0FAC  2FA5               	goto	u3155
  3226     0FAD  0848               	movf	??___fltol,w
  3227     0FAE  00F7               	movwf	___fltol@sign1
  3228     0FAF                     l2855:
  3229     0FAF  17C6               	bsf	___fltol@f1+2,7
  3230     0FB0                     l2857:
  3231     0FB0  30FF               	movlw	255
  3232     0FB1  05C4               	andwf	___fltol@f1,f
  3233     0FB2  30FF               	movlw	255
  3234     0FB3  05C5               	andwf	___fltol@f1+1,f
  3235     0FB4  30FF               	movlw	255
  3236     0FB5  05C6               	andwf	___fltol@f1+2,f
  3237     0FB6  3000               	movlw	0
  3238     0FB7  05C7               	andwf	___fltol@f1+3,f
  3239     0FB8                     l2859:
  3240     0FB8  3096               	movlw	150
  3241     0FB9  02F8               	subwf	___fltol@exp1,f
  3242     0FBA                     l2861:
  3243     0FBA  1FF8               	btfss	___fltol@exp1,7
  3244     0FBB  2FBD               	goto	u3161
  3245     0FBC  2FBE               	goto	u3160
  3246     0FBD                     u3161:
  3247     0FBD  2FD8               	goto	l2871
  3248     0FBE                     u3160:
  3249     0FBE                     l2863:
  3250     0FBE  0878               	movf	___fltol@exp1,w
  3251     0FBF  3A80               	xorlw	128
  3252     0FC0  3E97               	addlw	151
  3253     0FC1  1803               	skipnc
  3254     0FC2  2FC4               	goto	u3171
  3255     0FC3  2FC5               	goto	u3170
  3256     0FC4                     u3171:
  3257     0FC4  2FC6               	goto	l2869
  3258     0FC5                     u3170:
  3259     0FC5  2F93               	goto	l2849
  3260     0FC6                     l2869:
  3261     0FC6  3001               	movlw	1
  3262     0FC7                     u3185:
  3263     0FC7  1003               	clrc
  3264     0FC8  0CC7               	rrf	___fltol@f1+3,f
  3265     0FC9  0CC6               	rrf	___fltol@f1+2,f
  3266     0FCA  0CC5               	rrf	___fltol@f1+1,f
  3267     0FCB  0CC4               	rrf	___fltol@f1,f
  3268     0FCC  3EFF               	addlw	-1
  3269     0FCD  1D03               	skipz
  3270     0FCE  2FC7               	goto	u3185
  3271     0FCF  3001               	movlw	1
  3272     0FD0  00C8               	movwf	??___fltol
  3273     0FD1  0848               	movf	??___fltol,w
  3274     0FD2  07F8               	addwf	___fltol@exp1,f
  3275     0FD3  1D03               	btfss	3,2
  3276     0FD4  2FD6               	goto	u3191
  3277     0FD5  2FD7               	goto	u3190
  3278     0FD6                     u3191:
  3279     0FD6  2FC6               	goto	l2869
  3280     0FD7                     u3190:
  3281     0FD7  2FEF               	goto	l2879
  3282     0FD8                     l2871:
  3283     0FD8  3020               	movlw	32
  3284     0FD9  0278               	subwf	___fltol@exp1,w
  3285     0FDA  1C03               	skipc
  3286     0FDB  2FDD               	goto	u3201
  3287     0FDC  2FDE               	goto	u3200
  3288     0FDD                     u3201:
  3289     0FDD  2FEA               	goto	l639
  3290     0FDE                     u3200:
  3291     0FDE  2F93               	goto	l2849
  3292     0FDF                     l2877:
  3293     0FDF  3001               	movlw	1
  3294     0FE0  00C8               	movwf	??___fltol
  3295     0FE1                     u3215:
  3296     0FE1  1003               	clrc
  3297     0FE2  0DC4               	rlf	___fltol@f1,f
  3298     0FE3  0DC5               	rlf	___fltol@f1+1,f
  3299     0FE4  0DC6               	rlf	___fltol@f1+2,f
  3300     0FE5  0DC7               	rlf	___fltol@f1+3,f
  3301     0FE6  0BC8               	decfsz	??___fltol,f
  3302     0FE7  2FE1               	goto	u3215
  3303     0FE8  3001               	movlw	1
  3304     0FE9  02F8               	subwf	___fltol@exp1,f
  3305     0FEA                     l639:
  3306     0FEA  0878               	movf	___fltol@exp1,w
  3307     0FEB  1D03               	btfss	3,2
  3308     0FEC  2FEE               	goto	u3221
  3309     0FED  2FEF               	goto	u3220
  3310     0FEE                     u3221:
  3311     0FEE  2FDF               	goto	l2877
  3312     0FEF                     u3220:
  3313     0FEF                     l2879:
  3314     0FEF  0877               	movf	___fltol@sign1,w
  3315     0FF0  1903               	btfsc	3,2
  3316     0FF1  2FF3               	goto	u3231
  3317     0FF2  2FF4               	goto	u3230
  3318     0FF3                     u3231:
  3319     0FF3  2FFF               	goto	l642
  3320     0FF4                     u3230:
  3321     0FF4                     l2881:
  3322     0FF4  09C4               	comf	___fltol@f1,f
  3323     0FF5  09C5               	comf	___fltol@f1+1,f
  3324     0FF6  09C6               	comf	___fltol@f1+2,f
  3325     0FF7  09C7               	comf	___fltol@f1+3,f
  3326     0FF8  0AC4               	incf	___fltol@f1,f
  3327     0FF9  1903               	skipnz
  3328     0FFA  0AC5               	incf	___fltol@f1+1,f
  3329     0FFB  1903               	skipnz
  3330     0FFC  0AC6               	incf	___fltol@f1+2,f
  3331     0FFD  1903               	skipnz
  3332     0FFE  0AC7               	incf	___fltol@f1+3,f
  3333     0FFF                     l642:
  3334     0FFF                     l632:
  3335     0FFF  0008               	return
  3336     1000                     __end_of___fltol:
  3337                           
  3338                           	psect	text11
  3339     0038                     __ptext11:	
  3340 ;; *************** function ___fldiv *****************
  3341 ;; Defined at:
  3342 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  a               4   10[BANK0 ] long 
  3345 ;;  b               4   14[BANK0 ] long 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  grs             4   30[BANK0 ] unsigned long 
  3348 ;;  rem             4   23[BANK0 ] unsigned long 
  3349 ;;  new_exp         2   28[BANK0 ] int 
  3350 ;;  aexp            1   35[BANK0 ] unsigned char 
  3351 ;;  bexp            1   34[BANK0 ] unsigned char 
  3352 ;;  sign            1   27[BANK0 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  4   10[BANK0 ] unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, btemp+1
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       8       0       0       0
  3363 ;;      Locals:         0      13       0       0       0
  3364 ;;      Temps:          0       5       0       0       0
  3365 ;;      Totals:         0      26       0       0       0
  3366 ;;Total ram usage:       26 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376     0038                     ___fldiv:	
  3377                           ;psect for function ___fldiv
  3378                           
  3379     0038                     l2147:	
  3380                           ;incstack = 0
  3381                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3382                           
  3383     0038  1283               	bcf	3,5	;RP0=0, select bank0
  3384     0039  1303               	bcf	3,6	;RP1=0, select bank0
  3385     003A  0831               	movf	___fldiv@b+3,w
  3386     003B  3980               	andlw	128
  3387     003C  00BB               	movwf	___fldiv@sign
  3388     003D                     l2149:
  3389     003D  0831               	movf	___fldiv@b+3,w
  3390     003E  00B2               	movwf	??___fldiv
  3391     003F  0732               	addwf	??___fldiv,w
  3392     0040  00C2               	movwf	___fldiv@bexp
  3393     0041                     l2151:
  3394     0041  1FB0               	btfss	___fldiv@b+2,7
  3395     0042  2844               	goto	u1991
  3396     0043  2845               	goto	u1990
  3397     0044                     u1991:
  3398     0044  2846               	goto	l2155
  3399     0045                     u1990:
  3400     0045                     l2153:
  3401     0045  1442               	bsf	___fldiv@bexp,0
  3402     0046                     l2155:
  3403     0046  0842               	movf	___fldiv@bexp,w
  3404     0047  1903               	btfsc	3,2
  3405     0048  284A               	goto	u2001
  3406     0049  284B               	goto	u2000
  3407     004A                     u2001:
  3408     004A  285B               	goto	l2165
  3409     004B                     u2000:
  3410     004B                     l2157:
  3411     004B  0A42               	incf	___fldiv@bexp,w
  3412     004C  1D03               	btfss	3,2
  3413     004D  284F               	goto	u2011
  3414     004E  2850               	goto	u2010
  3415     004F                     u2011:
  3416     004F  2858               	goto	l2161
  3417     0050                     u2010:
  3418     0050                     l2159:
  3419     0050  3000               	movlw	0
  3420     0051  00B1               	movwf	___fldiv@b+3
  3421     0052  3000               	movlw	0
  3422     0053  00B0               	movwf	___fldiv@b+2
  3423     0054  3000               	movlw	0
  3424     0055  00AF               	movwf	___fldiv@b+1
  3425     0056  3000               	movlw	0
  3426     0057  00AE               	movwf	___fldiv@b
  3427     0058                     l2161:
  3428     0058  17B0               	bsf	___fldiv@b+2,7
  3429     0059                     l2163:
  3430     0059  01B1               	clrf	___fldiv@b+3
  3431     005A  2863               	goto	l2167
  3432     005B                     l2165:
  3433     005B  3000               	movlw	0
  3434     005C  00B1               	movwf	___fldiv@b+3
  3435     005D  3000               	movlw	0
  3436     005E  00B0               	movwf	___fldiv@b+2
  3437     005F  3000               	movlw	0
  3438     0060  00AF               	movwf	___fldiv@b+1
  3439     0061  3000               	movlw	0
  3440     0062  00AE               	movwf	___fldiv@b
  3441     0063                     l2167:
  3442     0063  082D               	movf	___fldiv@a+3,w
  3443     0064  3980               	andlw	128
  3444     0065  00B2               	movwf	??___fldiv
  3445     0066  0832               	movf	??___fldiv,w
  3446     0067  06BB               	xorwf	___fldiv@sign,f
  3447     0068                     l2169:
  3448     0068  082D               	movf	___fldiv@a+3,w
  3449     0069  00B2               	movwf	??___fldiv
  3450     006A  0732               	addwf	??___fldiv,w
  3451     006B  00C3               	movwf	___fldiv@aexp
  3452     006C                     l2171:
  3453     006C  1FAC               	btfss	___fldiv@a+2,7
  3454     006D  286F               	goto	u2021
  3455     006E  2870               	goto	u2020
  3456     006F                     u2021:
  3457     006F  2871               	goto	l2175
  3458     0070                     u2020:
  3459     0070                     l2173:
  3460     0070  1443               	bsf	___fldiv@aexp,0
  3461     0071                     l2175:
  3462     0071  0843               	movf	___fldiv@aexp,w
  3463     0072  1903               	btfsc	3,2
  3464     0073  2875               	goto	u2031
  3465     0074  2876               	goto	u2030
  3466     0075                     u2031:
  3467     0075  2886               	goto	l2185
  3468     0076                     u2030:
  3469     0076                     l2177:
  3470     0076  0A43               	incf	___fldiv@aexp,w
  3471     0077  1D03               	btfss	3,2
  3472     0078  287A               	goto	u2041
  3473     0079  287B               	goto	u2040
  3474     007A                     u2041:
  3475     007A  2883               	goto	l2181
  3476     007B                     u2040:
  3477     007B                     l2179:
  3478     007B  3000               	movlw	0
  3479     007C  00AD               	movwf	___fldiv@a+3
  3480     007D  3000               	movlw	0
  3481     007E  00AC               	movwf	___fldiv@a+2
  3482     007F  3000               	movlw	0
  3483     0080  00AB               	movwf	___fldiv@a+1
  3484     0081  3000               	movlw	0
  3485     0082  00AA               	movwf	___fldiv@a
  3486     0083                     l2181:
  3487     0083  17AC               	bsf	___fldiv@a+2,7
  3488     0084                     l2183:
  3489     0084  01AD               	clrf	___fldiv@a+3
  3490     0085  288E               	goto	l795
  3491     0086                     l2185:
  3492     0086  3000               	movlw	0
  3493     0087  00AD               	movwf	___fldiv@a+3
  3494     0088  3000               	movlw	0
  3495     0089  00AC               	movwf	___fldiv@a+2
  3496     008A  3000               	movlw	0
  3497     008B  00AB               	movwf	___fldiv@a+1
  3498     008C  3000               	movlw	0
  3499     008D  00AA               	movwf	___fldiv@a
  3500     008E                     l795:
  3501     008E  082D               	movf	___fldiv@a+3,w
  3502     008F  042C               	iorwf	___fldiv@a+2,w
  3503     0090  042B               	iorwf	___fldiv@a+1,w
  3504     0091  042A               	iorwf	___fldiv@a,w
  3505     0092  1D03               	skipz
  3506     0093  2895               	goto	u2051
  3507     0094  2896               	goto	u2050
  3508     0095                     u2051:
  3509     0095  28AF               	goto	l2195
  3510     0096                     u2050:
  3511     0096                     l2187:
  3512     0096  3000               	movlw	0
  3513     0097  00B1               	movwf	___fldiv@b+3
  3514     0098  3000               	movlw	0
  3515     0099  00B0               	movwf	___fldiv@b+2
  3516     009A  3000               	movlw	0
  3517     009B  00AF               	movwf	___fldiv@b+1
  3518     009C  3000               	movlw	0
  3519     009D  00AE               	movwf	___fldiv@b
  3520     009E  3080               	movlw	128
  3521     009F  04B0               	iorwf	___fldiv@b+2,f
  3522     00A0  307F               	movlw	127
  3523     00A1  04B1               	iorwf	___fldiv@b+3,f
  3524     00A2                     l2189:
  3525     00A2  083B               	movf	___fldiv@sign,w
  3526     00A3  00B2               	movwf	??___fldiv
  3527     00A4  0832               	movf	??___fldiv,w
  3528     00A5  04B1               	iorwf	___fldiv@b+3,f
  3529     00A6                     l2191:
  3530     00A6  0831               	movf	___fldiv@b+3,w
  3531     00A7  00AD               	movwf	?___fldiv+3
  3532     00A8  0830               	movf	___fldiv@b+2,w
  3533     00A9  00AC               	movwf	?___fldiv+2
  3534     00AA  082F               	movf	___fldiv@b+1,w
  3535     00AB  00AB               	movwf	?___fldiv+1
  3536     00AC  082E               	movf	___fldiv@b,w
  3537     00AD  00AA               	movwf	?___fldiv
  3538     00AE  2A0A               	goto	l797
  3539     00AF                     l2195:
  3540     00AF  0842               	movf	___fldiv@bexp,w
  3541     00B0  1D03               	btfss	3,2
  3542     00B1  28B3               	goto	u2061
  3543     00B2  28B4               	goto	u2060
  3544     00B3                     u2061:
  3545     00B3  28BD               	goto	l2201
  3546     00B4                     u2060:
  3547     00B4                     l2197:
  3548     00B4  3000               	movlw	0
  3549     00B5  00AD               	movwf	?___fldiv+3
  3550     00B6  3000               	movlw	0
  3551     00B7  00AC               	movwf	?___fldiv+2
  3552     00B8  3000               	movlw	0
  3553     00B9  00AB               	movwf	?___fldiv+1
  3554     00BA  3000               	movlw	0
  3555     00BB  00AA               	movwf	?___fldiv
  3556     00BC  2A0A               	goto	l797
  3557     00BD                     l2201:
  3558     00BD  0842               	movf	___fldiv@bexp,w
  3559     00BE  00B2               	movwf	??___fldiv
  3560     00BF  01B3               	clrf	??___fldiv+1
  3561     00C0  0833               	movf	??___fldiv+1,w
  3562     00C1  00B5               	movwf	??___fldiv+3
  3563     00C2  0843               	movf	___fldiv@aexp,w
  3564     00C3  0232               	subwf	??___fldiv,w
  3565     00C4  00B4               	movwf	??___fldiv+2
  3566     00C5  1C03               	skipc
  3567     00C6  03B5               	decf	??___fldiv+3,f
  3568     00C7  0834               	movf	??___fldiv+2,w
  3569     00C8  3E7F               	addlw	127
  3570     00C9  00BC               	movwf	___fldiv@new_exp
  3571     00CA  0835               	movf	??___fldiv+3,w
  3572     00CB  1803               	skipnc
  3573     00CC  3E01               	addlw	1
  3574     00CD  3E00               	addlw	0
  3575     00CE  00BD               	movwf	___fldiv@new_exp+1
  3576     00CF                     l2203:
  3577     00CF  0831               	movf	___fldiv@b+3,w
  3578     00D0  00BA               	movwf	___fldiv@rem+3
  3579     00D1  0830               	movf	___fldiv@b+2,w
  3580     00D2  00B9               	movwf	___fldiv@rem+2
  3581     00D3  082F               	movf	___fldiv@b+1,w
  3582     00D4  00B8               	movwf	___fldiv@rem+1
  3583     00D5  082E               	movf	___fldiv@b,w
  3584     00D6  00B7               	movwf	___fldiv@rem
  3585     00D7                     l2205:
  3586     00D7  3000               	movlw	0
  3587     00D8  00B1               	movwf	___fldiv@b+3
  3588     00D9  3000               	movlw	0
  3589     00DA  00B0               	movwf	___fldiv@b+2
  3590     00DB  3000               	movlw	0
  3591     00DC  00AF               	movwf	___fldiv@b+1
  3592     00DD  3000               	movlw	0
  3593     00DE  00AE               	movwf	___fldiv@b
  3594     00DF                     l2207:
  3595     00DF  3000               	movlw	0
  3596     00E0  00C1               	movwf	___fldiv@grs+3
  3597     00E1  3000               	movlw	0
  3598     00E2  00C0               	movwf	___fldiv@grs+2
  3599     00E3  3000               	movlw	0
  3600     00E4  00BF               	movwf	___fldiv@grs+1
  3601     00E5  3000               	movlw	0
  3602     00E6  00BE               	movwf	___fldiv@grs
  3603     00E7                     l2209:
  3604     00E7  01C3               	clrf	___fldiv@aexp
  3605     00E8  2933               	goto	l2229
  3606     00E9                     l2211:
  3607     00E9  0843               	movf	___fldiv@aexp,w
  3608     00EA  1903               	btfsc	3,2
  3609     00EB  28ED               	goto	u2071
  3610     00EC  28EE               	goto	u2070
  3611     00ED                     u2071:
  3612     00ED  290E               	goto	l2221
  3613     00EE                     u2070:
  3614     00EE                     l2213:
  3615     00EE  3001               	movlw	1
  3616     00EF  00B2               	movwf	??___fldiv
  3617     00F0                     u2085:
  3618     00F0  1003               	clrc
  3619     00F1  0DB7               	rlf	___fldiv@rem,f
  3620     00F2  0DB8               	rlf	___fldiv@rem+1,f
  3621     00F3  0DB9               	rlf	___fldiv@rem+2,f
  3622     00F4  0DBA               	rlf	___fldiv@rem+3,f
  3623     00F5  0BB2               	decfsz	??___fldiv,f
  3624     00F6  28F0               	goto	u2085
  3625     00F7  3001               	movlw	1
  3626     00F8  00B2               	movwf	??___fldiv
  3627     00F9                     u2095:
  3628     00F9  1003               	clrc
  3629     00FA  0DAE               	rlf	___fldiv@b,f
  3630     00FB  0DAF               	rlf	___fldiv@b+1,f
  3631     00FC  0DB0               	rlf	___fldiv@b+2,f
  3632     00FD  0DB1               	rlf	___fldiv@b+3,f
  3633     00FE  0BB2               	decfsz	??___fldiv,f
  3634     00FF  28F9               	goto	u2095
  3635     0100                     l2215:
  3636     0100  1FC1               	btfss	___fldiv@grs+3,7
  3637     0101  2903               	goto	u2101
  3638     0102  2904               	goto	u2100
  3639     0103                     u2101:
  3640     0103  2905               	goto	l2219
  3641     0104                     u2100:
  3642     0104                     l2217:
  3643     0104  142E               	bsf	___fldiv@b,0
  3644     0105                     l2219:
  3645     0105  3001               	movlw	1
  3646     0106  00B2               	movwf	??___fldiv
  3647     0107                     u2115:
  3648     0107  1003               	clrc
  3649     0108  0DBE               	rlf	___fldiv@grs,f
  3650     0109  0DBF               	rlf	___fldiv@grs+1,f
  3651     010A  0DC0               	rlf	___fldiv@grs+2,f
  3652     010B  0DC1               	rlf	___fldiv@grs+3,f
  3653     010C  0BB2               	decfsz	??___fldiv,f
  3654     010D  2907               	goto	u2115
  3655     010E                     l2221:
  3656     010E  082D               	movf	___fldiv@a+3,w
  3657     010F  023A               	subwf	___fldiv@rem+3,w
  3658     0110  1D03               	skipz
  3659     0111  291C               	goto	u2125
  3660     0112  082C               	movf	___fldiv@a+2,w
  3661     0113  0239               	subwf	___fldiv@rem+2,w
  3662     0114  1D03               	skipz
  3663     0115  291C               	goto	u2125
  3664     0116  082B               	movf	___fldiv@a+1,w
  3665     0117  0238               	subwf	___fldiv@rem+1,w
  3666     0118  1D03               	skipz
  3667     0119  291C               	goto	u2125
  3668     011A  082A               	movf	___fldiv@a,w
  3669     011B  0237               	subwf	___fldiv@rem,w
  3670     011C                     u2125:
  3671     011C  1C03               	skipc
  3672     011D  291F               	goto	u2121
  3673     011E  2920               	goto	u2120
  3674     011F                     u2121:
  3675     011F  292F               	goto	l2227
  3676     0120                     u2120:
  3677     0120                     l2223:
  3678     0120  1741               	bsf	___fldiv@grs+3,6
  3679     0121                     l2225:
  3680     0121  082A               	movf	___fldiv@a,w
  3681     0122  02B7               	subwf	___fldiv@rem,f
  3682     0123  082B               	movf	___fldiv@a+1,w
  3683     0124  1C03               	skipc
  3684     0125  0F2B               	incfsz	___fldiv@a+1,w
  3685     0126  02B8               	subwf	___fldiv@rem+1,f
  3686     0127  082C               	movf	___fldiv@a+2,w
  3687     0128  1C03               	skipc
  3688     0129  0F2C               	incfsz	___fldiv@a+2,w
  3689     012A  02B9               	subwf	___fldiv@rem+2,f
  3690     012B  082D               	movf	___fldiv@a+3,w
  3691     012C  1C03               	skipc
  3692     012D  0F2D               	incfsz	___fldiv@a+3,w
  3693     012E  02BA               	subwf	___fldiv@rem+3,f
  3694     012F                     l2227:
  3695     012F  3001               	movlw	1
  3696     0130  00B2               	movwf	??___fldiv
  3697     0131  0832               	movf	??___fldiv,w
  3698     0132  07C3               	addwf	___fldiv@aexp,f
  3699     0133                     l2229:
  3700     0133  301A               	movlw	26
  3701     0134  0243               	subwf	___fldiv@aexp,w
  3702     0135  1C03               	skipc
  3703     0136  2938               	goto	u2131
  3704     0137  2939               	goto	u2130
  3705     0138                     u2131:
  3706     0138  28E9               	goto	l2211
  3707     0139                     u2130:
  3708     0139                     l2231:
  3709     0139  083A               	movf	___fldiv@rem+3,w
  3710     013A  0439               	iorwf	___fldiv@rem+2,w
  3711     013B  0438               	iorwf	___fldiv@rem+1,w
  3712     013C  0437               	iorwf	___fldiv@rem,w
  3713     013D  1903               	skipnz
  3714     013E  2940               	goto	u2141
  3715     013F  2941               	goto	u2140
  3716     0140                     u2141:
  3717     0140  2960               	goto	l2245
  3718     0141                     u2140:
  3719     0141                     l2233:
  3720     0141  143E               	bsf	___fldiv@grs,0
  3721     0142  2960               	goto	l2245
  3722     0143                     l2235:
  3723     0143  3001               	movlw	1
  3724     0144  00B2               	movwf	??___fldiv
  3725     0145                     u2155:
  3726     0145  1003               	clrc
  3727     0146  0DAE               	rlf	___fldiv@b,f
  3728     0147  0DAF               	rlf	___fldiv@b+1,f
  3729     0148  0DB0               	rlf	___fldiv@b+2,f
  3730     0149  0DB1               	rlf	___fldiv@b+3,f
  3731     014A  0BB2               	decfsz	??___fldiv,f
  3732     014B  2945               	goto	u2155
  3733     014C                     l2237:
  3734     014C  1FC1               	btfss	___fldiv@grs+3,7
  3735     014D  294F               	goto	u2161
  3736     014E  2950               	goto	u2160
  3737     014F                     u2161:
  3738     014F  2951               	goto	l2241
  3739     0150                     u2160:
  3740     0150                     l2239:
  3741     0150  142E               	bsf	___fldiv@b,0
  3742     0151                     l2241:
  3743     0151  3001               	movlw	1
  3744     0152  00B2               	movwf	??___fldiv
  3745     0153                     u2175:
  3746     0153  1003               	clrc
  3747     0154  0DBE               	rlf	___fldiv@grs,f
  3748     0155  0DBF               	rlf	___fldiv@grs+1,f
  3749     0156  0DC0               	rlf	___fldiv@grs+2,f
  3750     0157  0DC1               	rlf	___fldiv@grs+3,f
  3751     0158  0BB2               	decfsz	??___fldiv,f
  3752     0159  2953               	goto	u2175
  3753     015A                     l2243:
  3754     015A  30FF               	movlw	255
  3755     015B  07BC               	addwf	___fldiv@new_exp,f
  3756     015C  1803               	skipnc
  3757     015D  0ABD               	incf	___fldiv@new_exp+1,f
  3758     015E  30FF               	movlw	255
  3759     015F  07BD               	addwf	___fldiv@new_exp+1,f
  3760     0160                     l2245:
  3761     0160  1FB0               	btfss	___fldiv@b+2,7
  3762     0161  2963               	goto	u2181
  3763     0162  2964               	goto	u2180
  3764     0163                     u2181:
  3765     0163  2943               	goto	l2235
  3766     0164                     u2180:
  3767     0164                     l2247:
  3768     0164  01C3               	clrf	___fldiv@aexp
  3769     0165                     l2249:
  3770     0165  1FC1               	btfss	___fldiv@grs+3,7
  3771     0166  2968               	goto	u2191
  3772     0167  2969               	goto	u2190
  3773     0168                     u2191:
  3774     0168  2985               	goto	l2257
  3775     0169                     u2190:
  3776     0169                     l2251:
  3777     0169  30FF               	movlw	255
  3778     016A  053E               	andwf	___fldiv@grs,w
  3779     016B  00B2               	movwf	??___fldiv
  3780     016C  30FF               	movlw	255
  3781     016D  053F               	andwf	___fldiv@grs+1,w
  3782     016E  00B3               	movwf	??___fldiv+1
  3783     016F  30FF               	movlw	255
  3784     0170  0540               	andwf	___fldiv@grs+2,w
  3785     0171  00B4               	movwf	??___fldiv+2
  3786     0172  307F               	movlw	127
  3787     0173  0541               	andwf	___fldiv@grs+3,w
  3788     0174  00B5               	movwf	??___fldiv+3
  3789     0175  0835               	movf	??___fldiv+3,w
  3790     0176  0434               	iorwf	??___fldiv+2,w
  3791     0177  0433               	iorwf	??___fldiv+1,w
  3792     0178  0432               	iorwf	??___fldiv,w
  3793     0179  1903               	skipnz
  3794     017A  297C               	goto	u2201
  3795     017B  297D               	goto	u2200
  3796     017C                     u2201:
  3797     017C  2980               	goto	l811
  3798     017D                     u2200:
  3799     017D                     l2253:
  3800     017D  01C3               	clrf	___fldiv@aexp
  3801     017E  0AC3               	incf	___fldiv@aexp,f
  3802     017F  2985               	goto	l2257
  3803     0180                     l811:
  3804     0180  1C2E               	btfss	___fldiv@b,0
  3805     0181  2983               	goto	u2211
  3806     0182  2984               	goto	u2210
  3807     0183                     u2211:
  3808     0183  2985               	goto	l2257
  3809     0184                     u2210:
  3810     0184  297D               	goto	l2253
  3811     0185                     l2257:
  3812     0185  0843               	movf	___fldiv@aexp,w
  3813     0186  1903               	btfsc	3,2
  3814     0187  2989               	goto	u2221
  3815     0188  298A               	goto	u2220
  3816     0189                     u2221:
  3817     0189  29BB               	goto	l2267
  3818     018A                     u2220:
  3819     018A                     l2259:
  3820     018A  3001               	movlw	1
  3821     018B  07AE               	addwf	___fldiv@b,f
  3822     018C  3000               	movlw	0
  3823     018D  1803               	skipnc
  3824     018E  3001               	movlw	1
  3825     018F  07AF               	addwf	___fldiv@b+1,f
  3826     0190  3000               	movlw	0
  3827     0191  1803               	skipnc
  3828     0192  3001               	movlw	1
  3829     0193  07B0               	addwf	___fldiv@b+2,f
  3830     0194  3000               	movlw	0
  3831     0195  1803               	skipnc
  3832     0196  3001               	movlw	1
  3833     0197  07B1               	addwf	___fldiv@b+3,f
  3834     0198                     l2261:
  3835     0198  1C31               	btfss	___fldiv@b+3,0
  3836     0199  299B               	goto	u2231
  3837     019A  299C               	goto	u2230
  3838     019B                     u2231:
  3839     019B  29BB               	goto	l2267
  3840     019C                     u2230:
  3841     019C                     l2263:
  3842     019C  082E               	movf	___fldiv@b,w
  3843     019D  00B2               	movwf	??___fldiv
  3844     019E  082F               	movf	___fldiv@b+1,w
  3845     019F  00B3               	movwf	??___fldiv+1
  3846     01A0  0830               	movf	___fldiv@b+2,w
  3847     01A1  00B4               	movwf	??___fldiv+2
  3848     01A2  0831               	movf	___fldiv@b+3,w
  3849     01A3  00B5               	movwf	??___fldiv+3
  3850     01A4  3001               	movlw	1
  3851     01A5  00B6               	movwf	??___fldiv+4
  3852     01A6                     u2245:
  3853     01A6  0D35               	rlf	??___fldiv+3,w
  3854     01A7  0CB5               	rrf	??___fldiv+3,f
  3855     01A8  0CB4               	rrf	??___fldiv+2,f
  3856     01A9  0CB3               	rrf	??___fldiv+1,f
  3857     01AA  0CB2               	rrf	??___fldiv,f
  3858     01AB                     u2240:
  3859     01AB  0BB6               	decfsz	??___fldiv+4,f
  3860     01AC  29A6               	goto	u2245
  3861     01AD  0835               	movf	??___fldiv+3,w
  3862     01AE  00B1               	movwf	___fldiv@b+3
  3863     01AF  0834               	movf	??___fldiv+2,w
  3864     01B0  00B0               	movwf	___fldiv@b+2
  3865     01B1  0833               	movf	??___fldiv+1,w
  3866     01B2  00AF               	movwf	___fldiv@b+1
  3867     01B3  0832               	movf	??___fldiv,w
  3868     01B4  00AE               	movwf	___fldiv@b
  3869     01B5                     l2265:
  3870     01B5  3001               	movlw	1
  3871     01B6  07BC               	addwf	___fldiv@new_exp,f
  3872     01B7  1803               	skipnc
  3873     01B8  0ABD               	incf	___fldiv@new_exp+1,f
  3874     01B9  3000               	movlw	0
  3875     01BA  07BD               	addwf	___fldiv@new_exp+1,f
  3876     01BB                     l2267:
  3877     01BB  083D               	movf	___fldiv@new_exp+1,w
  3878     01BC  3A80               	xorlw	128
  3879     01BD  00FF               	movwf	btemp+1
  3880     01BE  3080               	movlw	128
  3881     01BF  027F               	subwf	btemp+1,w
  3882     01C0  1D03               	skipz
  3883     01C1  29C4               	goto	u2255
  3884     01C2  30FF               	movlw	255
  3885     01C3  023C               	subwf	___fldiv@new_exp,w
  3886     01C4                     u2255:
  3887     01C4  1C03               	skipc
  3888     01C5  29C7               	goto	u2251
  3889     01C6  29C8               	goto	u2250
  3890     01C7                     u2251:
  3891     01C7  29D6               	goto	l2271
  3892     01C8                     u2250:
  3893     01C8                     l2269:
  3894     01C8  30FF               	movlw	255
  3895     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3896     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3897     01CB  00BC               	movwf	___fldiv@new_exp
  3898     01CC  3000               	movlw	0
  3899     01CD  00BD               	movwf	___fldiv@new_exp+1
  3900     01CE  3000               	movlw	0
  3901     01CF  00B1               	movwf	___fldiv@b+3
  3902     01D0  3000               	movlw	0
  3903     01D1  00B0               	movwf	___fldiv@b+2
  3904     01D2  3000               	movlw	0
  3905     01D3  00AF               	movwf	___fldiv@b+1
  3906     01D4  3000               	movlw	0
  3907     01D5  00AE               	movwf	___fldiv@b
  3908     01D6                     l2271:
  3909     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3910     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3911     01D8  083D               	movf	___fldiv@new_exp+1,w
  3912     01D9  3A80               	xorlw	128
  3913     01DA  00FF               	movwf	btemp+1
  3914     01DB  3080               	movlw	128
  3915     01DC  027F               	subwf	btemp+1,w
  3916     01DD  1D03               	skipz
  3917     01DE  29E1               	goto	u2265
  3918     01DF  3001               	movlw	1
  3919     01E0  023C               	subwf	___fldiv@new_exp,w
  3920     01E1                     u2265:
  3921     01E1  1803               	skipnc
  3922     01E2  29E4               	goto	u2261
  3923     01E3  29E5               	goto	u2260
  3924     01E4                     u2261:
  3925     01E4  29F2               	goto	l817
  3926     01E5                     u2260:
  3927     01E5                     l2273:
  3928     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3929     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3930     01E7  01BC               	clrf	___fldiv@new_exp
  3931     01E8  01BD               	clrf	___fldiv@new_exp+1
  3932     01E9                     l2275:
  3933     01E9  3000               	movlw	0
  3934     01EA  00B1               	movwf	___fldiv@b+3
  3935     01EB  3000               	movlw	0
  3936     01EC  00B0               	movwf	___fldiv@b+2
  3937     01ED  3000               	movlw	0
  3938     01EE  00AF               	movwf	___fldiv@b+1
  3939     01EF  3000               	movlw	0
  3940     01F0  00AE               	movwf	___fldiv@b
  3941     01F1                     l2277:
  3942     01F1  01BB               	clrf	___fldiv@sign
  3943     01F2                     l817:
  3944     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3945     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3946     01F4  083C               	movf	___fldiv@new_exp,w
  3947     01F5  00C2               	movwf	___fldiv@bexp
  3948     01F6                     l2279:
  3949     01F6  1C42               	btfss	___fldiv@bexp,0
  3950     01F7  29F9               	goto	u2271
  3951     01F8  29FA               	goto	u2270
  3952     01F9                     u2271:
  3953     01F9  29FC               	goto	l2283
  3954     01FA                     u2270:
  3955     01FA                     l2281:
  3956     01FA  17B0               	bsf	___fldiv@b+2,7
  3957     01FB  2A00               	goto	l819
  3958     01FC                     l2283:
  3959     01FC  307F               	movlw	127
  3960     01FD  00B2               	movwf	??___fldiv
  3961     01FE  0832               	movf	??___fldiv,w
  3962     01FF  05B0               	andwf	___fldiv@b+2,f
  3963     0200                     l819:
  3964     0200  0842               	movf	___fldiv@bexp,w
  3965     0201  00B2               	movwf	??___fldiv
  3966     0202  1003               	clrc
  3967     0203  0C32               	rrf	??___fldiv,w
  3968     0204  00B1               	movwf	___fldiv@b+3
  3969     0205  083B               	movf	___fldiv@sign,w
  3970     0206  00B2               	movwf	??___fldiv
  3971     0207  0832               	movf	??___fldiv,w
  3972     0208  04B1               	iorwf	___fldiv@b+3,f
  3973     0209  28A6               	goto	l2191
  3974     020A                     l797:
  3975     020A  0008               	return
  3976     020B                     __end_of___fldiv:
  3977                           
  3978                           	psect	text12
  3979     0F13                     __ptext12:	
  3980 ;; *************** function _LCD_Init *****************
  3981 ;; Defined at:
  3982 ;;		line 45 in file "lcd.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  cmd             1    0[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      _Bool 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       0       0       0       0
  3997 ;;      Locals:         0       1       0       0       0
  3998 ;;      Temps:          2       0       0       0       0
  3999 ;;      Totals:         2       1       0       0       0
  4000 ;;Total ram usage:        3 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 3
  4003 ;; This function calls:
  4004 ;;		_LCD_Write
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010     0F13                     _LCD_Init:	
  4011                           ;psect for function _LCD_Init
  4012                           
  4013     0F13                     l2691:	
  4014                           ;incstack = 0
  4015                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4016                           
  4017                           
  4018                           ;lcd.c: 47:     _delay((unsigned long)((20)*(10000000/4000.0)));
  4019     0F13  3041               	movlw	65
  4020     0F14  00F8               	movwf	??_LCD_Init+1
  4021     0F15  30EE               	movlw	238
  4022     0F16  00F7               	movwf	??_LCD_Init
  4023     0F17                     u3517:
  4024     0F17  0BF7               	decfsz	??_LCD_Init,f
  4025     0F18  2F17               	goto	u3517
  4026     0F19  0BF8               	decfsz	??_LCD_Init+1,f
  4027     0F1A  2F17               	goto	u3517
  4028     0F1B  0000               	nop
  4029     0F1C                     l2693:
  4030                           
  4031                           ;lcd.c: 50:     LCD_Write(0x03);
  4032     0F1C  3003               	movlw	3
  4033     0F1D  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4034     0F22                     l2695:
  4035                           
  4036                           ;lcd.c: 51:     _delay((unsigned long)((5)*(10000000/4000.0)));
  4037     0F22  3011               	movlw	17
  4038     0F23  00F8               	movwf	??_LCD_Init+1
  4039     0F24  303A               	movlw	58
  4040     0F25  00F7               	movwf	??_LCD_Init
  4041     0F26                     u3527:
  4042     0F26  0BF7               	decfsz	??_LCD_Init,f
  4043     0F27  2F26               	goto	u3527
  4044     0F28  0BF8               	decfsz	??_LCD_Init+1,f
  4045     0F29  2F26               	goto	u3527
  4046     0F2A  0000               	nop
  4047                           
  4048                           ;lcd.c: 52:     LCD_Write(0x03);
  4049     0F2B  3003               	movlw	3
  4050     0F2C  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4051     0F31                     l2697:
  4052                           
  4053                           ;lcd.c: 53:     _delay((unsigned long)((16)*(10000000/4000.0)));
  4054     0F31  3034               	movlw	52
  4055     0F32  00F8               	movwf	??_LCD_Init+1
  4056     0F33  30F1               	movlw	241
  4057     0F34  00F7               	movwf	??_LCD_Init
  4058     0F35                     u3537:
  4059     0F35  0BF7               	decfsz	??_LCD_Init,f
  4060     0F36  2F35               	goto	u3537
  4061     0F37  0BF8               	decfsz	??_LCD_Init+1,f
  4062     0F38  2F35               	goto	u3537
  4063     0F39  2F3A               	nop2
  4064     0F3A                     l2699:
  4065                           
  4066                           ;lcd.c: 54:     LCD_Write(0x03);
  4067     0F3A  3003               	movlw	3
  4068     0F3B  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4069     0F40                     l2701:
  4070                           
  4071                           ;lcd.c: 57:     LCD_Write(0x02);
  4072     0F40  3002               	movlw	2
  4073     0F41  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4074     0F46                     l2703:
  4075     0F46  3002               	movlw	2
  4076     0F47  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4077     0F4C                     l2705:
  4078     0F4C  3008               	movlw	8
  4079     0F4D  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4080     0F52                     l2707:
  4081     0F52  3000               	movlw	0
  4082     0F53  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4083     0F58                     l2709:
  4084     0F58  3006               	movlw	6
  4085     0F59  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4086     0F5E                     l2711:
  4087     0F5E  3008               	movlw	8
  4088     0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  4089     0F60  1303               	bcf	3,6	;RP1=0, select bank0
  4090     0F61  00A0               	movwf	LCD_Init@cmd
  4091     0F62                     l2713:
  4092     0F62  1520               	bsf	LCD_Init@cmd,2
  4093     0F63                     l2719:
  4094     0F63  0820               	movf	LCD_Init@cmd,w
  4095     0F64  00F7               	movwf	??_LCD_Init
  4096     0F65  3004               	movlw	4
  4097     0F66                     u3025:
  4098     0F66  1003               	clrc
  4099     0F67  0CF7               	rrf	??_LCD_Init,f
  4100     0F68  3EFF               	addlw	-1
  4101     0F69  1D03               	skipz
  4102     0F6A  2F66               	goto	u3025
  4103     0F6B  0877               	movf	??_LCD_Init,w
  4104     0F6C  390F               	andlw	15
  4105     0F6D  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4106     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0F74  0820               	movf	LCD_Init@cmd,w
  4109     0F75  390F               	andlw	15
  4110     0F76  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4111     0F7B                     l42:	
  4112                           ;lcd.c: 67:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while (
      +                           0 );
  4113                           
  4114     0F7B  3000               	movlw	0
  4115     0F7C  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4116     0F81  3001               	movlw	1
  4117     0F82  120A  158A  2601  120A  158A  	fcall	_LCD_Write
  4118     0F87                     l44:
  4119     0F87  0008               	return
  4120     0F88                     __end_of_LCD_Init:
  4121                           
  4122                           	psect	text13
  4123     0E01                     __ptext13:	
  4124 ;; *************** function _LCD_Write *****************
  4125 ;; Defined at:
  4126 ;;		line 34 in file "lcd.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  c               1    wreg     unsigned char 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  c               1    6[COMMON] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4140 ;;      Params:         0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0
  4142 ;;      Temps:          2       0       0       0       0
  4143 ;;      Totals:         3       0       0       0       0
  4144 ;;Total ram usage:        3 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 2
  4147 ;; This function calls:
  4148 ;;		_LCD_Out
  4149 ;; This function is called by:
  4150 ;;		_LCD_Init
  4151 ;;		_update_screen
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155     0E01                     _LCD_Write:	
  4156                           ;psect for function _LCD_Write
  4157                           
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _LCD_Write: [wreg+status,2+status,0+pclath+cstack]
  4161                           ;LCD_Write@c stored from wreg
  4162     0E01  00F6               	movwf	LCD_Write@c
  4163     0E02                     l2555:
  4164                           
  4165                           ;lcd.c: 36:     RE1 = 0;
  4166     0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4167     0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4168     0E04  1089               	bcf	9,1	;volatile
  4169     0E05                     l2557:
  4170                           
  4171                           ;lcd.c: 37:     LCD_Out(c);
  4172     0E05  0876               	movf	LCD_Write@c,w
  4173     0E06  120A  158A  261B  120A  158A  	fcall	_LCD_Out
  4174     0E0B                     l2559:
  4175                           
  4176                           ;lcd.c: 39:     RE0 = 1;
  4177     0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4178     0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4179     0E0D  1409               	bsf	9,0	;volatile
  4180     0E0E                     l2561:
  4181                           
  4182                           ;lcd.c: 40:     _delay((unsigned long)((4)*(10000000/4000.0)));
  4183     0E0E  300D               	movlw	13
  4184     0E0F  00F5               	movwf	??_LCD_Write+1
  4185     0E10  30FB               	movlw	251
  4186     0E11  00F4               	movwf	??_LCD_Write
  4187     0E12                     u3547:
  4188     0E12  0BF4               	decfsz	??_LCD_Write,f
  4189     0E13  2E12               	goto	u3547
  4190     0E14  0BF5               	decfsz	??_LCD_Write+1,f
  4191     0E15  2E12               	goto	u3547
  4192     0E16  2E17               	nop2
  4193     0E17                     l2563:
  4194                           
  4195                           ;lcd.c: 41:     RE0 = 0;
  4196     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  4197     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  4198     0E19  1009               	bcf	9,0	;volatile
  4199     0E1A                     l28:
  4200     0E1A  0008               	return
  4201     0E1B                     __end_of_LCD_Write:
  4202                           
  4203                           	psect	text14
  4204     0E1B                     __ptext14:	
  4205 ;; *************** function _LCD_Out *****************
  4206 ;; Defined at:
  4207 ;;		line 15 in file "lcd.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  c               1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  c               1    3[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4221 ;;      Params:         0       0       0       0       0
  4222 ;;      Locals:         1       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0
  4224 ;;      Totals:         1       0       0       0       0
  4225 ;;Total ram usage:        1 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_LCD_Write
  4232 ;;		_LCD_putc
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236     0E1B                     _LCD_Out:	
  4237                           ;psect for function _LCD_Out
  4238                           
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _LCD_Out: [wreg]
  4242                           ;LCD_Out@c stored from wreg
  4243     0E1B  00F3               	movwf	LCD_Out@c
  4244     0E1C                     l2481:
  4245                           
  4246                           ;lcd.c: 16:     if(c & 1)
  4247     0E1C  1C73               	btfss	LCD_Out@c,0
  4248     0E1D  2E1F               	goto	u2631
  4249     0E1E  2E20               	goto	u2630
  4250     0E1F                     u2631:
  4251     0E1F  2E24               	goto	l17
  4252     0E20                     u2630:
  4253     0E20                     l2483:
  4254                           
  4255                           ;lcd.c: 17:         RD4 = 1;
  4256     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  4257     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  4258     0E22  1608               	bsf	8,4	;volatile
  4259     0E23  2E27               	goto	l18
  4260     0E24                     l17:	
  4261                           ;lcd.c: 18:     else
  4262                           
  4263                           
  4264                           ;lcd.c: 19:        RD4 = 0;
  4265     0E24  1283               	bcf	3,5	;RP0=0, select bank0
  4266     0E25  1303               	bcf	3,6	;RP1=0, select bank0
  4267     0E26  1208               	bcf	8,4	;volatile
  4268     0E27                     l18:
  4269                           
  4270                           ;lcd.c: 20:     if(c & 2)
  4271     0E27  1CF3               	btfss	LCD_Out@c,1
  4272     0E28  2E2A               	goto	u2641
  4273     0E29  2E2B               	goto	u2640
  4274     0E2A                     u2641:
  4275     0E2A  2E2D               	goto	l19
  4276     0E2B                     u2640:
  4277     0E2B                     l2485:
  4278                           
  4279                           ;lcd.c: 21:        RD5 = 1;
  4280     0E2B  1688               	bsf	8,5	;volatile
  4281     0E2C  2E2E               	goto	l20
  4282     0E2D                     l19:	
  4283                           ;lcd.c: 22:     else
  4284                           
  4285                           
  4286                           ;lcd.c: 23:        RD5 = 0;
  4287     0E2D  1288               	bcf	8,5	;volatile
  4288     0E2E                     l20:
  4289                           
  4290                           ;lcd.c: 24:     if(c & 4)
  4291     0E2E  1D73               	btfss	LCD_Out@c,2
  4292     0E2F  2E31               	goto	u2651
  4293     0E30  2E32               	goto	u2650
  4294     0E31                     u2651:
  4295     0E31  2E34               	goto	l21
  4296     0E32                     u2650:
  4297     0E32                     l2487:
  4298                           
  4299                           ;lcd.c: 25:        RD6 = 1;
  4300     0E32  1708               	bsf	8,6	;volatile
  4301     0E33  2E35               	goto	l22
  4302     0E34                     l21:	
  4303                           ;lcd.c: 26:     else
  4304                           
  4305                           
  4306                           ;lcd.c: 27:        RD6 = 0;
  4307     0E34  1308               	bcf	8,6	;volatile
  4308     0E35                     l22:
  4309                           
  4310                           ;lcd.c: 28:     if(c & 8)
  4311     0E35  1DF3               	btfss	LCD_Out@c,3
  4312     0E36  2E38               	goto	u2661
  4313     0E37  2E39               	goto	u2660
  4314     0E38                     u2661:
  4315     0E38  2E3B               	goto	l23
  4316     0E39                     u2660:
  4317     0E39                     l2489:
  4318                           
  4319                           ;lcd.c: 29:        RD7 = 1;
  4320     0E39  1788               	bsf	8,7	;volatile
  4321     0E3A  2E3C               	goto	l25
  4322     0E3B                     l23:	
  4323                           ;lcd.c: 30:     else
  4324                           
  4325                           
  4326                           ;lcd.c: 31:        RD7 = 0;
  4327     0E3B  1388               	bcf	8,7	;volatile
  4328     0E3C                     l25:
  4329     0E3C  0008               	return
  4330     0E3D                     __end_of_LCD_Out:
  4331                           
  4332                           	psect	text15
  4333     06FE                     __ptext15:	
  4334 ;; *************** function _ISR *****************
  4335 ;; Defined at:
  4336 ;;		line 87 in file "main.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, btemp+1
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0
  4352 ;;      Temps:          3       0       0       0       0
  4353 ;;      Totals:         3       0       0       0       0
  4354 ;;Total ram usage:        3 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		Interrupt level 1
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     06FE                     _ISR:	
  4364                           ;psect for function _ISR
  4365                           
  4366     06FE                     i1l2341:
  4367                           
  4368                           ;main.c: 89:     if(TMR0IF == 1)
  4369     06FE  1D0B               	btfss	11,2	;volatile
  4370     06FF  2F01               	goto	u243_21
  4371     0700  2F02               	goto	u243_20
  4372     0701                     u243_21:
  4373     0701  2FA5               	goto	i1l287
  4374     0702                     u243_20:
  4375     0702                     i1l2343:
  4376                           
  4377                           ;main.c: 90:     {;main.c: 91:         antal++;
  4378     0702  3001               	movlw	1
  4379     0703  07F9               	addwf	_antal,f
  4380     0704  1803               	skipnc
  4381     0705  0AFA               	incf	_antal+1,f
  4382     0706  3000               	movlw	0
  4383     0707  07FA               	addwf	_antal+1,f
  4384                           
  4385                           ;main.c: 92:         update_timer++;
  4386     0708  3001               	movlw	1
  4387     0709  1283               	bcf	3,5	;RP0=0, select bank0
  4388     070A  1303               	bcf	3,6	;RP1=0, select bank0
  4389     070B  07DE               	addwf	_update_timer,f
  4390     070C  1803               	skipnc
  4391     070D  0ADF               	incf	_update_timer+1,f
  4392     070E  3000               	movlw	0
  4393     070F  07DF               	addwf	_update_timer+1,f
  4394     0710                     i1l2345:
  4395                           
  4396                           ;main.c: 95:         if(antal >= 1000)
  4397     0710  087A               	movf	_antal+1,w
  4398     0711  3A80               	xorlw	128
  4399     0712  00FF               	movwf	btemp+1
  4400     0713  3083               	movlw	131
  4401     0714  027F               	subwf	btemp+1,w
  4402     0715  1D03               	skipz
  4403     0716  2F19               	goto	u244_25
  4404     0717  30E8               	movlw	232
  4405     0718  0279               	subwf	_antal,w
  4406     0719                     u244_25:
  4407     0719  1C03               	skipc
  4408     071A  2F1C               	goto	u244_21
  4409     071B  2F1D               	goto	u244_20
  4410     071C                     u244_21:
  4411     071C  2F8E               	goto	i1l2377
  4412     071D                     u244_20:
  4413     071D                     i1l2347:
  4414                           
  4415                           ;main.c: 96:         {;main.c: 98:             antal = 0;
  4416     071D  01F9               	clrf	_antal
  4417     071E  01FA               	clrf	_antal+1
  4418     071F                     i1l2349:
  4419                           
  4420                           ;main.c: 99:             sek++;
  4421     071F  3001               	movlw	1
  4422     0720  1283               	bcf	3,5	;RP0=0, select bank0
  4423     0721  1303               	bcf	3,6	;RP1=0, select bank0
  4424     0722  07E8               	addwf	_sek,f
  4425     0723  1803               	skipnc
  4426     0724  0AE9               	incf	_sek+1,f
  4427     0725  3000               	movlw	0
  4428     0726  07E9               	addwf	_sek+1,f
  4429     0727                     i1l2351:
  4430                           
  4431                           ;main.c: 100:             if (sek >= 60){
  4432     0727  0869               	movf	_sek+1,w
  4433     0728  3A80               	xorlw	128
  4434     0729  00FF               	movwf	btemp+1
  4435     072A  3080               	movlw	128
  4436     072B  027F               	subwf	btemp+1,w
  4437     072C  1D03               	skipz
  4438     072D  2F30               	goto	u245_25
  4439     072E  303C               	movlw	60
  4440     072F  0268               	subwf	_sek,w
  4441     0730                     u245_25:
  4442     0730  1C03               	skipc
  4443     0731  2F33               	goto	u245_21
  4444     0732  2F34               	goto	u245_20
  4445     0733                     u245_21:
  4446     0733  2F66               	goto	i1l2367
  4447     0734                     u245_20:
  4448     0734                     i1l2353:
  4449                           
  4450                           ;main.c: 101:                 sek = 0;
  4451     0734  1283               	bcf	3,5	;RP0=0, select bank0
  4452     0735  1303               	bcf	3,6	;RP1=0, select bank0
  4453     0736  01E8               	clrf	_sek
  4454     0737  01E9               	clrf	_sek+1
  4455     0738                     i1l2355:
  4456                           
  4457                           ;main.c: 102:                 min++;
  4458     0738  3001               	movlw	1
  4459     0739  07E6               	addwf	_min,f
  4460     073A  1803               	skipnc
  4461     073B  0AE7               	incf	_min+1,f
  4462     073C  3000               	movlw	0
  4463     073D  07E7               	addwf	_min+1,f
  4464     073E                     i1l2357:
  4465                           
  4466                           ;main.c: 103:                 if (min >= 60){
  4467     073E  0867               	movf	_min+1,w
  4468     073F  3A80               	xorlw	128
  4469     0740  00FF               	movwf	btemp+1
  4470     0741  3080               	movlw	128
  4471     0742  027F               	subwf	btemp+1,w
  4472     0743  1D03               	skipz
  4473     0744  2F47               	goto	u246_25
  4474     0745  303C               	movlw	60
  4475     0746  0266               	subwf	_min,w
  4476     0747                     u246_25:
  4477     0747  1C03               	skipc
  4478     0748  2F4A               	goto	u246_21
  4479     0749  2F4B               	goto	u246_20
  4480     074A                     u246_21:
  4481     074A  2F66               	goto	i1l2367
  4482     074B                     u246_20:
  4483     074B                     i1l2359:
  4484                           
  4485                           ;main.c: 104:                     min = 0;
  4486     074B  1283               	bcf	3,5	;RP0=0, select bank0
  4487     074C  1303               	bcf	3,6	;RP1=0, select bank0
  4488     074D  01E6               	clrf	_min
  4489     074E  01E7               	clrf	_min+1
  4490     074F                     i1l2361:
  4491                           
  4492                           ;main.c: 105:                     tim++;
  4493     074F  3001               	movlw	1
  4494     0750  07E4               	addwf	_tim,f
  4495     0751  1803               	skipnc
  4496     0752  0AE5               	incf	_tim+1,f
  4497     0753  3000               	movlw	0
  4498     0754  07E5               	addwf	_tim+1,f
  4499     0755                     i1l2363:
  4500                           
  4501                           ;main.c: 106:                     if (tim >= 24){
  4502     0755  0865               	movf	_tim+1,w
  4503     0756  3A80               	xorlw	128
  4504     0757  00FF               	movwf	btemp+1
  4505     0758  3080               	movlw	128
  4506     0759  027F               	subwf	btemp+1,w
  4507     075A  1D03               	skipz
  4508     075B  2F5E               	goto	u247_25
  4509     075C  3018               	movlw	24
  4510     075D  0264               	subwf	_tim,w
  4511     075E                     u247_25:
  4512     075E  1C03               	skipc
  4513     075F  2F61               	goto	u247_21
  4514     0760  2F62               	goto	u247_20
  4515     0761                     u247_21:
  4516     0761  2F66               	goto	i1l2367
  4517     0762                     u247_20:
  4518     0762                     i1l2365:
  4519                           
  4520                           ;main.c: 107:                         tim = 0;
  4521     0762  1283               	bcf	3,5	;RP0=0, select bank0
  4522     0763  1303               	bcf	3,6	;RP1=0, select bank0
  4523     0764  01E4               	clrf	_tim
  4524     0765  01E5               	clrf	_tim+1
  4525     0766                     i1l2367:
  4526                           
  4527                           ;main.c: 113:             if (a_sek == sek & a_min == min & a_tim == tim & alarm == 1){
  4528     0766  1283               	bcf	3,5	;RP0=0, select bank0
  4529     0767  1303               	bcf	3,6	;RP1=0, select bank0
  4530     0768  0869               	movf	_sek+1,w
  4531     0769  066C               	xorwf	_a_sek+1,w
  4532     076A  1D03               	skipz
  4533     076B  2F6E               	goto	u248_25
  4534     076C  0868               	movf	_sek,w
  4535     076D  066B               	xorwf	_a_sek,w
  4536     076E                     u248_25:
  4537     076E  1D03               	skipz
  4538     076F  2F71               	goto	u248_21
  4539     0770  2F72               	goto	u248_20
  4540     0771                     u248_21:
  4541     0771  2F8E               	goto	i1l2377
  4542     0772                     u248_20:
  4543     0772                     i1l2369:
  4544     0772  0867               	movf	_min+1,w
  4545     0773  0663               	xorwf	_a_min+1,w
  4546     0774  1D03               	skipz
  4547     0775  2F78               	goto	u249_25
  4548     0776  0866               	movf	_min,w
  4549     0777  0662               	xorwf	_a_min,w
  4550     0778                     u249_25:
  4551     0778  1D03               	skipz
  4552     0779  2F7B               	goto	u249_21
  4553     077A  2F7C               	goto	u249_20
  4554     077B                     u249_21:
  4555     077B  2F8E               	goto	i1l2377
  4556     077C                     u249_20:
  4557     077C                     i1l2371:
  4558     077C  0865               	movf	_tim+1,w
  4559     077D  0661               	xorwf	_a_tim+1,w
  4560     077E  1D03               	skipz
  4561     077F  2F82               	goto	u250_25
  4562     0780  0864               	movf	_tim,w
  4563     0781  0660               	xorwf	_a_tim,w
  4564     0782                     u250_25:
  4565     0782  1D03               	skipz
  4566     0783  2F85               	goto	u250_21
  4567     0784  2F86               	goto	u250_20
  4568     0785                     u250_21:
  4569     0785  2F8E               	goto	i1l2377
  4570     0786                     u250_20:
  4571     0786                     i1l2373:
  4572     0786  036D               	decf	_alarm,w
  4573     0787  1D03               	btfss	3,2
  4574     0788  2F8A               	goto	u251_21
  4575     0789  2F8B               	goto	u251_20
  4576     078A                     u251_21:
  4577     078A  2F8E               	goto	i1l2377
  4578     078B                     u251_20:
  4579     078B                     i1l2375:
  4580                           
  4581                           ;main.c: 114:                 drive_mode = 1;
  4582     078B  01EA               	clrf	_drive_mode
  4583     078C  0AEA               	incf	_drive_mode,f
  4584                           
  4585                           ;main.c: 115:                 RB2 = 1;
  4586     078D  1506               	bsf	6,2	;volatile
  4587     078E                     i1l2377:
  4588                           
  4589                           ;main.c: 120:         if(drive_timer != 0){
  4590     078E  1283               	bcf	3,5	;RP0=0, select bank0
  4591     078F  1303               	bcf	3,6	;RP1=0, select bank0
  4592     0790  085C               	movf	_drive_timer,w
  4593     0791  045D               	iorwf	_drive_timer+1,w
  4594     0792  1903               	btfsc	3,2
  4595     0793  2F95               	goto	u252_21
  4596     0794  2F96               	goto	u252_20
  4597     0795                     u252_21:
  4598     0795  2F9C               	goto	i1l2381
  4599     0796                     u252_20:
  4600     0796                     i1l2379:
  4601                           
  4602                           ;main.c: 121:             drive_timer--;
  4603     0796  30FF               	movlw	255
  4604     0797  07DC               	addwf	_drive_timer,f
  4605     0798  1803               	skipnc
  4606     0799  0ADD               	incf	_drive_timer+1,f
  4607     079A  30FF               	movlw	255
  4608     079B  07DD               	addwf	_drive_timer+1,f
  4609     079C                     i1l2381:
  4610                           
  4611                           ;main.c: 126:         if (RB5 == 1){
  4612     079C  1E86               	btfss	6,5	;volatile
  4613     079D  2F9F               	goto	u253_21
  4614     079E  2FA0               	goto	u253_20
  4615     079F                     u253_21:
  4616     079F  2FA2               	goto	i1l2387
  4617     07A0                     u253_20:
  4618     07A0                     i1l2383:
  4619                           
  4620                           ;main.c: 127:             drive_mode = 0;
  4621     07A0  01EA               	clrf	_drive_mode
  4622     07A1                     i1l2385:
  4623                           
  4624                           ;main.c: 128:             RB2 = 0;
  4625     07A1  1106               	bcf	6,2	;volatile
  4626     07A2                     i1l2387:
  4627                           
  4628                           ;main.c: 131:         TMR0IF = 0;
  4629     07A2  110B               	bcf	11,2	;volatile
  4630     07A3                     i1l2389:
  4631                           
  4632                           ;main.c: 132:         TMR0 = 178;
  4633     07A3  30B2               	movlw	178
  4634     07A4  0081               	movwf	1	;volatile
  4635     07A5                     i1l287:
  4636     07A5  0872               	movf	??_ISR+2,w
  4637     07A6  00FF               	movwf	btemp+1
  4638     07A7  0871               	movf	??_ISR+1,w
  4639     07A8  008A               	movwf	10
  4640     07A9  0E70               	swapf	??_ISR,w
  4641     07AA  0083               	movwf	3
  4642     07AB  0EFE               	swapf	btemp,f
  4643     07AC  0E7E               	swapf	btemp,w
  4644     07AD  0009               	retfie
  4645     07AE                     __end_of_ISR:
  4646     007E                     btemp	set	126	;btemp
  4647     007E                     wtemp0	set	126
  4648                           
  4649                           	psect	intentry
  4650     0004                     __pintentry:	
  4651                           ;incstack = 0
  4652                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  4653                           
  4654     0004                     interrupt_function:
  4655     007E                     saved_w	set	btemp
  4656     0004  00FE               	movwf	btemp
  4657     0005  0E03               	swapf	3,w
  4658     0006  00F0               	movwf	??_ISR
  4659     0007  080A               	movf	10,w
  4660     0008  00F1               	movwf	??_ISR+1
  4661     0009  087F               	movf	btemp+1,w
  4662     000A  00F2               	movwf	??_ISR+2
  4663     000B  120A  118A  2EFE   	ljmp	_ISR
  4664                           
  4665                           	psect	config
  4666                           
  4667                           ;Config register CONFIG @ 0x2007
  4668                           ;	Oscillator Selection bits
  4669                           ;	FOSC = HS, HS oscillator
  4670                           ;	Watchdog Timer Enable bit
  4671                           ;	WDTE = OFF, WDT disabled
  4672                           ;	Power-up Timer Enable bit
  4673                           ;	PWRTE = OFF, PWRT disabled
  4674                           ;	Brown-out Reset Enable bit
  4675                           ;	BOREN = OFF, BOR disabled
  4676                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4677                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4678                           ;	Data EEPROM Memory Code Protection bit
  4679                           ;	CPD = OFF, Data EEPROM code protection off
  4680                           ;	Flash Program Memory Write Enable bits
  4681                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4682                           ;	In-Circuit Debugger Mode bit
  4683                           ;	DEBUG = 0x1, unprogrammed default
  4684                           ;	Flash Program Memory Code Protection bit
  4685                           ;	CP = OFF, Code protection off
  4686     2007                     	org	8199
  4687     2007  3F3A               	dw	16186

Data Sizes:
    Strings     27
    Constant    10
    Data        3
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     60      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> update_screen@a_str(BANK0[9]), update_screen@str(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> update_screen@a_str(BANK0[9]), update_screen@str(BANK0[9]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->___fltol
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_update_screen
    _update_screen->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6802
                                             57 BANK0      3     3      0
                           _LCD_Init
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _update_screen
 ---------------------------------------------------------------------------------
 (1) _update_screen                                       30    30      0    4174
                                             27 BANK0     30    30      0
                          _LCD_Write
                          _LCD_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    2721
                                              8 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            7     5      2     856
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             2     2      0     186
                                              4 COMMON     2     2      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              7 COMMON     2     2      0
                                             36 BANK0      8     4      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     229
                                              7 COMMON     2     2      0
                                              0 BANK0      1     1      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     155
                                              4 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _update_screen
     _LCD_Write
     _LCD_putrs
       _LCD_putc
         _LCD_Out
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 23 13:27:29 2022

           ___fldiv@aexp 0043             ___fldiv@bexp 0042                        pc 0002  
           _update_timer 005E             ___fldiv@sign 003B                       l20 0E2E  
                     l21 0E34                       l22 0E35                       l23 0E3B  
                     l25 0E3C                       l17 0E24                       l18 0E27  
                     l42 0F7B                       l19 0E2D                       l28 0E1A  
                     l44 0F87                       l47 0E90                       l59 0F12  
          _update_screen 03CB                       fsr 0004      ___wmul@multiplicand 0075  
                    l300 05B7                      l302 05BB                      l143 040C  
                    l303 0627                      l155 0456                      l407 0225  
                    l167 04A0                      l425 02FF                      l442 03CA  
                    l274 056D                      l446 0E49                      l632 0FFF  
                    l448 0E61                      l297 05B2                      l642 0FFF  
                    l811 0180                      l299 05B6                      l718 07F3  
                    l639 0FEA                      l728 0ECC                      l817 01F2  
                    l819 0200                      l881 06FD                      l795 008E  
                    l892 06C7                      l797 020A                      l893 06D3  
                    l885 06AB                      l879 0668                      l899 0E00  
                    _RB2 0032                      _RC1 0039                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RE0 0048  
                    _RE1 0049                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      _ISR 06FE  
                    _min 0066                      _sek 0068                      _tim 0064  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
        __end_of_LCD_Out 0E3D             ___fltol@exp1 0078                     l2201 00BD  
                   l2211 00E9                     l2203 00CF                     l2213 00EE  
                   l2221 010E                     l2205 00D7                     l2231 0139  
                   l2223 0120                     l2215 0100                     l2207 00DF  
                   l2151 0041                     l2241 0151                     l2233 0141  
                   l2225 0121                     l2217 0104                     l2209 00E7  
                   l2161 0058                     l2153 0045                     l3025 0238  
                   l2251 0169                     l2243 015A                     l2235 0143  
                   l2227 012F                     l2219 0105                     l2171 006C  
                   l2163 0059                     l2155 0046                     l2147 0038  
                   l3027 02A1                     l2261 0198                     l2253 017D  
                   l2237 014C                     l2245 0160                     l2229 0133  
                   l2181 0083                     l2173 0070                     l2157 004B  
                   l2165 005B                     l2149 003D                     l2501 0E7F  
                   l2271 01D6                     l2263 019C                     l2247 0164  
                   l2239 0150                     l2191 00A6                     l2183 0084  
                   l2175 0071                     l2167 0063                     l2159 0050  
                   l2503 0E86                     l2511 07B8                     l2281 01FA  
                   l2273 01E5                     l2265 01B5                     l2257 0185  
                   l2249 0165                     l2177 0076                     l2185 0086  
                   l2169 0068                     l2505 0E8D                     l2521 07DB  
                   l2513 07BB                     l2283 01FC                     l2275 01E9  
                   l2259 018A                     l2267 01BB                     l2187 0096  
                   l2195 00AF                     l2179 007B                     l2523 07E1  
                   l2515 07C2                     l2507 07AE                     l2611 02BC  
                   l2603 028D                     l2701 0F40                     l2277 01F1  
                   l2269 01C8                     l2197 00B4                     l2189 00A2  
                   l2525 07E2                     l2517 07C6                     l2509 07B2  
                   l2541 0EA7                     l2533 0E91                     l2621 02C7  
                   l2613 02C0                     l2605 02AC                     l2711 0F5E  
                   l2703 0F46                     l2279 01F6                     l2527 07E9  
                   l2519 07CA                     l2543 0EAB                     l2535 0E99  
                   l2551 0EC8                     l1751 0DFD                     l2631 02F9  
                   l2615 02C5                     l2607 02B4                     l2481 0E1C  
                   l2561 0E0E                     l2713 0F62                     l2705 0F4C  
                   l2529 07EF                     l2545 0EB5                     l2537 0E9C  
                   l1761 0E43                     l1753 0DFF                     l1745 0DF0  
                   l2641 0324                     l2633 030A                     l2625 02E3  
                   l2609 02B8                     l2801 0502                     l2483 0E20  
                   l2563 0E17                     l2555 0E02                     l2707 0F52  
                   l2491 0E63                     l2571 0EF6                     l2547 0EBB  
                   l2539 0EA3                     l1763 0E50                     l1747 0DF1  
                   l2651 033C                     l2643 0329                     l2635 0316  
                   l2627 02ED                     l2811 0517                     l2731 03F2  
                   l2723 03CB                     l2485 0E2B                     l2557 0E05  
                   l2709 0F58                     l2901 0690                     l2493 0E66  
                   l2565 0ECD                     l2549 0EC2                     l1765 0E57  
                   l1757 0E3D                     l1749 0DF7                     l2661 0364  
                   l2645 032D                     l2653 0349                     l2637 031A  
                   l2629 02F3                     l2581 0221                     l2573 020E  
                   l2821 052C                     l2805 050B                     l2741 0424  
                   l2733 0401                     l2725 03DA                     l2487 0E32  
                   l2559 0E0B                     l2719 0F63                     l2911 06C1  
                   l2903 0694                     l2495 0E75                     l2567 0ED2  
                   l1767 0E5D                     l1759 0E3F                     l2671 03A4  
                   l2663 036A                     l2655 034F                     l2647 0333  
                   l2639 031E                     l2591 024D                     l2583 0226  
                   l2575 0211                     l2823 0535                     l2815 0520  
                   l2751 0450                     l2743 0429                     l2735 0406  
                   l2727 03DF                     l2489 0E39                     l2921 06F4  
                   l2913 06CB                     l2905 06A2                     l2497 0E78  
                   l2569 0EEE                     l2673 03A9                     l2665 036F  
                   l2657 0354                     l2649 0338                     l2593 0251  
                   l2577 0217                     l2833 0548                     l2825 053C  
                   l2761 0479                     l2753 045B                     l2745 042F  
                   l2737 0411                     l2729 03E5                     l2691 0F13  
                   l2923 06F5                     l2915 06D5                     l2907 06B2  
                   l2499 0E7C                     l2675 03AD                     l2659 0358  
                   l2667 0373                     l2595 0266                     l2587 022A  
                   l2579 021C                     l2835 0551                     l2771 04AB  
                   l2763 0486                     l2755 0461                     l2747 043C  
                   l2739 0417                     l2693 0F1C                     l2861 0FBA  
                   l2853 0F9C                     l2917 06EB                     l2909 06BD  
                   l2669 0376                     l2597 0279                     l2589 023D  
                   l2677 03B6                     l2845 0564                     l2781 04E7  
                   l2773 04BF                     l2765 0495                     l2757 046E  
                   l2749 044B                     l2941 0580                     l2695 0F22  
                   l2863 0FBE                     l2871 0FD8                     l2855 0FAF  
                   l2847 0F88                     l2919 06F0                     l2679 03C6  
                   l2599 027D                     l2839 0558                     l2791 04F6  
                   l2775 04D5                     l2767 049A                     l2759 0473  
                   l2951 0596                     l2943 0585                     l2935 056E  
                   l2697 0F31                     l2881 0FF4                     l2857 0FB0  
                   l2849 0F93                     l2793 04FC                     l2777 04DB  
                   l2769 04A5                     l2961 05A8                     l2953 059A  
                   l2945 0589                     l2937 0578                     l2699 0F3A  
                   l2859 0FB8                     l2891 0670                     l2883 0647  
                   l2779 04E1                     l2971 0603                     l2963 05AF  
                   l2955 05A0                     l2947 058D                     l2939 057B  
                   l2877 0FDF                     l2869 0FC6                     l2885 064C  
                   l2789 04ED                     l2981 0637                     l2973 0610  
                   l2965 05BC                     l2957 05A5                     l2949 0590  
                   l2879 0FEF                     l2895 0679                     l2887 0650  
                   l2983 063B                     l2975 061F                     l2967 05C0  
                   l2959 05A7                     l2897 067C                     l2889 0660  
                   l2977 0625                     l2969 05FB                     l2899 0689  
                   l2979 062A                     STR_1 081A                     STR_2 081A  
                   STR_3 082D                     STR_4 0829                     STR_5 0831  
                   STR_6 0833                     u2000 004B                     u2001 004A  
                   u2010 0050                     u2011 004F                     u2100 0104  
                   u2020 0070                     u2101 0103                     u2021 006F  
                   u2030 0076                     u2031 0075                     u2200 017D  
                   u2120 0120                     u2040 007B                     u3000 03B6  
                   u2201 017C                     u2121 011F                     u2041 007A  
                   u3001 03B5                     u2210 0184                     u2130 0139  
                   u2050 0096                     u3010 03C6                     u2211 0183  
                   u2131 0138                     u2115 0107                     u2051 0095  
                   u3011 03C5                     u2220 018A                     u2140 0141  
                   u2060 00B4                     u1420 0E5D                     u3100 0486  
                   u2221 0189                     u2141 0140                     u2125 011C  
                   u2061 00B3                     u1421 0E5C                     u1405 0E4A  
                   u3101 0485                     u2230 019C                     u2070 00EE  
                   u3110 0495                     u3030 03DA                     u2231 019B  
                   u2071 00ED                     u1415 0E51                     u3111 0494  
                   u3031 03D9                     u2240 01AB                     u2160 0150  
                   u3200 0FDE                     u3120 053C                     u3040 03F2  
                   u3025 0F66                     u2161 014F                     u3201 0FDD  
                   u3121 053B                     u3105 0482                     u3041 03F1  
                   u2250 01C8                     u1370 0DF7                     u3130 0558  
                   u3050 0401                     u2251 01C7                     u2155 0145  
                   u1371 0DF6                     u3131 0557                     u3115 0491  
                   u3051 0400                     u3035 03D6                     u2260 01E5  
                   u2180 0164                     u3220 0FEF                     u3140 0F93  
                   u3300 06B1                     u1380 0DFD                     u3060 0424  
                   u2261 01E4                     u2245 01A6                     u2181 0163  
                   u2085 00F0                     u3221 0FEE                     u3141 0F92  
                   u3301 06B0                     u1381 0DFC                     u3061 0423  
                   u3045 03EE                     u2270 01FA                     u2190 0169  
                   u3230 0FF4                     u3150 0FAA                     u1390 0E43  
                   u3070 043C                     u2271 01F9                     u2255 01C4  
                   u2191 0168                     u2175 0153                     u2095 00F9  
                   u3231 0FF3                     u3215 0FE1                     u1391 0E42  
                   u3071 043B                     u3055 03FD                     u3160 0FBE  
                   u3320 06C1                     u3240 064C                     u3080 044B  
                   u3400 059A                     u2265 01E1                     u3161 0FBD  
                   u3321 06C0                     u3241 064B                     u3081 044A  
                   u3065 0420                     u3401 0599                     u3170 0FC5  
                   u3330 06C7                     u3250 0650                     u3090 046E  
                   u3410 05A0                     u3171 0FC4                     u3155 0FA5  
                   u3331 06C6                     u3315 06B6                     u3251 064F  
                   u3091 046D                     u3075 0438                     u3411 059F  
                   u3340 06CB                     u3260 0670                     u2700 07CA  
                   u3420 05A5                     u3341 06CA                     u3261 066F  
                   u2701 07C9                     u3085 0447                     u3421 05A4  
                   u2630 0E20                     u3190 0FD7                     u3350 06E0  
                   u3430 05B6                     u2631 0E1F                     u3191 0FD6  
                   u3095 046A                     u3431 05B5                     u2640 0E2B  
                   u3360 06F0                     u3280 068F                     u2720 07DB  
                   u2800 0EC8                     u3440 05BB                     u2641 0E2A  
                   u3185 0FC7                     u3361 06EF                     u3281 068E  
                   u2721 07DA                     u2801 0EC7                     u3441 05BA  
                   u2650 0E32                     u3370 06F4                     u2810 0EDC  
                   u3450 0610                     u2651 0E31                     u3371 06F3  
                   u3355 06DB                     u3275 0681                     u3507 0E8B  
                   u2715 07CB                     u3451 060F                     u2660 0E39  
                   u2820 0F00                     u2740 07EF                     u2900 02F3  
                   u3460 061F                     u2661 0E38                     u3517 0F17  
                   u2741 07EE                     u2725 07D7                     u2901 02F2  
                   u3461 061E                     u2830 0F12                     u2750 0E99  
                   u2910 02F9                     u3470 0637                     u3390 0596  
                   u3527 0F26                     u3295 06A3                     u2831 0F11  
                   u2735 07E3                     u2751 0E98                     u2911 02F8  
                   u3471 0636                     u3455 060C                     u3391 0595  
                   u2680 07B8                     u2920 030A                     u2840 0217  
                   u3537 0F35                     u2681 07B7                     u2921 0309  
                   u2841 0216                     u3465 061B                     u2770 0EAB  
                   u2930 031E                     u2850 024D                     u3547 0E12  
                   u2675 0E69                     u2771 0EAA                     u2931 031D  
                   u2851 024C                     u3475 0633                     u2780 0EB5  
                   u2940 0324                     u2860 028D                     u2781 0EB4  
                   u2765 0E9D                     u2941 0323                     u2925 0306  
                   u2861 028C                     u1990 0045                     u2950 0333  
                   u2870 02BC                     u1991 0044                     u2695 07BC  
                   u2951 0332                     u2871 02BB                     u3487 05AC  
                   u2960 0348                     u2880 02E2                     u3497 0E7A  
                   u2785 0EB1                     u2961 0347                     u2881 02E1  
                   u2970 034F                     u2890 02ED                     u2795 0EBC  
                   u2971 034E                     u2891 02EC                     u2980 0364  
                   u2981 0363                     u2885 02DE                     u2990 036A  
                   u2991 0369                     _TMR0 0001                     _main 056E  
                   btemp 007E                     start 000E          ___fldiv@new_exp 003C  
            LCD_Init@cmd 0020                    ??_ISR 0070           ?_update_screen 0070  
       __end_of_LCD_Init 0F88         __end_of_LCD_putc 0E91            ___fltol@sign1 0077  
                  ?_main 0070          __end_of___fldiv 020B          __end_of___fltol 1000  
                  _CMCON 009C                    _T1CON 0010          __end_of___lwdiv 07F4  
        __end_of___lwmod 0ECD                    i1l287 07A5                    _TMR1H 000F  
                  _TMR1L 000E                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _a_min 0062  
                  _a_sek 006B                    _a_tim 0060                    _alarm 006D  
                  _antal 0079          __end_of_dpowers 081A          __end_of_isdigit 0E01  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 03CB          __initialization 0011             __end_of_main 0644  
                 ??_main 0059                ??_LCD_Out 0073        __end_of_LCD_Write 0E1B  
      __end_of_LCD_putrs 0F13                   _ADCON1 009F                   i1l2341 06FE  
                 i1l2351 0727                   i1l2343 0702                   i1l2361 074F  
                 i1l2353 0734                   i1l2345 0710                   i1l2371 077C  
                 i1l2363 0755                   i1l2355 0738                   i1l2347 071D  
                 i1l2381 079C                   i1l2373 0786                   i1l2365 0762  
                 i1l2357 073E                   i1l2349 071F                   i1l2383 07A0  
                 i1l2375 078B                   i1l2359 074B                   i1l2367 0766  
                 i1l2385 07A1                   i1l2369 0772                   i1l2377 078E  
                 i1l2387 07A2                   i1l2379 0796                   i1l2389 07A3  
                 _INTCON 000B                   u250_20 0786                   u250_21 0785  
                 u250_25 0782                   u251_20 078B                   u243_20 0702  
                 u251_21 078A                   u243_21 0701                   u252_20 0796  
                 u244_20 071D                   u252_21 0795                   u244_21 071C  
                 u244_25 0719                   u253_20 07A0                   u245_20 0734  
                 u253_21 079F                   u245_21 0733                   u245_25 0730  
                 u246_20 074B                   u246_21 074A                   u246_25 0747  
                 u247_20 0762                   u247_21 0761                   u247_25 075E  
                 u248_20 0772                   u248_21 0771                   u248_25 076E  
                 u249_20 077C                   u249_21 077B                   u249_25 0778  
                 _TMR0IF 005A         __end_of___xxtofl 06FE        _update_screen$130 0053  
      _update_screen$131 0055        _update_screen$132 0057        _update_screen$127 004D  
      _update_screen$128 004F        _update_screen$129 0051          ??_update_screen 0079  
                 ___wmul 0E3D                ??___fldiv 0032                ??___fltol 0048  
              ??___lwdiv 0077                ??___lwmod 0078                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 002F             ___xxtofl@arg 0026  
           ___xxtofl@exp 0025             ___xxtofl@val 0073  __end_of__initialization 0034  
              ?_LCD_Init 0070                ?_LCD_putc 0070               ___fltol@f1 0044  
         __pcstackCOMMON 0070             __pidataBANK0 07F4                LCD_putc@c 0075  
           sprintf@width 0037               __pbssBANK0 005C               ??_LCD_Init 0077  
             ??_LCD_putc 0074               __pmaintext 056E                  ?___wmul 0073  
             __pintentry 0004                  _LCD_Out 0E1B                ?___xxtofl 0073  
       update_screen@str 0044               __stringtab 0800               _drive_mode 006A  
                ___fldiv 0038                  ___fltol 0F88                  ___lwdiv 07AE  
                ___lwmod 0E91                  __ptext1 03CB                  __ptext2 020B  
                __ptext3 0DEF                  __ptext4 0E3D                  __ptext5 0E91  
                __ptext6 07AE                  __ptext7 0ECD                  __ptext8 0E62  
                __ptext9 0644                _T1CONbits 0010                  _dpowers 0810  
                _isdigit 0DEF               ??___xxtofl 0020                  _sprintf 020B  
              _LCD_Write 0E01     end_of_initialization 0034                _LCD_putrs 0ECD  
     update_screen@a_str 003B            ___xxtofl@sign 0024              ___fldiv@grs 003E  
            ___fldiv@rem 0037               ?_LCD_Write 0070               ?_LCD_putrs 0076  
  __end_of_update_screen 056E           __end_of___wmul 0E62               LCD_Write@c 0076  
    start_initialization 0011              __end_of_ISR 07AE               LCD_putrs@a 0076  
             LCD_putrs@i 0023                 ??___wmul 0077              __pdataBANK0 006B  
              ___fldiv@a 002A                ___fldiv@b 002E                 ?_LCD_Out 0070  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
               LCD_Out@c 0073              ??_LCD_Write 0074              ??_LCD_putrs 0020  
            sprintf@flag 0036              sprintf@prec 0033         ___lwdiv@dividend 0075  
               ?___fldiv 002A                 ?___fltol 0044                 ?___lwdiv 0073  
               ?___lwmod 0023                __pstrings 0800                 ?_isdigit 0070  
       ___lwdiv@quotient 0021                 ?_sprintf 0028        interrupt_function 0004  
               _LCD_Init 0F13           ___wmul@product 0077                 _LCD_putc 0E62  
            __stringbase 080F        ___wmul@multiplier 0073              _drive_timer 005C  
     __end_of__stringtab 0810              _isdigit$635 0073               sprintf@val 0034  
               ___xxtofl 0644          ___lwdiv@divisor 0073          ___lwdiv@counter 0020  
               __ptext10 0F88                 __ptext11 0038                 __ptext12 0F13  
               __ptext13 0E01                 __ptext14 0E1B                 __ptext15 06FE  
               main@dist 005A                 isdigit@c 0074                 intlevel1 0000  
              sprintf@ap 0032                sprintf@sp 0039         ___lwmod@dividend 0025  
              stringcode 080A               _OPTION_REG 0081                 sprintf@c 003A  
               sprintf@f 0028          ___lwmod@divisor 0023          ___lwmod@counter 0027  
               stringdir 080A                 stringtab 0800  
