

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 20 13:41:33 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 04/07/2022 GMT
    41                           ; 
    42                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0088                     	;# 
   114     0089                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009C                     	;# 
   185     009D                     	;# 
   186     009E                     	;# 
   187     009F                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194     0000                     	;# 
   195     0001                     	;# 
   196     0002                     	;# 
   197     0003                     	;# 
   198     0004                     	;# 
   199     0005                     	;# 
   200     0006                     	;# 
   201     0007                     	;# 
   202     0008                     	;# 
   203     0009                     	;# 
   204     000A                     	;# 
   205     000B                     	;# 
   206     000C                     	;# 
   207     000D                     	;# 
   208     000E                     	;# 
   209     000E                     	;# 
   210     000F                     	;# 
   211     0010                     	;# 
   212     0011                     	;# 
   213     0012                     	;# 
   214     0013                     	;# 
   215     0014                     	;# 
   216     0015                     	;# 
   217     0015                     	;# 
   218     0016                     	;# 
   219     0017                     	;# 
   220     0018                     	;# 
   221     0019                     	;# 
   222     001A                     	;# 
   223     001B                     	;# 
   224     001B                     	;# 
   225     001C                     	;# 
   226     001D                     	;# 
   227     001E                     	;# 
   228     001F                     	;# 
   229     0081                     	;# 
   230     0085                     	;# 
   231     0086                     	;# 
   232     0087                     	;# 
   233     0088                     	;# 
   234     0089                     	;# 
   235     008C                     	;# 
   236     008D                     	;# 
   237     008E                     	;# 
   238     0091                     	;# 
   239     0092                     	;# 
   240     0093                     	;# 
   241     0094                     	;# 
   242     0098                     	;# 
   243     0099                     	;# 
   244     009C                     	;# 
   245     009D                     	;# 
   246     009E                     	;# 
   247     009F                     	;# 
   248     010C                     	;# 
   249     010D                     	;# 
   250     010E                     	;# 
   251     010F                     	;# 
   252     018C                     	;# 
   253     018D                     	;# 
   254                           
   255                           	psect	idataBANK0
   256     0A54                     __pidataBANK0:
   257                           
   258                           ;initializer for _hz_delay
   259     0A54  3401               	retlw	1
   260     0A55  3400               	retlw	0
   261                           
   262                           ;initializer for _a_sek
   263     0A56  3405               	retlw	5
   264     0A57  3400               	retlw	0
   265                           
   266                           ;initializer for _alarm
   267     0A58  3401               	retlw	1
   268                           
   269                           	psect	strings
   270     0800                     __pstrings:
   271     0800                     stringtab:
   272     0800                     __stringtab:
   273                           
   274                           ;	String table - string pointers are 1 byte each
   275     0800  1BFF               	btfsc	btemp+1,7
   276     0801  280A               	ljmp	stringcode
   277     0802  1383               	bcf	3,7
   278     0803  187F               	btfsc	btemp+1,0
   279     0804  1783               	bsf	3,7
   280     0805  0800               	movf	0,w
   281     0806  0A84               	incf	4,f
   282     0807  1903               	skipnz
   283     0808  0AFF               	incf	btemp+1,f
   284     0809  0008               	return
   285     080A                     stringcode:
   286     080A                     stringdir:
   287     080A  3008               	movlw	high stringdir
   288     080B  008A               	movwf	10
   289     080C  0804               	movf	4,w
   290     080D  0A84               	incf	4,f
   291     080E  0782               	addwf	2,f
   292     080F                     __stringbase:
   293     080F  3400               	retlw	0
   294     0810                     __end_of__stringtab:
   295     0810                     _dpowers:
   296     0810  3401               	retlw	1
   297     0811  3400               	retlw	0
   298     0812  340A               	retlw	10
   299     0813  3400               	retlw	0
   300     0814  3464               	retlw	100
   301     0815  3400               	retlw	0
   302     0816  34E8               	retlw	232
   303     0817  3403               	retlw	3
   304     0818  3410               	retlw	16
   305     0819  3427               	retlw	39
   306     081A                     __end_of_dpowers:
   307     0010                     _T1CONbits	set	16
   308     000E                     _TMR1L	set	14
   309     000F                     _TMR1H	set	15
   310     0010                     _T1CON	set	16
   311     0001                     _TMR0	set	1
   312     000B                     _INTCON	set	11
   313     0039                     _RC1	set	57
   314     0032                     _RB2	set	50
   315     0033                     _RB3	set	51
   316     0034                     _RB4	set	52
   317     0035                     _RB5	set	53
   318     0036                     _RB6	set	54
   319     0037                     _RB7	set	55
   320     005A                     _TMR0IF	set	90
   321     0031                     _RB1	set	49
   322     0030                     _RB0	set	48
   323     003B                     _RC3	set	59
   324     0048                     _RE0	set	72
   325     0049                     _RE1	set	73
   326     0047                     _RD7	set	71
   327     0046                     _RD6	set	70
   328     0045                     _RD5	set	69
   329     0044                     _RD4	set	68
   330     0087                     _TRISC	set	135
   331     009F                     _ADCON1	set	159
   332     009C                     _CMCON	set	156
   333     0089                     _TRISE	set	137
   334     0088                     _TRISD	set	136
   335     0086                     _TRISB	set	134
   336     0081                     _OPTION_REG	set	129
   337     081A                     STR_2:
   338     081A  3425               	retlw	37	;'%'
   339     081B  3430               	retlw	48	;'0'
   340     081C  3432               	retlw	50	;'2'
   341     081D  3464               	retlw	100	;'d'
   342     081E  343A               	retlw	58	;':'
   343     081F  3425               	retlw	37	;'%'
   344     0820  3430               	retlw	48	;'0'
   345     0821  3432               	retlw	50	;'2'
   346     0822  3464               	retlw	100	;'d'
   347     0823  343A               	retlw	58	;':'
   348     0824  3425               	retlw	37	;'%'
   349     0825  3430               	retlw	48	;'0'
   350     0826  3432               	retlw	50	;'2'
   351     0827  3464               	retlw	100	;'d'
   352     0828  3400               	retlw	0
   353     0829                     STR_3:
   354     0829  3461               	retlw	97	;'a'
   355     082A  346C               	retlw	108	;'l'
   356     082B  343A               	retlw	58	;':'
   357     082C  3400               	retlw	0
   358     082D                     STR_1:
   359     082D  346B               	retlw	107	;'k'
   360     082E  346C               	retlw	108	;'l'
   361     082F  343A               	retlw	58	;':'
   362     0830  3400               	retlw	0
   363     0831                     STR_5:
   364     0831  3421               	retlw	33	;'!'
   365     0832  3400               	retlw	0
   366     0833                     STR_6:
   367     0833  3441               	retlw	65	;'A'
   368     0834  3400               	retlw	0
   369     081A                     
   370                           	psect	cinit
   371     0011                     start_initialization:	
   372                           ; #config settings
   373                           
   374     0011                     __initialization:
   375                           
   376                           ; Initialize objects allocated to BANK0
   377     0011  120A  158A  2254  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   378     0016  00EB               	movwf	__pdataBANK0& (0+127)
   379     0017  120A  158A  2255  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   380     001C  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   381     001D  120A  158A  2256  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   382     0022  00ED               	movwf	(__pdataBANK0+2)& (0+127)
   383     0023  120A  158A  2257  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   384     0028  00EE               	movwf	(__pdataBANK0+3)& (0+127)
   385     0029  120A  158A  2258  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   386     002E  00EF               	movwf	(__pdataBANK0+4)& (0+127)
   387                           
   388                           ; Clear objects allocated to BANK1
   389     002F  1383               	bcf	3,7	;select IRP bank0
   390     0030  30A0               	movlw	low __pbssBANK1
   391     0031  0084               	movwf	4
   392     0032  30E0               	movlw	low (__pbssBANK1+64)
   393     0033  120A  158A  2259  120A  118A  	fcall	clear_ram0
   394                           
   395                           ; Clear objects allocated to BANK0
   396     0038  3054               	movlw	low __pbssBANK0
   397     0039  0084               	movwf	4
   398     003A  306B               	movlw	low (__pbssBANK0+23)
   399     003B  120A  158A  2259  120A  118A  	fcall	clear_ram0
   400                           
   401                           ; Clear objects allocated to COMMON
   402     0040  01F9               	clrf	__pbssCOMMON& (0+127)
   403     0041  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   404     0042                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407     0042                     __end_of__initialization:
   408     0042  0183               	clrf	3
   409     0043  120A  118A  2E83   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412     0079                     __pbssCOMMON:
   413     0079                     _flag_2:
   414     0079                     	ds	2
   415                           
   416                           	psect	bssBANK0
   417     0054                     __pbssBANK0:
   418     0054                     _flag_4:
   419     0054                     	ds	2
   420     0056                     _flag_update:
   421     0056                     	ds	2
   422     0058                     _flag_3:
   423     0058                     	ds	2
   424     005A                     _flag:
   425     005A                     	ds	2
   426     005C                     _mode:
   427     005C                     	ds	2
   428     005E                     _a_tim:
   429     005E                     	ds	2
   430     0060                     _a_min:
   431     0060                     	ds	2
   432     0062                     _tim:
   433     0062                     	ds	2
   434     0064                     _min:
   435     0064                     	ds	2
   436     0066                     _sek:
   437     0066                     	ds	2
   438     0068                     _antal:
   439     0068                     	ds	2
   440     006A                     _tone:
   441     006A                     	ds	1
   442                           
   443                           	psect	dataBANK0
   444     006B                     __pdataBANK0:
   445     006B                     _hz_delay:
   446     006B                     	ds	2
   447     006D                     _a_sek:
   448     006D                     	ds	2
   449     006F                     _alarm:
   450     006F                     	ds	1
   451                           
   452                           	psect	bssBANK1
   453     00A0                     __pbssBANK1:
   454     00A0                     _str:
   455     00A0                     	ds	32
   456     00C0                     _a_str:
   457     00C0                     	ds	32
   458                           
   459                           	psect	clrtext
   460     0A59                     clear_ram0:	
   461                           ;	Called with FSR containing the base address, and
   462                           ;	W with the last address+1
   463                           
   464     0A59  0064               	clrwdt	;clear the watchdog before getting into this loop
   465     0A5A                     clrloop0:
   466     0A5A  0180               	clrf	0	;clear RAM location pointed to by FSR
   467     0A5B  0A84               	incf	4,f	;increment pointer
   468     0A5C  0604               	xorwf	4,w	;XOR with final address
   469     0A5D  1903               	btfsc	3,2	;have we reached the end yet?
   470     0A5E  3400               	retlw	0	;all done for this memory range, return
   471     0A5F  0604               	xorwf	4,w	;XOR again to restore value
   472     0A60  2A5A               	goto	clrloop0	;do the next byte
   473                           
   474                           	psect	cstackBANK1
   475     00E0                     __pcstackBANK1:
   476     00E0                     main@a:
   477                           
   478                           ; 2 bytes @ 0x0
   479     00E0                     	ds	2
   480                           
   481                           	psect	cstackCOMMON
   482     0070                     __pcstackCOMMON:
   483     0070                     ?_isdigit:
   484     0070                     ?_LCD_Out:	
   485                           ; 1 bit 
   486                           
   487     0070                     ?_LCD_Write:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_LCD_Init:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_LCD_putc:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_setup2:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_mode3:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_update:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ??_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_mode1:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_mode2:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_main:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522     0070                     	ds	3
   523     0073                     ??_isdigit:
   524     0073                     ??_LCD_Out:	
   525                           ; 1 bytes @ 0x3
   526                           
   527     0073                     ??_setup2:	
   528                           ; 1 bytes @ 0x3
   529                           
   530     0073                     ??_mode3:	
   531                           ; 1 bytes @ 0x3
   532                           
   533     0073                     ??_mode1:	
   534                           ; 1 bytes @ 0x3
   535                           
   536     0073                     ??_mode2:	
   537                           ; 1 bytes @ 0x3
   538                           
   539     0073                     ?___wmul:	
   540                           ; 1 bytes @ 0x3
   541                           
   542     0073                     ?___lwdiv:	
   543                           ; 2 bytes @ 0x3
   544                           
   545     0073                     ?___xxtofl:	
   546                           ; 2 bytes @ 0x3
   547                           
   548     0073                     LCD_Out@c:	
   549                           ; 4 bytes @ 0x3
   550                           
   551     0073                     _isdigit$659:	
   552                           ; 1 bytes @ 0x3
   553                           
   554     0073                     ___wmul@multiplier:	
   555                           ; 1 bytes @ 0x3
   556                           
   557     0073                     ___lwdiv@divisor:	
   558                           ; 2 bytes @ 0x3
   559                           
   560     0073                     ___xxtofl@val:	
   561                           ; 2 bytes @ 0x3
   562                           
   563                           
   564                           ; 4 bytes @ 0x3
   565     0073                     	ds	1
   566     0074                     ??_LCD_Write:
   567     0074                     ??_LCD_putc:	
   568                           ; 1 bytes @ 0x4
   569                           
   570     0074                     isdigit@c:	
   571                           ; 1 bytes @ 0x4
   572                           
   573                           
   574                           ; 1 bytes @ 0x4
   575     0074                     	ds	1
   576     0075                     LCD_putc@c:
   577     0075                     ___wmul@multiplicand:	
   578                           ; 1 bytes @ 0x5
   579                           
   580     0075                     ___lwdiv@dividend:	
   581                           ; 2 bytes @ 0x5
   582                           
   583                           
   584                           ; 2 bytes @ 0x5
   585     0075                     	ds	1
   586     0076                     ?_LCD_putrs:
   587     0076                     LCD_Write@c:	
   588                           ; 1 bytes @ 0x6
   589                           
   590     0076                     LCD_putrs@a:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 2 bytes @ 0x6
   595     0076                     	ds	1
   596     0077                     ??_LCD_Init:
   597     0077                     ??___wmul:	
   598                           ; 1 bytes @ 0x7
   599                           
   600     0077                     ??___lwdiv:	
   601                           ; 1 bytes @ 0x7
   602                           
   603     0077                     ___fltol@sign1:	
   604                           ; 1 bytes @ 0x7
   605                           
   606     0077                     ___wmul@product:	
   607                           ; 1 bytes @ 0x7
   608                           
   609                           
   610                           ; 2 bytes @ 0x7
   611     0077                     	ds	1
   612     0078                     ??___lwmod:
   613     0078                     ___fltol@exp1:	
   614                           ; 1 bytes @ 0x8
   615                           
   616                           
   617                           ; 1 bytes @ 0x8
   618     0078                     	ds	1
   619     0079                     ??_update:
   620                           
   621                           	psect	cstackBANK0
   622     0020                     __pcstackBANK0:	
   623                           ; 1 bytes @ 0x9
   624                           
   625     0020                     ??_LCD_putrs:
   626     0020                     ??___xxtofl:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0020                     LCD_Init@cmd:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0020                     ___lwdiv@counter:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 1 bytes @ 0x0
   637     0020                     	ds	1
   638     0021                     ___lwdiv@quotient:
   639                           
   640                           ; 2 bytes @ 0x1
   641     0021                     	ds	2
   642     0023                     ?___lwmod:
   643     0023                     LCD_putrs@i:	
   644                           ; 2 bytes @ 0x3
   645                           
   646     0023                     ___lwmod@divisor:	
   647                           ; 2 bytes @ 0x3
   648                           
   649                           
   650                           ; 2 bytes @ 0x3
   651     0023                     	ds	1
   652     0024                     ___xxtofl@sign:
   653                           
   654                           ; 1 bytes @ 0x4
   655     0024                     	ds	1
   656     0025                     ___xxtofl@exp:
   657     0025                     ___lwmod@dividend:	
   658                           ; 1 bytes @ 0x5
   659                           
   660                           
   661                           ; 2 bytes @ 0x5
   662     0025                     	ds	1
   663     0026                     ___xxtofl@arg:
   664                           
   665                           ; 4 bytes @ 0x6
   666     0026                     	ds	1
   667     0027                     ___lwmod@counter:
   668                           
   669                           ; 1 bytes @ 0x7
   670     0027                     	ds	1
   671     0028                     ?_sprintf:
   672     0028                     sprintf@f:	
   673                           ; 2 bytes @ 0x8
   674                           
   675                           
   676                           ; 1 bytes @ 0x8
   677     0028                     	ds	2
   678     002A                     ?___fldiv:
   679     002A                     ___fldiv@a:	
   680                           ; 4 bytes @ 0xA
   681                           
   682                           
   683                           ; 4 bytes @ 0xA
   684     002A                     	ds	4
   685     002E                     ___fldiv@b:
   686                           
   687                           ; 4 bytes @ 0xE
   688     002E                     	ds	1
   689     002F                     ??_sprintf:
   690                           
   691                           ; 1 bytes @ 0xF
   692     002F                     	ds	3
   693     0032                     ??___fldiv:
   694     0032                     sprintf@ap:	
   695                           ; 1 bytes @ 0x12
   696                           
   697                           
   698                           ; 1 bytes @ 0x12
   699     0032                     	ds	1
   700     0033                     sprintf@prec:
   701                           
   702                           ; 1 bytes @ 0x13
   703     0033                     	ds	1
   704     0034                     sprintf@val:
   705                           
   706                           ; 2 bytes @ 0x14
   707     0034                     	ds	2
   708     0036                     sprintf@flag:
   709                           
   710                           ; 1 bytes @ 0x16
   711     0036                     	ds	1
   712     0037                     sprintf@width:
   713     0037                     ___fldiv@rem:	
   714                           ; 2 bytes @ 0x17
   715                           
   716                           
   717                           ; 4 bytes @ 0x17
   718     0037                     	ds	2
   719     0039                     sprintf@sp:
   720                           
   721                           ; 1 bytes @ 0x19
   722     0039                     	ds	1
   723     003A                     sprintf@c:
   724                           
   725                           ; 1 bytes @ 0x1A
   726     003A                     	ds	1
   727     003B                     ___fldiv@sign:
   728     003B                     _update$141:	
   729                           ; 1 bytes @ 0x1B
   730                           
   731                           
   732                           ; 2 bytes @ 0x1B
   733     003B                     	ds	1
   734     003C                     ___fldiv@new_exp:
   735                           
   736                           ; 2 bytes @ 0x1C
   737     003C                     	ds	1
   738     003D                     _update$142:
   739                           
   740                           ; 2 bytes @ 0x1D
   741     003D                     	ds	1
   742     003E                     ___fldiv@grs:
   743                           
   744                           ; 4 bytes @ 0x1E
   745     003E                     	ds	1
   746     003F                     _update$143:
   747                           
   748                           ; 2 bytes @ 0x1F
   749     003F                     	ds	2
   750     0041                     _update$144:
   751                           
   752                           ; 2 bytes @ 0x21
   753     0041                     	ds	1
   754     0042                     ___fldiv@bexp:
   755                           
   756                           ; 1 bytes @ 0x22
   757     0042                     	ds	1
   758     0043                     ___fldiv@aexp:
   759     0043                     _update$145:	
   760                           ; 1 bytes @ 0x23
   761                           
   762                           
   763                           ; 2 bytes @ 0x23
   764     0043                     	ds	1
   765     0044                     ?___fltol:
   766     0044                     ___fltol@f1:	
   767                           ; 4 bytes @ 0x24
   768                           
   769                           
   770                           ; 4 bytes @ 0x24
   771     0044                     	ds	1
   772     0045                     _update$146:
   773                           
   774                           ; 2 bytes @ 0x25
   775     0045                     	ds	2
   776     0047                     _update$147:
   777                           
   778                           ; 2 bytes @ 0x27
   779     0047                     	ds	1
   780     0048                     ??___fltol:
   781                           
   782                           ; 1 bytes @ 0x28
   783     0048                     	ds	1
   784     0049                     _update$148:
   785                           
   786                           ; 2 bytes @ 0x29
   787     0049                     	ds	2
   788     004B                     _update$149:
   789                           
   790                           ; 2 bytes @ 0x2B
   791     004B                     	ds	2
   792     004D                     _update$150:
   793                           
   794                           ; 2 bytes @ 0x2D
   795     004D                     	ds	2
   796     004F                     _update$151:
   797                           
   798                           ; 2 bytes @ 0x2F
   799     004F                     	ds	2
   800     0051                     _update$152:
   801                           
   802                           ; 2 bytes @ 0x31
   803     0051                     	ds	2
   804     0053                     ??_main:
   805                           
   806                           ; 1 bytes @ 0x33
   807     0053                     	ds	1
   808                           
   809                           	psect	maintext
   810     0683                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 291 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  a               2    0[BANK1 ] int 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  2  382[None  ] int 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       0       2       0       0
   832 ;;      Temps:          0       1       0       0       0
   833 ;;      Totals:         0       1       2       0       0
   834 ;;Total ram usage:        3 bytes
   835 ;; Hardware stack levels required when called: 5
   836 ;; This function calls:
   837 ;;		_LCD_Init
   838 ;;		___fldiv
   839 ;;		___fltol
   840 ;;		___xxtofl
   841 ;;		_mode1
   842 ;;		_mode2
   843 ;;		_mode3
   844 ;;		_setup2
   845 ;;		_update
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     0683                     _main:	
   852                           ;psect for function _main
   853                           
   854     0683                     l3658:	
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   857                           
   858                           
   859                           ;main.c: 293:     setup2();
   860     0683  120A  118A  27EF  120A  118A  	fcall	_setup2
   861     0688                     l3660:
   862                           
   863                           ;main.c: 294:     TRISD = 0x00;
   864     0688  1683               	bsf	3,5	;RP0=1, select bank1
   865     0689  1303               	bcf	3,6	;RP1=0, select bank1
   866     068A  0188               	clrf	8	;volatile
   867     068B                     l3662:
   868                           
   869                           ;main.c: 295:     TRISE = 0x00;
   870     068B  0189               	clrf	9	;volatile
   871     068C                     l3664:
   872                           
   873                           ;main.c: 296:     CMCON = 0b00000111;
   874     068C  3007               	movlw	7
   875     068D  009C               	movwf	28	;volatile
   876     068E                     l3666:
   877                           
   878                           ;main.c: 297:     ADCON1 = 0x4E;
   879     068E  304E               	movlw	78
   880     068F  009F               	movwf	31	;volatile
   881                           
   882                           ;main.c: 299:     LCD_Init();
   883     0690  120A  158A  241A  120A  118A  	fcall	_LCD_Init
   884     0695                     l3668:
   885                           
   886                           ;main.c: 302:     TRISB = 0b11110111;
   887     0695  30F7               	movlw	247
   888     0696  1683               	bsf	3,5	;RP0=1, select bank1
   889     0697  1303               	bcf	3,6	;RP1=0, select bank1
   890     0698  0086               	movwf	6	;volatile
   891     0699                     l3670:
   892                           
   893                           ;main.c: 303:     T1CON = 0x10;
   894     0699  3010               	movlw	16
   895     069A  1283               	bcf	3,5	;RP0=0, select bank0
   896     069B  1303               	bcf	3,6	;RP1=0, select bank0
   897     069C  0090               	movwf	16	;volatile
   898     069D                     l3672:
   899                           
   900                           ;main.c: 304:     int a;;main.c: 306:     TRISC = 0;
   901     069D  1683               	bsf	3,5	;RP0=1, select bank1
   902     069E  1303               	bcf	3,6	;RP1=0, select bank1
   903     069F  0187               	clrf	7	;volatile
   904     06A0                     l3674:
   905                           
   906                           ;main.c: 308:     {;main.c: 309:       if (mode == 0)
   907     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   908     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   909     06A2  085C               	movf	_mode,w
   910     06A3  045D               	iorwf	_mode+1,w
   911     06A4  1D03               	btfss	3,2
   912     06A5  2EA7               	goto	u5841
   913     06A6  2EA8               	goto	u5840
   914     06A7                     u5841:
   915     06A7  2F03               	goto	l3690
   916     06A8                     u5840:
   917     06A8                     l3676:
   918                           
   919                           ;main.c: 310:         {;main.c: 312:           if(RB0 == 1 & flag == 0){
   920     06A8  1806               	btfsc	6,0	;volatile
   921     06A9  2EAB               	goto	u5851
   922     06AA  2EAD               	goto	u5850
   923     06AB                     u5851:
   924     06AB  3001               	movlw	1
   925     06AC  2EAE               	goto	u5852
   926     06AD                     u5850:
   927     06AD  3000               	movlw	0
   928     06AE                     u5852:
   929     06AE  00D3               	movwf	??_main
   930     06AF  085A               	movf	_flag,w
   931     06B0  045B               	iorwf	_flag+1,w
   932     06B1  1903               	btfsc	3,2
   933     06B2  2EB4               	goto	u5861
   934     06B3  2EB6               	goto	u5860
   935     06B4                     u5861:
   936     06B4  3001               	movlw	1
   937     06B5  2EB7               	goto	u5862
   938     06B6                     u5860:
   939     06B6  3000               	movlw	0
   940     06B7                     u5862:
   941     06B7  0553               	andwf	??_main,w
   942     06B8  3800               	iorlw	0
   943     06B9  1903               	skipnz
   944     06BA  2EBC               	goto	u5871
   945     06BB  2EBD               	goto	u5870
   946     06BC                     u5871:
   947     06BC  2EC5               	goto	l3680
   948     06BD                     u5870:
   949     06BD                     l3678:
   950                           
   951                           ;main.c: 313:               mode = 1;
   952     06BD  3001               	movlw	1
   953     06BE  00DC               	movwf	_mode
   954     06BF  3000               	movlw	0
   955     06C0  00DD               	movwf	_mode+1
   956                           
   957                           ;main.c: 314:               flag = 500;
   958     06C1  30F4               	movlw	244
   959     06C2  00DA               	movwf	_flag
   960     06C3  3001               	movlw	1
   961     06C4  00DB               	movwf	_flag+1
   962     06C5                     l3680:
   963                           
   964                           ;main.c: 317:           if(RB1 ==1 & flag == 0){
   965     06C5  1886               	btfsc	6,1	;volatile
   966     06C6  2EC8               	goto	u5881
   967     06C7  2ECA               	goto	u5880
   968     06C8                     u5881:
   969     06C8  3001               	movlw	1
   970     06C9  2ECB               	goto	u5882
   971     06CA                     u5880:
   972     06CA  3000               	movlw	0
   973     06CB                     u5882:
   974     06CB  00D3               	movwf	??_main
   975     06CC  085A               	movf	_flag,w
   976     06CD  045B               	iorwf	_flag+1,w
   977     06CE  1903               	btfsc	3,2
   978     06CF  2ED1               	goto	u5891
   979     06D0  2ED3               	goto	u5890
   980     06D1                     u5891:
   981     06D1  3001               	movlw	1
   982     06D2  2ED4               	goto	u5892
   983     06D3                     u5890:
   984     06D3  3000               	movlw	0
   985     06D4                     u5892:
   986     06D4  0553               	andwf	??_main,w
   987     06D5  3800               	iorlw	0
   988     06D6  1903               	skipnz
   989     06D7  2ED9               	goto	u5901
   990     06D8  2EDA               	goto	u5900
   991     06D9                     u5901:
   992     06D9  2EE2               	goto	l3684
   993     06DA                     u5900:
   994     06DA                     l3682:
   995                           
   996                           ;main.c: 318:               mode = 2;
   997     06DA  3002               	movlw	2
   998     06DB  00DC               	movwf	_mode
   999     06DC  3000               	movlw	0
  1000     06DD  00DD               	movwf	_mode+1
  1001                           
  1002                           ;main.c: 319:               flag = 500;
  1003     06DE  30F4               	movlw	244
  1004     06DF  00DA               	movwf	_flag
  1005     06E0  3001               	movlw	1
  1006     06E1  00DB               	movwf	_flag+1
  1007     06E2                     l3684:
  1008                           
  1009                           ;main.c: 321:           if(RB2 ==1 & flag == 0){
  1010     06E2  1906               	btfsc	6,2	;volatile
  1011     06E3  2EE5               	goto	u5911
  1012     06E4  2EE7               	goto	u5910
  1013     06E5                     u5911:
  1014     06E5  3001               	movlw	1
  1015     06E6  2EE8               	goto	u5912
  1016     06E7                     u5910:
  1017     06E7  3000               	movlw	0
  1018     06E8                     u5912:
  1019     06E8  00D3               	movwf	??_main
  1020     06E9  085A               	movf	_flag,w
  1021     06EA  045B               	iorwf	_flag+1,w
  1022     06EB  1903               	btfsc	3,2
  1023     06EC  2EEE               	goto	u5921
  1024     06ED  2EF0               	goto	u5920
  1025     06EE                     u5921:
  1026     06EE  3001               	movlw	1
  1027     06EF  2EF1               	goto	u5922
  1028     06F0                     u5920:
  1029     06F0  3000               	movlw	0
  1030     06F1                     u5922:
  1031     06F1  0553               	andwf	??_main,w
  1032     06F2  3800               	iorlw	0
  1033     06F3  1903               	skipnz
  1034     06F4  2EF6               	goto	u5931
  1035     06F5  2EF7               	goto	u5930
  1036     06F6                     u5931:
  1037     06F6  2F03               	goto	l3690
  1038     06F7                     u5930:
  1039     06F7                     l3686:
  1040                           
  1041                           ;main.c: 322:               flag = 500;
  1042     06F7  30F4               	movlw	244
  1043     06F8  00DA               	movwf	_flag
  1044     06F9  3001               	movlw	1
  1045     06FA  00DB               	movwf	_flag+1
  1046     06FB                     l3688:
  1047                           
  1048                           ;main.c: 323:               alarm = !alarm;
  1049     06FB  086F               	movf	_alarm,w
  1050     06FC  1903               	btfsc	3,2
  1051     06FD  2EFF               	goto	u5941
  1052     06FE  2F01               	goto	u5940
  1053     06FF                     u5941:
  1054     06FF  3001               	movlw	1
  1055     0700  2F02               	goto	u5950
  1056     0701                     u5940:
  1057     0701  3000               	movlw	0
  1058     0702                     u5950:
  1059     0702  00EF               	movwf	_alarm
  1060     0703                     l3690:
  1061                           
  1062                           ;main.c: 326:       if (mode == 1){
  1063     0703  035C               	decf	_mode,w
  1064     0704  045D               	iorwf	_mode+1,w
  1065     0705  1D03               	btfss	3,2
  1066     0706  2F08               	goto	u5961
  1067     0707  2F09               	goto	u5960
  1068     0708                     u5961:
  1069     0708  2F0E               	goto	l3694
  1070     0709                     u5960:
  1071     0709                     l3692:
  1072                           
  1073                           ;main.c: 327:           mode1();
  1074     0709  120A  158A  2650  120A  118A  	fcall	_mode1
  1075     070E                     l3694:
  1076                           
  1077                           ;main.c: 329:       if (mode == 2){
  1078     070E  3002               	movlw	2
  1079     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1080     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1081     0711  065C               	xorwf	_mode,w
  1082     0712  045D               	iorwf	_mode+1,w
  1083     0713  1D03               	btfss	3,2
  1084     0714  2F16               	goto	u5971
  1085     0715  2F17               	goto	u5970
  1086     0716                     u5971:
  1087     0716  2F1C               	goto	l3698
  1088     0717                     u5970:
  1089     0717                     l3696:
  1090                           
  1091                           ;main.c: 330:           mode2();
  1092     0717  120A  158A  2728  120A  118A  	fcall	_mode2
  1093     071C                     l3698:
  1094                           
  1095                           ;main.c: 332:       if (mode == 3){
  1096     071C  3003               	movlw	3
  1097     071D  1283               	bcf	3,5	;RP0=0, select bank0
  1098     071E  1303               	bcf	3,6	;RP1=0, select bank0
  1099     071F  065C               	xorwf	_mode,w
  1100     0720  045D               	iorwf	_mode+1,w
  1101     0721  1D03               	btfss	3,2
  1102     0722  2F24               	goto	u5981
  1103     0723  2F25               	goto	u5980
  1104     0724                     u5981:
  1105     0724  2F2A               	goto	l3702
  1106     0725                     u5980:
  1107     0725                     l3700:
  1108                           
  1109                           ;main.c: 333:           mode3();
  1110     0725  120A  158A  23CB  120A  118A  	fcall	_mode3
  1111     072A                     l3702:
  1112                           
  1113                           ;main.c: 336:       if(tone && flag_4 == 0){
  1114     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1115     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1116     072C  086A               	movf	_tone,w
  1117     072D  1903               	btfsc	3,2
  1118     072E  2F30               	goto	u5991
  1119     072F  2F31               	goto	u5990
  1120     0730                     u5991:
  1121     0730  2FD3               	goto	l3728
  1122     0731                     u5990:
  1123     0731                     l3704:
  1124     0731  0854               	movf	_flag_4,w
  1125     0732  0455               	iorwf	_flag_4+1,w
  1126     0733  1D03               	btfss	3,2
  1127     0734  2F36               	goto	u6001
  1128     0735  2F37               	goto	u6000
  1129     0736                     u6001:
  1130     0736  2FD3               	goto	l3728
  1131     0737                     u6000:
  1132     0737                     l3706:
  1133                           
  1134                           ;main.c: 337:         TMR1H = 0;
  1135     0737  018F               	clrf	15	;volatile
  1136                           
  1137                           ;main.c: 338:         TMR1L = 0;
  1138     0738  018E               	clrf	14	;volatile
  1139     0739                     l3708:
  1140                           
  1141                           ;main.c: 340:         RB3 = 1;
  1142     0739  1586               	bsf	6,3	;volatile
  1143     073A                     l3710:
  1144                           
  1145                           ;main.c: 341:         _delay((unsigned long)((10)*(10000000/4000000.0)));
  1146     073A  3007               	movlw	7
  1147     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1148     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1149     073D  00D3               	movwf	??_main
  1150     073E                     u6077:
  1151     073E  0BD3               	decfsz	??_main,f
  1152     073F  2F3E               	goto	u6077
  1153     0740  0000               	nop
  1154     0741                     l3712:
  1155                           
  1156                           ;main.c: 342:         RB3 = 0;
  1157     0741  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0742  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0743  1186               	bcf	6,3	;volatile
  1160     0744                     l392:	
  1161                           ;main.c: 344:         while(!RB4);
  1162                           
  1163     0744  1E06               	btfss	6,4	;volatile
  1164     0745  2F47               	goto	u6011
  1165     0746  2F48               	goto	u6010
  1166     0747                     u6011:
  1167     0747  2F44               	goto	l392
  1168     0748                     u6010:
  1169     0748                     l394:
  1170                           
  1171                           ;main.c: 345:         T1CONbits.TMR1ON = 1;
  1172     0748  1410               	bsf	16,0	;volatile
  1173     0749                     l395:	
  1174                           ;main.c: 346:         while(RB4);
  1175                           
  1176     0749  1A06               	btfsc	6,4	;volatile
  1177     074A  2F4C               	goto	u6021
  1178     074B  2F4D               	goto	u6020
  1179     074C                     u6021:
  1180     074C  2F49               	goto	l395
  1181     074D                     u6020:
  1182     074D                     l397:
  1183                           
  1184                           ;main.c: 347:         T1CONbits.TMR1ON = 0;
  1185     074D  1010               	bcf	16,0	;volatile
  1186     074E                     l3714:
  1187                           
  1188                           ;main.c: 349:         a = (TMR1L | (TMR1H<<8));
  1189     074E  080F               	movf	15,w	;volatile
  1190     074F  1683               	bsf	3,5	;RP0=1, select bank1
  1191     0750  1303               	bcf	3,6	;RP1=0, select bank1
  1192     0751  00E1               	movwf	(main@a+1)^(0+128)
  1193     0752  1283               	bcf	3,5	;RP0=0, select bank0
  1194     0753  1303               	bcf	3,6	;RP1=0, select bank0
  1195     0754  080E               	movf	14,w	;volatile
  1196     0755  1683               	bsf	3,5	;RP0=1, select bank1
  1197     0756  1303               	bcf	3,6	;RP1=0, select bank1
  1198     0757  00E0               	movwf	main@a^(0+128)
  1199     0758                     l3716:
  1200                           
  1201                           ;main.c: 350:         a = a/58.82;
  1202     0758  0860               	movf	main@a^(0+128),w
  1203     0759  00F3               	movwf	___xxtofl@val
  1204     075A  0861               	movf	(main@a+1)^(0+128),w
  1205     075B  00F4               	movwf	___xxtofl@val+1
  1206     075C  3000               	movlw	0
  1207     075D  1BF4               	btfsc	___xxtofl@val+1,7
  1208     075E  30FF               	movlw	255
  1209     075F  00F5               	movwf	___xxtofl@val+2
  1210     0760  00F6               	movwf	___xxtofl@val+3
  1211     0761  3001               	movlw	1
  1212     0762  120A  158A  2596  120A  118A  	fcall	___xxtofl
  1213     0767  0876               	movf	?___xxtofl+3,w
  1214     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1216     076A  00B1               	movwf	___fldiv@b+3
  1217     076B  0875               	movf	?___xxtofl+2,w
  1218     076C  00B0               	movwf	___fldiv@b+2
  1219     076D  0874               	movf	?___xxtofl+1,w
  1220     076E  00AF               	movwf	___fldiv@b+1
  1221     076F  0873               	movf	?___xxtofl,w
  1222     0770  00AE               	movwf	___fldiv@b
  1223     0771  3042               	movlw	66
  1224     0772  00AD               	movwf	___fldiv@a+3
  1225     0773  306B               	movlw	107
  1226     0774  00AC               	movwf	___fldiv@a+2
  1227     0775  3047               	movlw	71
  1228     0776  00AB               	movwf	___fldiv@a+1
  1229     0777  30AE               	movlw	174
  1230     0778  00AA               	movwf	___fldiv@a
  1231     0779  120A  118A  22F0  120A  118A  	fcall	___fldiv
  1232     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1233     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1234     0780  082D               	movf	?___fldiv+3,w
  1235     0781  00C7               	movwf	___fltol@f1+3
  1236     0782  082C               	movf	?___fldiv+2,w
  1237     0783  00C6               	movwf	___fltol@f1+2
  1238     0784  082B               	movf	?___fldiv+1,w
  1239     0785  00C5               	movwf	___fltol@f1+1
  1240     0786  082A               	movf	?___fldiv,w
  1241     0787  00C4               	movwf	___fltol@f1
  1242     0788  120A  158A  248F  120A  118A  	fcall	___fltol
  1243     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1244     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1245     078F  0845               	movf	?___fltol+1,w
  1246     0790  1683               	bsf	3,5	;RP0=1, select bank1
  1247     0791  1303               	bcf	3,6	;RP1=0, select bank1
  1248     0792  00E1               	movwf	(main@a+1)^(0+128)
  1249     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0795  0844               	movf	?___fltol,w
  1252     0796  1683               	bsf	3,5	;RP0=1, select bank1
  1253     0797  1303               	bcf	3,6	;RP1=0, select bank1
  1254     0798  00E0               	movwf	main@a^(0+128)
  1255     0799                     l3718:
  1256                           
  1257                           ;main.c: 351:         a = a + 1;
  1258     0799  0860               	movf	main@a^(0+128),w
  1259     079A  3E01               	addlw	1
  1260     079B  00E0               	movwf	main@a^(0+128)
  1261     079C  0861               	movf	(main@a+1)^(0+128),w
  1262     079D  1803               	skipnc
  1263     079E  3E01               	addlw	1
  1264     079F  3E00               	addlw	0
  1265     07A0  00E1               	movwf	(main@a+1)^(0+128)
  1266     07A1                     l3720:
  1267                           
  1268                           ;main.c: 352:         if(a>=2 && a<=400)
  1269     07A1  0861               	movf	(main@a+1)^(0+128),w
  1270     07A2  3A80               	xorlw	128
  1271     07A3  00FF               	movwf	btemp+1
  1272     07A4  3080               	movlw	128
  1273     07A5  027F               	subwf	btemp+1,w
  1274     07A6  1D03               	skipz
  1275     07A7  2FAA               	goto	u6035
  1276     07A8  3002               	movlw	2
  1277     07A9  0260               	subwf	main@a^(0+128),w
  1278     07AA                     u6035:
  1279     07AA  1C03               	skipc
  1280     07AB  2FAD               	goto	u6031
  1281     07AC  2FAE               	goto	u6030
  1282     07AD                     u6031:
  1283     07AD  2FD3               	goto	l3728
  1284     07AE                     u6030:
  1285     07AE                     l3722:
  1286     07AE  1683               	bsf	3,5	;RP0=1, select bank1
  1287     07AF  1303               	bcf	3,6	;RP1=0, select bank1
  1288     07B0  0861               	movf	(main@a+1)^(0+128),w
  1289     07B1  3A80               	xorlw	128
  1290     07B2  00FF               	movwf	btemp+1
  1291     07B3  3081               	movlw	129
  1292     07B4  027F               	subwf	btemp+1,w
  1293     07B5  1D03               	skipz
  1294     07B6  2FB9               	goto	u6045
  1295     07B7  3091               	movlw	145
  1296     07B8  0260               	subwf	main@a^(0+128),w
  1297     07B9                     u6045:
  1298     07B9  1803               	skipnc
  1299     07BA  2FBC               	goto	u6041
  1300     07BB  2FBD               	goto	u6040
  1301     07BC                     u6041:
  1302     07BC  2FD3               	goto	l3728
  1303     07BD                     u6040:
  1304     07BD                     l3724:
  1305                           
  1306                           ;main.c: 353:         {;main.c: 354:             if(a < 200){
  1307     07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1308     07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1309     07BF  0861               	movf	(main@a+1)^(0+128),w
  1310     07C0  3A80               	xorlw	128
  1311     07C1  00FF               	movwf	btemp+1
  1312     07C2  3080               	movlw	128
  1313     07C3  027F               	subwf	btemp+1,w
  1314     07C4  1D03               	skipz
  1315     07C5  2FC8               	goto	u6055
  1316     07C6  30C8               	movlw	200
  1317     07C7  0260               	subwf	main@a^(0+128),w
  1318     07C8                     u6055:
  1319     07C8  1803               	skipnc
  1320     07C9  2FCB               	goto	u6051
  1321     07CA  2FCC               	goto	u6050
  1322     07CB                     u6051:
  1323     07CB  2FD0               	goto	l399
  1324     07CC                     u6050:
  1325     07CC                     l3726:
  1326                           
  1327                           ;main.c: 355:                 RC1 = 1;
  1328     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1329     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1330     07CE  1487               	bsf	7,1	;volatile
  1331                           
  1332                           ;main.c: 356:             }else{
  1333     07CF  2FD3               	goto	l3728
  1334     07D0                     l399:
  1335                           
  1336                           ;main.c: 357:                 RC1 = 0;
  1337     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1338     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1339     07D2  1087               	bcf	7,1	;volatile
  1340     07D3                     l3728:
  1341                           
  1342                           ;main.c: 362:       if (flag_update >= 1000){
  1343     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1344     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1345     07D5  0857               	movf	_flag_update+1,w
  1346     07D6  3A80               	xorlw	128
  1347     07D7  00FF               	movwf	btemp+1
  1348     07D8  3083               	movlw	131
  1349     07D9  027F               	subwf	btemp+1,w
  1350     07DA  1D03               	skipz
  1351     07DB  2FDE               	goto	u6065
  1352     07DC  30E8               	movlw	232
  1353     07DD  0256               	subwf	_flag_update,w
  1354     07DE                     u6065:
  1355     07DE  1C03               	skipc
  1356     07DF  2FE1               	goto	u6061
  1357     07E0  2FE2               	goto	u6060
  1358     07E1                     u6061:
  1359     07E1  2EA0               	goto	l3674
  1360     07E2                     u6060:
  1361     07E2                     l3730:
  1362                           
  1363                           ;main.c: 363:           flag_update = 0;
  1364     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1365     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1366     07E4  01D6               	clrf	_flag_update
  1367     07E5  01D7               	clrf	_flag_update+1
  1368     07E6                     l3732:
  1369                           
  1370                           ;main.c: 364:           update();
  1371     07E6  120A  118A  2046  120A  118A  	fcall	_update
  1372     07EB  2EA0               	goto	l3674
  1373     07EC  120A  118A  280E   	ljmp	start
  1374     07EF                     __end_of_main:
  1375                           
  1376                           	psect	text1
  1377     0046                     __ptext1:	
  1378 ;; *************** function _update *****************
  1379 ;; Defined at:
  1380 ;;		line 127 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0      24       0       0       0
  1396 ;;      Temps:          0       0       0       0       0
  1397 ;;      Totals:         0      24       0       0       0
  1398 ;;Total ram usage:       24 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 4
  1401 ;; This function calls:
  1402 ;;		_LCD_Write
  1403 ;;		_LCD_putrs
  1404 ;;		_sprintf
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410     0046                     _update:	
  1411                           ;psect for function _update
  1412                           
  1413     0046                     l3186:	
  1414                           ;incstack = 0
  1415                           ; Regs used in _update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1416                           
  1417                           
  1418                           ;main.c: 128:     if (a_sek == sek & a_min == min & a_tim == tim & alarm == 1){
  1419     0046  1283               	bcf	3,5	;RP0=0, select bank0
  1420     0047  1303               	bcf	3,6	;RP1=0, select bank0
  1421     0048  0867               	movf	_sek+1,w
  1422     0049  066E               	xorwf	_a_sek+1,w
  1423     004A  1D03               	skipz
  1424     004B  284E               	goto	u4645
  1425     004C  0866               	movf	_sek,w
  1426     004D  066D               	xorwf	_a_sek,w
  1427     004E                     u4645:
  1428     004E  1D03               	skipz
  1429     004F  2851               	goto	u4641
  1430     0050  2852               	goto	u4640
  1431     0051                     u4641:
  1432     0051  286F               	goto	l3196
  1433     0052                     u4640:
  1434     0052                     l3188:
  1435     0052  0865               	movf	_min+1,w
  1436     0053  0661               	xorwf	_a_min+1,w
  1437     0054  1D03               	skipz
  1438     0055  2858               	goto	u4655
  1439     0056  0864               	movf	_min,w
  1440     0057  0660               	xorwf	_a_min,w
  1441     0058                     u4655:
  1442     0058  1D03               	skipz
  1443     0059  285B               	goto	u4651
  1444     005A  285C               	goto	u4650
  1445     005B                     u4651:
  1446     005B  286F               	goto	l3196
  1447     005C                     u4650:
  1448     005C                     l3190:
  1449     005C  0863               	movf	_tim+1,w
  1450     005D  065F               	xorwf	_a_tim+1,w
  1451     005E  1D03               	skipz
  1452     005F  2862               	goto	u4665
  1453     0060  0862               	movf	_tim,w
  1454     0061  065E               	xorwf	_a_tim,w
  1455     0062                     u4665:
  1456     0062  1D03               	skipz
  1457     0063  2865               	goto	u4661
  1458     0064  2866               	goto	u4660
  1459     0065                     u4661:
  1460     0065  286F               	goto	l3196
  1461     0066                     u4660:
  1462     0066                     l3192:
  1463     0066  036F               	decf	_alarm,w
  1464     0067  1D03               	btfss	3,2
  1465     0068  286A               	goto	u4671
  1466     0069  286B               	goto	u4670
  1467     006A                     u4671:
  1468     006A  286F               	goto	l3196
  1469     006B                     u4670:
  1470     006B                     l3194:
  1471                           
  1472                           ;main.c: 129:         mode = 3;
  1473     006B  3003               	movlw	3
  1474     006C  00DC               	movwf	_mode
  1475     006D  3000               	movlw	0
  1476     006E  00DD               	movwf	_mode+1
  1477     006F                     l3196:
  1478                           
  1479                           ;main.c: 131:     sek = ((((60) < ((((sek) > (0)) ? (sek) : (0)))) ? (60) : ((((sek) > (
      +                          0)) ? (sek) : (0)))));
  1480     006F  0867               	movf	_sek+1,w
  1481     0070  3A80               	xorlw	128
  1482     0071  00FF               	movwf	btemp+1
  1483     0072  3080               	movlw	128
  1484     0073  027F               	subwf	btemp+1,w
  1485     0074  1D03               	skipz
  1486     0075  2878               	goto	u4685
  1487     0076  3001               	movlw	1
  1488     0077  0266               	subwf	_sek,w
  1489     0078                     u4685:
  1490     0078  1803               	skipnc
  1491     0079  287B               	goto	u4681
  1492     007A  287C               	goto	u4680
  1493     007B                     u4681:
  1494     007B  2881               	goto	l3200
  1495     007C                     u4680:
  1496     007C                     l3198:
  1497     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1498     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1499     007E  01BB               	clrf	_update$141
  1500     007F  01BC               	clrf	_update$141+1
  1501     0080  2887               	goto	l3202
  1502     0081                     l3200:
  1503     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1504     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1505     0083  0867               	movf	_sek+1,w
  1506     0084  00BC               	movwf	_update$141+1
  1507     0085  0866               	movf	_sek,w
  1508     0086  00BB               	movwf	_update$141
  1509     0087                     l3202:
  1510     0087  083C               	movf	_update$141+1,w
  1511     0088  3A80               	xorlw	128
  1512     0089  00FF               	movwf	btemp+1
  1513     008A  3080               	movlw	128
  1514     008B  027F               	subwf	btemp+1,w
  1515     008C  1D03               	skipz
  1516     008D  2890               	goto	u4695
  1517     008E  303D               	movlw	61
  1518     008F  023B               	subwf	_update$141,w
  1519     0090                     u4695:
  1520     0090  1803               	skipnc
  1521     0091  2893               	goto	u4691
  1522     0092  2894               	goto	u4690
  1523     0093                     u4691:
  1524     0093  28B3               	goto	l3210
  1525     0094                     u4690:
  1526     0094                     l3204:
  1527     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1528     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1529     0096  0867               	movf	_sek+1,w
  1530     0097  3A80               	xorlw	128
  1531     0098  00FF               	movwf	btemp+1
  1532     0099  3080               	movlw	128
  1533     009A  027F               	subwf	btemp+1,w
  1534     009B  1D03               	skipz
  1535     009C  289F               	goto	u4705
  1536     009D  3001               	movlw	1
  1537     009E  0266               	subwf	_sek,w
  1538     009F                     u4705:
  1539     009F  1803               	skipnc
  1540     00A0  28A2               	goto	u4701
  1541     00A1  28A3               	goto	u4700
  1542     00A2                     u4701:
  1543     00A2  28A8               	goto	l3208
  1544     00A3                     u4700:
  1545     00A3                     l3206:
  1546     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1547     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1548     00A5  01BD               	clrf	_update$142
  1549     00A6  01BE               	clrf	_update$142+1
  1550     00A7  28AE               	goto	l177
  1551     00A8                     l3208:
  1552     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1553     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1554     00AA  0867               	movf	_sek+1,w
  1555     00AB  00BE               	movwf	_update$142+1
  1556     00AC  0866               	movf	_sek,w
  1557     00AD  00BD               	movwf	_update$142
  1558     00AE                     l177:
  1559     00AE  083E               	movf	_update$142+1,w
  1560     00AF  00E7               	movwf	_sek+1
  1561     00B0  083D               	movf	_update$142,w
  1562     00B1  00E6               	movwf	_sek
  1563     00B2  28B9               	goto	l3212
  1564     00B3                     l3210:
  1565     00B3  303C               	movlw	60
  1566     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1567     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1568     00B6  00E6               	movwf	_sek
  1569     00B7  3000               	movlw	0
  1570     00B8  00E7               	movwf	_sek+1
  1571     00B9                     l3212:
  1572                           
  1573                           ;main.c: 132:     min = ((((60) < ((((min) > (0)) ? (min) : (0)))) ? (60) : ((((min) > (
      +                          0)) ? (min) : (0)))));
  1574     00B9  0865               	movf	_min+1,w
  1575     00BA  3A80               	xorlw	128
  1576     00BB  00FF               	movwf	btemp+1
  1577     00BC  3080               	movlw	128
  1578     00BD  027F               	subwf	btemp+1,w
  1579     00BE  1D03               	skipz
  1580     00BF  28C2               	goto	u4715
  1581     00C0  3001               	movlw	1
  1582     00C1  0264               	subwf	_min,w
  1583     00C2                     u4715:
  1584     00C2  1803               	skipnc
  1585     00C3  28C5               	goto	u4711
  1586     00C4  28C6               	goto	u4710
  1587     00C5                     u4711:
  1588     00C5  28CB               	goto	l3216
  1589     00C6                     u4710:
  1590     00C6                     l3214:
  1591     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1592     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1593     00C8  01BF               	clrf	_update$143
  1594     00C9  01C0               	clrf	_update$143+1
  1595     00CA  28D1               	goto	l3218
  1596     00CB                     l3216:
  1597     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1598     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1599     00CD  0865               	movf	_min+1,w
  1600     00CE  00C0               	movwf	_update$143+1
  1601     00CF  0864               	movf	_min,w
  1602     00D0  00BF               	movwf	_update$143
  1603     00D1                     l3218:
  1604     00D1  0840               	movf	_update$143+1,w
  1605     00D2  3A80               	xorlw	128
  1606     00D3  00FF               	movwf	btemp+1
  1607     00D4  3080               	movlw	128
  1608     00D5  027F               	subwf	btemp+1,w
  1609     00D6  1D03               	skipz
  1610     00D7  28DA               	goto	u4725
  1611     00D8  303D               	movlw	61
  1612     00D9  023F               	subwf	_update$143,w
  1613     00DA                     u4725:
  1614     00DA  1803               	skipnc
  1615     00DB  28DD               	goto	u4721
  1616     00DC  28DE               	goto	u4720
  1617     00DD                     u4721:
  1618     00DD  28FD               	goto	l3226
  1619     00DE                     u4720:
  1620     00DE                     l3220:
  1621     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1622     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1623     00E0  0865               	movf	_min+1,w
  1624     00E1  3A80               	xorlw	128
  1625     00E2  00FF               	movwf	btemp+1
  1626     00E3  3080               	movlw	128
  1627     00E4  027F               	subwf	btemp+1,w
  1628     00E5  1D03               	skipz
  1629     00E6  28E9               	goto	u4735
  1630     00E7  3001               	movlw	1
  1631     00E8  0264               	subwf	_min,w
  1632     00E9                     u4735:
  1633     00E9  1803               	skipnc
  1634     00EA  28EC               	goto	u4731
  1635     00EB  28ED               	goto	u4730
  1636     00EC                     u4731:
  1637     00EC  28F2               	goto	l3224
  1638     00ED                     u4730:
  1639     00ED                     l3222:
  1640     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1641     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1642     00EF  01C1               	clrf	_update$144
  1643     00F0  01C2               	clrf	_update$144+1
  1644     00F1  28F8               	goto	l189
  1645     00F2                     l3224:
  1646     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1647     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1648     00F4  0865               	movf	_min+1,w
  1649     00F5  00C2               	movwf	_update$144+1
  1650     00F6  0864               	movf	_min,w
  1651     00F7  00C1               	movwf	_update$144
  1652     00F8                     l189:
  1653     00F8  0842               	movf	_update$144+1,w
  1654     00F9  00E5               	movwf	_min+1
  1655     00FA  0841               	movf	_update$144,w
  1656     00FB  00E4               	movwf	_min
  1657     00FC  2903               	goto	l3228
  1658     00FD                     l3226:
  1659     00FD  303C               	movlw	60
  1660     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1661     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1662     0100  00E4               	movwf	_min
  1663     0101  3000               	movlw	0
  1664     0102  00E5               	movwf	_min+1
  1665     0103                     l3228:
  1666                           
  1667                           ;main.c: 133:     tim = ((((24) < ((((tim) > (0)) ? (tim) : (0)))) ? (24) : ((((tim) > (
      +                          0)) ? (tim) : (0)))));
  1668     0103  0863               	movf	_tim+1,w
  1669     0104  3A80               	xorlw	128
  1670     0105  00FF               	movwf	btemp+1
  1671     0106  3080               	movlw	128
  1672     0107  027F               	subwf	btemp+1,w
  1673     0108  1D03               	skipz
  1674     0109  290C               	goto	u4745
  1675     010A  3001               	movlw	1
  1676     010B  0262               	subwf	_tim,w
  1677     010C                     u4745:
  1678     010C  1803               	skipnc
  1679     010D  290F               	goto	u4741
  1680     010E  2910               	goto	u4740
  1681     010F                     u4741:
  1682     010F  2915               	goto	l3232
  1683     0110                     u4740:
  1684     0110                     l3230:
  1685     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1686     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1687     0112  01C3               	clrf	_update$145
  1688     0113  01C4               	clrf	_update$145+1
  1689     0114  291B               	goto	l3234
  1690     0115                     l3232:
  1691     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1692     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1693     0117  0863               	movf	_tim+1,w
  1694     0118  00C4               	movwf	_update$145+1
  1695     0119  0862               	movf	_tim,w
  1696     011A  00C3               	movwf	_update$145
  1697     011B                     l3234:
  1698     011B  0844               	movf	_update$145+1,w
  1699     011C  3A80               	xorlw	128
  1700     011D  00FF               	movwf	btemp+1
  1701     011E  3080               	movlw	128
  1702     011F  027F               	subwf	btemp+1,w
  1703     0120  1D03               	skipz
  1704     0121  2924               	goto	u4755
  1705     0122  3019               	movlw	25
  1706     0123  0243               	subwf	_update$145,w
  1707     0124                     u4755:
  1708     0124  1803               	skipnc
  1709     0125  2927               	goto	u4751
  1710     0126  2928               	goto	u4750
  1711     0127                     u4751:
  1712     0127  2947               	goto	l3242
  1713     0128                     u4750:
  1714     0128                     l3236:
  1715     0128  1283               	bcf	3,5	;RP0=0, select bank0
  1716     0129  1303               	bcf	3,6	;RP1=0, select bank0
  1717     012A  0863               	movf	_tim+1,w
  1718     012B  3A80               	xorlw	128
  1719     012C  00FF               	movwf	btemp+1
  1720     012D  3080               	movlw	128
  1721     012E  027F               	subwf	btemp+1,w
  1722     012F  1D03               	skipz
  1723     0130  2933               	goto	u4765
  1724     0131  3001               	movlw	1
  1725     0132  0262               	subwf	_tim,w
  1726     0133                     u4765:
  1727     0133  1803               	skipnc
  1728     0134  2936               	goto	u4761
  1729     0135  2937               	goto	u4760
  1730     0136                     u4761:
  1731     0136  293C               	goto	l3240
  1732     0137                     u4760:
  1733     0137                     l3238:
  1734     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1735     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0139  01C5               	clrf	_update$146
  1737     013A  01C6               	clrf	_update$146+1
  1738     013B  2942               	goto	l201
  1739     013C                     l3240:
  1740     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1741     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1742     013E  0863               	movf	_tim+1,w
  1743     013F  00C6               	movwf	_update$146+1
  1744     0140  0862               	movf	_tim,w
  1745     0141  00C5               	movwf	_update$146
  1746     0142                     l201:
  1747     0142  0846               	movf	_update$146+1,w
  1748     0143  00E3               	movwf	_tim+1
  1749     0144  0845               	movf	_update$146,w
  1750     0145  00E2               	movwf	_tim
  1751     0146  294D               	goto	l3244
  1752     0147                     l3242:
  1753     0147  3018               	movlw	24
  1754     0148  1283               	bcf	3,5	;RP0=0, select bank0
  1755     0149  1303               	bcf	3,6	;RP1=0, select bank0
  1756     014A  00E2               	movwf	_tim
  1757     014B  3000               	movlw	0
  1758     014C  00E3               	movwf	_tim+1
  1759     014D                     l3244:
  1760                           
  1761                           ;main.c: 134:     a_sek = ((((60) < ((((a_sek) > (0)) ? (a_sek) : (0)))) ? (60) : ((((a_
      +                          sek) > (0)) ? (a_sek) : (0)))));
  1762     014D  086E               	movf	_a_sek+1,w
  1763     014E  3A80               	xorlw	128
  1764     014F  00FF               	movwf	btemp+1
  1765     0150  3080               	movlw	128
  1766     0151  027F               	subwf	btemp+1,w
  1767     0152  1D03               	skipz
  1768     0153  2956               	goto	u4775
  1769     0154  3001               	movlw	1
  1770     0155  026D               	subwf	_a_sek,w
  1771     0156                     u4775:
  1772     0156  1803               	skipnc
  1773     0157  2959               	goto	u4771
  1774     0158  295A               	goto	u4770
  1775     0159                     u4771:
  1776     0159  295F               	goto	l3248
  1777     015A                     u4770:
  1778     015A                     l3246:
  1779     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1780     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1781     015C  01C7               	clrf	_update$147
  1782     015D  01C8               	clrf	_update$147+1
  1783     015E  2965               	goto	l3250
  1784     015F                     l3248:
  1785     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1786     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1787     0161  086E               	movf	_a_sek+1,w
  1788     0162  00C8               	movwf	_update$147+1
  1789     0163  086D               	movf	_a_sek,w
  1790     0164  00C7               	movwf	_update$147
  1791     0165                     l3250:
  1792     0165  0848               	movf	_update$147+1,w
  1793     0166  3A80               	xorlw	128
  1794     0167  00FF               	movwf	btemp+1
  1795     0168  3080               	movlw	128
  1796     0169  027F               	subwf	btemp+1,w
  1797     016A  1D03               	skipz
  1798     016B  296E               	goto	u4785
  1799     016C  303D               	movlw	61
  1800     016D  0247               	subwf	_update$147,w
  1801     016E                     u4785:
  1802     016E  1803               	skipnc
  1803     016F  2971               	goto	u4781
  1804     0170  2972               	goto	u4780
  1805     0171                     u4781:
  1806     0171  2991               	goto	l3258
  1807     0172                     u4780:
  1808     0172                     l3252:
  1809     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1810     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1811     0174  086E               	movf	_a_sek+1,w
  1812     0175  3A80               	xorlw	128
  1813     0176  00FF               	movwf	btemp+1
  1814     0177  3080               	movlw	128
  1815     0178  027F               	subwf	btemp+1,w
  1816     0179  1D03               	skipz
  1817     017A  297D               	goto	u4795
  1818     017B  3001               	movlw	1
  1819     017C  026D               	subwf	_a_sek,w
  1820     017D                     u4795:
  1821     017D  1803               	skipnc
  1822     017E  2980               	goto	u4791
  1823     017F  2981               	goto	u4790
  1824     0180                     u4791:
  1825     0180  2986               	goto	l3256
  1826     0181                     u4790:
  1827     0181                     l3254:
  1828     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1829     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1830     0183  01C9               	clrf	_update$148
  1831     0184  01CA               	clrf	_update$148+1
  1832     0185  298C               	goto	l213
  1833     0186                     l3256:
  1834     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1835     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1836     0188  086E               	movf	_a_sek+1,w
  1837     0189  00CA               	movwf	_update$148+1
  1838     018A  086D               	movf	_a_sek,w
  1839     018B  00C9               	movwf	_update$148
  1840     018C                     l213:
  1841     018C  084A               	movf	_update$148+1,w
  1842     018D  00EE               	movwf	_a_sek+1
  1843     018E  0849               	movf	_update$148,w
  1844     018F  00ED               	movwf	_a_sek
  1845     0190  2997               	goto	l3260
  1846     0191                     l3258:
  1847     0191  303C               	movlw	60
  1848     0192  1283               	bcf	3,5	;RP0=0, select bank0
  1849     0193  1303               	bcf	3,6	;RP1=0, select bank0
  1850     0194  00ED               	movwf	_a_sek
  1851     0195  3000               	movlw	0
  1852     0196  00EE               	movwf	_a_sek+1
  1853     0197                     l3260:
  1854                           
  1855                           ;main.c: 135:     a_min = ((((60) < ((((a_min) > (0)) ? (a_min) : (0)))) ? (60) : ((((a_
      +                          min) > (0)) ? (a_min) : (0)))));
  1856     0197  0861               	movf	_a_min+1,w
  1857     0198  3A80               	xorlw	128
  1858     0199  00FF               	movwf	btemp+1
  1859     019A  3080               	movlw	128
  1860     019B  027F               	subwf	btemp+1,w
  1861     019C  1D03               	skipz
  1862     019D  29A0               	goto	u4805
  1863     019E  3001               	movlw	1
  1864     019F  0260               	subwf	_a_min,w
  1865     01A0                     u4805:
  1866     01A0  1803               	skipnc
  1867     01A1  29A3               	goto	u4801
  1868     01A2  29A4               	goto	u4800
  1869     01A3                     u4801:
  1870     01A3  29A9               	goto	l3264
  1871     01A4                     u4800:
  1872     01A4                     l3262:
  1873     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1874     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1875     01A6  01CB               	clrf	_update$149
  1876     01A7  01CC               	clrf	_update$149+1
  1877     01A8  29AF               	goto	l3266
  1878     01A9                     l3264:
  1879     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1880     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1881     01AB  0861               	movf	_a_min+1,w
  1882     01AC  00CC               	movwf	_update$149+1
  1883     01AD  0860               	movf	_a_min,w
  1884     01AE  00CB               	movwf	_update$149
  1885     01AF                     l3266:
  1886     01AF  084C               	movf	_update$149+1,w
  1887     01B0  3A80               	xorlw	128
  1888     01B1  00FF               	movwf	btemp+1
  1889     01B2  3080               	movlw	128
  1890     01B3  027F               	subwf	btemp+1,w
  1891     01B4  1D03               	skipz
  1892     01B5  29B8               	goto	u4815
  1893     01B6  303D               	movlw	61
  1894     01B7  024B               	subwf	_update$149,w
  1895     01B8                     u4815:
  1896     01B8  1803               	skipnc
  1897     01B9  29BB               	goto	u4811
  1898     01BA  29BC               	goto	u4810
  1899     01BB                     u4811:
  1900     01BB  29DB               	goto	l3274
  1901     01BC                     u4810:
  1902     01BC                     l3268:
  1903     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1904     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1905     01BE  0861               	movf	_a_min+1,w
  1906     01BF  3A80               	xorlw	128
  1907     01C0  00FF               	movwf	btemp+1
  1908     01C1  3080               	movlw	128
  1909     01C2  027F               	subwf	btemp+1,w
  1910     01C3  1D03               	skipz
  1911     01C4  29C7               	goto	u4825
  1912     01C5  3001               	movlw	1
  1913     01C6  0260               	subwf	_a_min,w
  1914     01C7                     u4825:
  1915     01C7  1803               	skipnc
  1916     01C8  29CA               	goto	u4821
  1917     01C9  29CB               	goto	u4820
  1918     01CA                     u4821:
  1919     01CA  29D0               	goto	l3272
  1920     01CB                     u4820:
  1921     01CB                     l3270:
  1922     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1923     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1924     01CD  01CD               	clrf	_update$150
  1925     01CE  01CE               	clrf	_update$150+1
  1926     01CF  29D6               	goto	l225
  1927     01D0                     l3272:
  1928     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1929     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1930     01D2  0861               	movf	_a_min+1,w
  1931     01D3  00CE               	movwf	_update$150+1
  1932     01D4  0860               	movf	_a_min,w
  1933     01D5  00CD               	movwf	_update$150
  1934     01D6                     l225:
  1935     01D6  084E               	movf	_update$150+1,w
  1936     01D7  00E1               	movwf	_a_min+1
  1937     01D8  084D               	movf	_update$150,w
  1938     01D9  00E0               	movwf	_a_min
  1939     01DA  29E1               	goto	l3276
  1940     01DB                     l3274:
  1941     01DB  303C               	movlw	60
  1942     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1943     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1944     01DE  00E0               	movwf	_a_min
  1945     01DF  3000               	movlw	0
  1946     01E0  00E1               	movwf	_a_min+1
  1947     01E1                     l3276:
  1948                           
  1949                           ;main.c: 136:     a_tim = ((((24) < ((((a_tim) > (0)) ? (a_tim) : (0)))) ? (24) : ((((a_
      +                          tim) > (0)) ? (a_tim) : (0)))));
  1950     01E1  085F               	movf	_a_tim+1,w
  1951     01E2  3A80               	xorlw	128
  1952     01E3  00FF               	movwf	btemp+1
  1953     01E4  3080               	movlw	128
  1954     01E5  027F               	subwf	btemp+1,w
  1955     01E6  1D03               	skipz
  1956     01E7  29EA               	goto	u4835
  1957     01E8  3001               	movlw	1
  1958     01E9  025E               	subwf	_a_tim,w
  1959     01EA                     u4835:
  1960     01EA  1803               	skipnc
  1961     01EB  29ED               	goto	u4831
  1962     01EC  29EE               	goto	u4830
  1963     01ED                     u4831:
  1964     01ED  29F3               	goto	l3280
  1965     01EE                     u4830:
  1966     01EE                     l3278:
  1967     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1968     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1969     01F0  01CF               	clrf	_update$151
  1970     01F1  01D0               	clrf	_update$151+1
  1971     01F2  29F9               	goto	l3282
  1972     01F3                     l3280:
  1973     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1974     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1975     01F5  085F               	movf	_a_tim+1,w
  1976     01F6  00D0               	movwf	_update$151+1
  1977     01F7  085E               	movf	_a_tim,w
  1978     01F8  00CF               	movwf	_update$151
  1979     01F9                     l3282:
  1980     01F9  0850               	movf	_update$151+1,w
  1981     01FA  3A80               	xorlw	128
  1982     01FB  00FF               	movwf	btemp+1
  1983     01FC  3080               	movlw	128
  1984     01FD  027F               	subwf	btemp+1,w
  1985     01FE  1D03               	skipz
  1986     01FF  2A02               	goto	u4845
  1987     0200  3019               	movlw	25
  1988     0201  024F               	subwf	_update$151,w
  1989     0202                     u4845:
  1990     0202  1803               	skipnc
  1991     0203  2A05               	goto	u4841
  1992     0204  2A06               	goto	u4840
  1993     0205                     u4841:
  1994     0205  2A25               	goto	l3290
  1995     0206                     u4840:
  1996     0206                     l3284:
  1997     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0208  085F               	movf	_a_tim+1,w
  2000     0209  3A80               	xorlw	128
  2001     020A  00FF               	movwf	btemp+1
  2002     020B  3080               	movlw	128
  2003     020C  027F               	subwf	btemp+1,w
  2004     020D  1D03               	skipz
  2005     020E  2A11               	goto	u4855
  2006     020F  3001               	movlw	1
  2007     0210  025E               	subwf	_a_tim,w
  2008     0211                     u4855:
  2009     0211  1803               	skipnc
  2010     0212  2A14               	goto	u4851
  2011     0213  2A15               	goto	u4850
  2012     0214                     u4851:
  2013     0214  2A1A               	goto	l3288
  2014     0215                     u4850:
  2015     0215                     l3286:
  2016     0215  1283               	bcf	3,5	;RP0=0, select bank0
  2017     0216  1303               	bcf	3,6	;RP1=0, select bank0
  2018     0217  01D1               	clrf	_update$152
  2019     0218  01D2               	clrf	_update$152+1
  2020     0219  2A20               	goto	l237
  2021     021A                     l3288:
  2022     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2023     021B  1303               	bcf	3,6	;RP1=0, select bank0
  2024     021C  085F               	movf	_a_tim+1,w
  2025     021D  00D2               	movwf	_update$152+1
  2026     021E  085E               	movf	_a_tim,w
  2027     021F  00D1               	movwf	_update$152
  2028     0220                     l237:
  2029     0220  0852               	movf	_update$152+1,w
  2030     0221  00DF               	movwf	_a_tim+1
  2031     0222  0851               	movf	_update$152,w
  2032     0223  00DE               	movwf	_a_tim
  2033     0224  2A2B               	goto	l3292
  2034     0225                     l3290:
  2035     0225  3018               	movlw	24
  2036     0226  1283               	bcf	3,5	;RP0=0, select bank0
  2037     0227  1303               	bcf	3,6	;RP1=0, select bank0
  2038     0228  00DE               	movwf	_a_tim
  2039     0229  3000               	movlw	0
  2040     022A  00DF               	movwf	_a_tim+1
  2041     022B                     l3292:
  2042     022B  3000               	movlw	0
  2043     022C  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2044     0231                     l3294:
  2045     0231  3001               	movlw	1
  2046     0232  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2047     0237                     l3296:
  2048     0237  3008               	movlw	8
  2049     0238  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2050     023D                     l3298:
  2051     023D  3000               	movlw	0
  2052     023E  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2053     0243                     l3306:
  2054                           
  2055                           ;main.c: 140:     LCD_putrs("kl:");
  2056     0243  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2057     0244  00F6               	movwf	LCD_putrs@a
  2058     0245  3080               	movlw	128
  2059     0246  00F7               	movwf	LCD_putrs@a+1
  2060     0247  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2061     024C                     l3308:
  2062     024C  3008               	movlw	8
  2063     024D  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2064     0252                     l3310:
  2065     0252  3004               	movlw	4
  2066     0253  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2067     0258                     l3318:
  2068                           
  2069                           ;main.c: 142:     sprintf(str, "%02d:%02d:%02d", tim, min, sek);
  2070     0258  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2071     0259  1283               	bcf	3,5	;RP0=0, select bank0
  2072     025A  1303               	bcf	3,6	;RP1=0, select bank0
  2073     025B  00A8               	movwf	sprintf@f
  2074     025C  0863               	movf	_tim+1,w
  2075     025D  00AA               	movwf	?_sprintf+2
  2076     025E  0862               	movf	_tim,w
  2077     025F  00A9               	movwf	?_sprintf+1
  2078     0260  0865               	movf	_min+1,w
  2079     0261  00AC               	movwf	?_sprintf+4
  2080     0262  0864               	movf	_min,w
  2081     0263  00AB               	movwf	?_sprintf+3
  2082     0264  0867               	movf	_sek+1,w
  2083     0265  00AE               	movwf	?_sprintf+6
  2084     0266  0866               	movf	_sek,w
  2085     0267  00AD               	movwf	?_sprintf+5
  2086     0268  30A0               	movlw	(low (_str| 0))& (0+255)
  2087     0269  120A  118A  24C3  120A  118A  	fcall	_sprintf
  2088     026E                     l3320:
  2089                           
  2090                           ;main.c: 143:     LCD_putrs(str);
  2091     026E  30A0               	movlw	(low (_str| 0))& (0+255)
  2092     026F  00F6               	movwf	LCD_putrs@a
  2093     0270  3000               	movlw	0
  2094     0271  00F7               	movwf	LCD_putrs@a+1
  2095     0272  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2096     0277                     l3324:
  2097     0277  300C               	movlw	12
  2098     0278  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2099     027D  3000               	movlw	0
  2100     027E  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2101     0283                     l3330:
  2102                           
  2103                           ;main.c: 145:     LCD_putrs("al:");
  2104     0283  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2105     0284  00F6               	movwf	LCD_putrs@a
  2106     0285  3080               	movlw	128
  2107     0286  00F7               	movwf	LCD_putrs@a+1
  2108     0287  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2109     028C                     l3334:
  2110     028C  300C               	movlw	12
  2111     028D  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2112     0292  3004               	movlw	4
  2113     0293  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2114     0298                     l3340:
  2115                           
  2116                           ;main.c: 147:     sprintf(a_str, "%02d:%02d:%02d", a_tim, a_min, a_sek);
  2117     0298  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2118     0299  1283               	bcf	3,5	;RP0=0, select bank0
  2119     029A  1303               	bcf	3,6	;RP1=0, select bank0
  2120     029B  00A8               	movwf	sprintf@f
  2121     029C  085F               	movf	_a_tim+1,w
  2122     029D  00AA               	movwf	?_sprintf+2
  2123     029E  085E               	movf	_a_tim,w
  2124     029F  00A9               	movwf	?_sprintf+1
  2125     02A0  0861               	movf	_a_min+1,w
  2126     02A1  00AC               	movwf	?_sprintf+4
  2127     02A2  0860               	movf	_a_min,w
  2128     02A3  00AB               	movwf	?_sprintf+3
  2129     02A4  086E               	movf	_a_sek+1,w
  2130     02A5  00AE               	movwf	?_sprintf+6
  2131     02A6  086D               	movf	_a_sek,w
  2132     02A7  00AD               	movwf	?_sprintf+5
  2133     02A8  30C0               	movlw	(low (_a_str| 0))& (0+255)
  2134     02A9  120A  118A  24C3  120A  118A  	fcall	_sprintf
  2135     02AE                     l3342:
  2136                           
  2137                           ;main.c: 148:     LCD_putrs(a_str);
  2138     02AE  30C0               	movlw	(low (_a_str| 0))& (0+255)
  2139     02AF  00F6               	movwf	LCD_putrs@a
  2140     02B0  3000               	movlw	0
  2141     02B1  00F7               	movwf	LCD_putrs@a+1
  2142     02B2  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2143     02B7                     l3344:
  2144                           
  2145                           ;main.c: 149:     if (tone == 1){
  2146     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2147     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2148     02B9  036A               	decf	_tone,w
  2149     02BA  1D03               	btfss	3,2
  2150     02BB  2ABD               	goto	u4861
  2151     02BC  2ABE               	goto	u4860
  2152     02BD                     u4861:
  2153     02BD  2AD3               	goto	l3356
  2154     02BE                     u4860:
  2155     02BE                     l3346:
  2156     02BE  3008               	movlw	8
  2157     02BF  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2158     02C4  300F               	movlw	15
  2159     02C5  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2160     02CA                     l3354:
  2161                           
  2162                           ;main.c: 151:         LCD_putrs("!");
  2163     02CA  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2164     02CB  00F6               	movwf	LCD_putrs@a
  2165     02CC  3080               	movlw	128
  2166     02CD  00F7               	movwf	LCD_putrs@a+1
  2167     02CE  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2168     02D3                     l3356:
  2169                           
  2170                           ;main.c: 153:     if (alarm == 1){
  2171     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2172     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2173     02D5  036F               	decf	_alarm,w
  2174     02D6  1D03               	btfss	3,2
  2175     02D7  2AD9               	goto	u4871
  2176     02D8  2ADA               	goto	u4870
  2177     02D9                     u4871:
  2178     02D9  2AEF               	goto	l344
  2179     02DA                     u4870:
  2180     02DA                     l3360:
  2181     02DA  300C               	movlw	12
  2182     02DB  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2183     02E0  300F               	movlw	15
  2184     02E1  120A  158A  2273  120A  118A  	fcall	_LCD_Write
  2185     02E6                     l3366:
  2186                           
  2187                           ;main.c: 155:         LCD_putrs("A");
  2188     02E6  3024               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2189     02E7  00F6               	movwf	LCD_putrs@a
  2190     02E8  3080               	movlw	128
  2191     02E9  00F7               	movwf	LCD_putrs@a+1
  2192     02EA  120A  158A  233F  120A  118A  	fcall	_LCD_putrs
  2193     02EF                     l344:
  2194     02EF  0008               	return
  2195     02F0                     __end_of_update:
  2196                           
  2197                           	psect	text2
  2198     04C3                     __ptext2:	
  2199 ;; *************** function _sprintf *****************
  2200 ;; Defined at:
  2201 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  sp              1    wreg     PTR unsigned char 
  2204 ;;		 -> a_str(32), str(32), 
  2205 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  2206 ;;		 -> STR_4(15), STR_2(15), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  2209 ;;		 -> a_str(32), str(32), 
  2210 ;;  tmpval          4    0        struct .
  2211 ;;  width           2   23[BANK0 ] int 
  2212 ;;  val             2   20[BANK0 ] unsigned int 
  2213 ;;  cp              2    0        PTR const unsigned char 
  2214 ;;  len             2    0        unsigned int 
  2215 ;;  c               1   26[BANK0 ] unsigned char 
  2216 ;;  flag            1   22[BANK0 ] unsigned char 
  2217 ;;  prec            1   19[BANK0 ] char 
  2218 ;;  ap              1   18[BANK0 ] PTR void [1]
  2219 ;;		 -> ?_sprintf(2), 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    8[BANK0 ] int 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       7       0       0       0
  2230 ;;      Locals:         0       9       0       0       0
  2231 ;;      Temps:          0       3       0       0       0
  2232 ;;      Totals:         0      19       0       0       0
  2233 ;;Total ram usage:       19 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		___lwdiv
  2238 ;;		___lwmod
  2239 ;;		___wmul
  2240 ;;		_isdigit
  2241 ;; This function is called by:
  2242 ;;		_update
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     04C3                     _sprintf:	
  2247                           ;psect for function _sprintf
  2248                           
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2252                           ;sprintf@sp stored from wreg
  2253     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2254     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2255     04C5  00B9               	movwf	sprintf@sp
  2256     04C6                     l3014:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2259     04C6  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2260     04C7  00B2               	movwf	sprintf@ap
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2263     04C8  2E6E               	goto	l3118
  2264     04C9                     l3016:
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2267     04C9  3025               	movlw	37
  2268     04CA  063A               	xorwf	sprintf@c,w
  2269     04CB  1903               	btfsc	3,2
  2270     04CC  2CCE               	goto	u4381
  2271     04CD  2CCF               	goto	u4380
  2272     04CE                     u4381:
  2273     04CE  2CD9               	goto	l3022
  2274     04CF                     u4380:
  2275     04CF                     l3018:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2278     04CF  0839               	movf	sprintf@sp,w
  2279     04D0  0084               	movwf	4
  2280     04D1  083A               	movf	sprintf@c,w
  2281     04D2  1383               	bcf	3,7	;select IRP bank0
  2282     04D3  0080               	movwf	0
  2283     04D4                     l3020:
  2284     04D4  3001               	movlw	1
  2285     04D5  00AF               	movwf	??_sprintf
  2286     04D6  082F               	movf	??_sprintf,w
  2287     04D7  07B9               	addwf	sprintf@sp,f
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2290     04D8  2E6E               	goto	l3118
  2291     04D9                     l3022:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2294     04D9  01B7               	clrf	sprintf@width
  2295     04DA  01B8               	clrf	sprintf@width+1
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2298     04DB  01B6               	clrf	sprintf@flag
  2299     04DC  2CE2               	goto	l3028
  2300     04DD                     l502:	
  2301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2302                           
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2305     04DD  1536               	bsf	sprintf@flag,2
  2306     04DE                     l3024:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2309     04DE  3001               	movlw	1
  2310     04DF  00AF               	movwf	??_sprintf
  2311     04E0  082F               	movf	??_sprintf,w
  2312     04E1  07A8               	addwf	sprintf@f,f
  2313     04E2                     l3028:	
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2315                           
  2316     04E2  0828               	movf	sprintf@f,w
  2317     04E3  0084               	movwf	4
  2318     04E4  120A  158A  200A  120A  118A  	fcall	stringdir
  2319     04E9  00AF               	movwf	??_sprintf
  2320     04EA  01B0               	clrf	??_sprintf+1
  2321                           
  2322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2323                           ; Switch size 1, requested type "simple"
  2324                           ; Number of cases is 1, Range of values is 0 to 0
  2325                           ; switch strategies available:
  2326                           ; Name         Instructions Cycles
  2327                           ; simple_byte            4     3 (average)
  2328                           ; direct_byte           11     8 (fixed)
  2329                           ; jumptable            260     6 (fixed)
  2330                           ;	Chosen strategy is simple_byte
  2331     04EB  0830               	movf	??_sprintf+1,w
  2332     04EC  3A00               	xorlw	0	; case 0
  2333     04ED  1903               	skipnz
  2334     04EE  2CF0               	goto	l3774
  2335     04EF  2CF5               	goto	l3030
  2336     04F0                     l3774:
  2337                           
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 48 to 48
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ; direct_byte           14    11 (fixed)
  2344                           ; jumptable            263     9 (fixed)
  2345                           ;	Chosen strategy is simple_byte
  2346     04F0  082F               	movf	??_sprintf,w
  2347     04F1  3A30               	xorlw	48	; case 48
  2348     04F2  1903               	skipnz
  2349     04F3  2CDD               	goto	l502
  2350     04F4  2CF5               	goto	l3030
  2351     04F5                     l3030:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2354     04F5  0828               	movf	sprintf@f,w
  2355     04F6  0084               	movwf	4
  2356     04F7  120A  158A  200A  120A  118A  	fcall	stringdir
  2357     04FC  120A  158A  2261  120A  118A  	fcall	_isdigit
  2358     0501  1C03               	btfss	3,0
  2359     0502  2D04               	goto	u4391
  2360     0503  2D05               	goto	u4390
  2361     0504                     u4391:
  2362     0504  2D45               	goto	l3044
  2363     0505                     u4390:
  2364     0505                     l3032:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2367     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2368     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2369     0507  01B7               	clrf	sprintf@width
  2370     0508  01B8               	clrf	sprintf@width+1
  2371     0509                     l3034:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2374     0509  300A               	movlw	10
  2375     050A  00F3               	movwf	___wmul@multiplier
  2376     050B  3000               	movlw	0
  2377     050C  00F4               	movwf	___wmul@multiplier+1
  2378     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2379     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2380     050F  0838               	movf	sprintf@width+1,w
  2381     0510  00F6               	movwf	___wmul@multiplicand+1
  2382     0511  0837               	movf	sprintf@width,w
  2383     0512  00F5               	movwf	___wmul@multiplicand
  2384     0513  120A  158A  22AF  120A  118A  	fcall	___wmul
  2385     0518  0874               	movf	?___wmul+1,w
  2386     0519  1283               	bcf	3,5	;RP0=0, select bank0
  2387     051A  1303               	bcf	3,6	;RP1=0, select bank0
  2388     051B  00B8               	movwf	sprintf@width+1
  2389     051C  0873               	movf	?___wmul,w
  2390     051D  00B7               	movwf	sprintf@width
  2391     051E                     l3036:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2394     051E  0828               	movf	sprintf@f,w
  2395     051F  0084               	movwf	4
  2396     0520  120A  158A  200A  120A  118A  	fcall	stringdir
  2397     0525  3ED0               	addlw	208
  2398     0526  00AF               	movwf	??_sprintf
  2399     0527  30FF               	movlw	255
  2400     0528  1803               	skipnc
  2401     0529  3000               	movlw	0
  2402     052A  00B0               	movwf	??_sprintf+1
  2403     052B  082F               	movf	??_sprintf,w
  2404     052C  07B7               	addwf	sprintf@width,f
  2405     052D  1803               	skipnc
  2406     052E  0AB8               	incf	sprintf@width+1,f
  2407     052F  0830               	movf	??_sprintf+1,w
  2408     0530  07B8               	addwf	sprintf@width+1,f
  2409     0531                     l3038:
  2410     0531  3001               	movlw	1
  2411     0532  00AF               	movwf	??_sprintf
  2412     0533  082F               	movf	??_sprintf,w
  2413     0534  07A8               	addwf	sprintf@f,f
  2414     0535                     l3040:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2417     0535  0828               	movf	sprintf@f,w
  2418     0536  0084               	movwf	4
  2419     0537  120A  158A  200A  120A  118A  	fcall	stringdir
  2420     053C  120A  158A  2261  120A  118A  	fcall	_isdigit
  2421     0541  1803               	btfsc	3,0
  2422     0542  2D44               	goto	u4401
  2423     0543  2D45               	goto	u4400
  2424     0544                     u4401:
  2425     0544  2D09               	goto	l3034
  2426     0545                     u4400:
  2427     0545                     l3044:
  2428     0545  3001               	movlw	1
  2429     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2430     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2431     0548  07A8               	addwf	sprintf@f,f
  2432     0549  30FF               	movlw	-1
  2433     054A  0728               	addwf	sprintf@f,w
  2434     054B  0084               	movwf	4
  2435     054C  120A  158A  200A  120A  118A  	fcall	stringdir
  2436     0551  00BA               	movwf	sprintf@c
  2437     0552  00AF               	movwf	??_sprintf
  2438     0553  01B0               	clrf	??_sprintf+1
  2439                           
  2440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2441                           ; Switch size 1, requested type "simple"
  2442                           ; Number of cases is 1, Range of values is 0 to 0
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte            4     3 (average)
  2446                           ; direct_byte           11     8 (fixed)
  2447                           ; jumptable            260     6 (fixed)
  2448                           ;	Chosen strategy is simple_byte
  2449     0554  0830               	movf	??_sprintf+1,w
  2450     0555  3A00               	xorlw	0	; case 0
  2451     0556  1903               	skipnz
  2452     0557  2D59               	goto	l3776
  2453     0558  2E6E               	goto	l3118
  2454     0559                     l3776:
  2455                           
  2456                           ; Switch size 1, requested type "simple"
  2457                           ; Number of cases is 3, Range of values is 0 to 105
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte           10     6 (average)
  2461                           ; jumptable            260     6 (fixed)
  2462                           ;	Chosen strategy is simple_byte
  2463     0559  082F               	movf	??_sprintf,w
  2464     055A  3A00               	xorlw	0	; case 0
  2465     055B  1903               	skipnz
  2466     055C  2E7E               	goto	l3120
  2467     055D  3A64               	xorlw	100	; case 100
  2468     055E  1903               	skipnz
  2469     055F  2D64               	goto	l3046
  2470     0560  3A0D               	xorlw	13	; case 105
  2471     0561  1903               	skipnz
  2472     0562  2D64               	goto	l3046
  2473     0563  2E6E               	goto	l3118
  2474     0564                     l3046:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2477     0564  0832               	movf	sprintf@ap,w
  2478     0565  0084               	movwf	4
  2479     0566  1383               	bcf	3,7	;select IRP bank0
  2480     0567  0800               	movf	0,w
  2481     0568  00B4               	movwf	sprintf@val
  2482     0569  0A84               	incf	4,f
  2483     056A  0800               	movf	0,w
  2484     056B  00B5               	movwf	sprintf@val+1
  2485     056C                     l3048:
  2486     056C  3002               	movlw	2
  2487     056D  00AF               	movwf	??_sprintf
  2488     056E  082F               	movf	??_sprintf,w
  2489     056F  07B2               	addwf	sprintf@ap,f
  2490     0570                     l3050:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2493     0570  1FB5               	btfss	sprintf@val+1,7
  2494     0571  2D73               	goto	u4411
  2495     0572  2D74               	goto	u4410
  2496     0573                     u4411:
  2497     0573  2D7D               	goto	l3056
  2498     0574                     u4410:
  2499     0574                     l3052:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2502     0574  3003               	movlw	3
  2503     0575  00AF               	movwf	??_sprintf
  2504     0576  082F               	movf	??_sprintf,w
  2505     0577  04B6               	iorwf	sprintf@flag,f
  2506     0578                     l3054:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2509     0578  09B4               	comf	sprintf@val,f
  2510     0579  09B5               	comf	sprintf@val+1,f
  2511     057A  0AB4               	incf	sprintf@val,f
  2512     057B  1903               	skipnz
  2513     057C  0AB5               	incf	sprintf@val+1,f
  2514     057D                     l3056:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2517     057D  01BA               	clrf	sprintf@c
  2518     057E  0ABA               	incf	sprintf@c,f
  2519     057F                     l3062:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2522     057F  083A               	movf	sprintf@c,w
  2523     0580  00AF               	movwf	??_sprintf
  2524     0581  072F               	addwf	??_sprintf,w
  2525     0582  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2526     0583  0084               	movwf	4
  2527     0584  120A  158A  200A  120A  118A  	fcall	stringdir
  2528     0589  00B0               	movwf	??_sprintf+1
  2529     058A  120A  158A  200A  120A  118A  	fcall	stringdir
  2530     058F  00B1               	movwf	??_sprintf+2
  2531     0590  0831               	movf	??_sprintf+2,w
  2532     0591  0235               	subwf	sprintf@val+1,w
  2533     0592  1D03               	skipz
  2534     0593  2D96               	goto	u4425
  2535     0594  0830               	movf	??_sprintf+1,w
  2536     0595  0234               	subwf	sprintf@val,w
  2537     0596                     u4425:
  2538     0596  1803               	skipnc
  2539     0597  2D99               	goto	u4421
  2540     0598  2D9A               	goto	u4420
  2541     0599                     u4421:
  2542     0599  2D9B               	goto	l3066
  2543     059A                     u4420:
  2544     059A  2DA5               	goto	l3068
  2545     059B                     l3066:
  2546     059B  3001               	movlw	1
  2547     059C  00AF               	movwf	??_sprintf
  2548     059D  082F               	movf	??_sprintf,w
  2549     059E  07BA               	addwf	sprintf@c,f
  2550     059F  3005               	movlw	5
  2551     05A0  063A               	xorwf	sprintf@c,w
  2552     05A1  1D03               	btfss	3,2
  2553     05A2  2DA4               	goto	u4431
  2554     05A3  2DA5               	goto	u4430
  2555     05A4                     u4431:
  2556     05A4  2D7F               	goto	l3062
  2557     05A5                     u4430:
  2558     05A5                     l3068:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2561     05A5  0837               	movf	sprintf@width,w
  2562     05A6  0438               	iorwf	sprintf@width+1,w
  2563     05A7  1903               	btfsc	3,2
  2564     05A8  2DAA               	goto	u4441
  2565     05A9  2DAB               	goto	u4440
  2566     05AA                     u4441:
  2567     05AA  2DB7               	goto	l520
  2568     05AB                     u4440:
  2569     05AB                     l3070:
  2570     05AB  0836               	movf	sprintf@flag,w
  2571     05AC  3903               	andlw	3
  2572     05AD  1903               	btfsc	3,2
  2573     05AE  2DB0               	goto	u4451
  2574     05AF  2DB1               	goto	u4450
  2575     05B0                     u4451:
  2576     05B0  2DB7               	goto	l520
  2577     05B1                     u4450:
  2578     05B1                     l3072:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2581     05B1  30FF               	movlw	255
  2582     05B2  07B7               	addwf	sprintf@width,f
  2583     05B3  1803               	skipnc
  2584     05B4  0AB8               	incf	sprintf@width+1,f
  2585     05B5  30FF               	movlw	255
  2586     05B6  07B8               	addwf	sprintf@width+1,f
  2587     05B7                     l520:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2590     05B7  0838               	movf	sprintf@width+1,w
  2591     05B8  3A80               	xorlw	128
  2592     05B9  3C80               	sublw	128
  2593     05BA  1D03               	skipz
  2594     05BB  2DBE               	goto	u4465
  2595     05BC  0837               	movf	sprintf@width,w
  2596     05BD  023A               	subwf	sprintf@c,w
  2597     05BE                     u4465:
  2598     05BE  1803               	skipnc
  2599     05BF  2DC1               	goto	u4461
  2600     05C0  2DC2               	goto	u4460
  2601     05C1                     u4461:
  2602     05C1  2DCE               	goto	l3076
  2603     05C2                     u4460:
  2604     05C2                     l3074:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2607     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2608     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2609     05C4  083A               	movf	sprintf@c,w
  2610     05C5  00AF               	movwf	??_sprintf
  2611     05C6  01B0               	clrf	??_sprintf+1
  2612     05C7  082F               	movf	??_sprintf,w
  2613     05C8  02B7               	subwf	sprintf@width,f
  2614     05C9  0830               	movf	??_sprintf+1,w
  2615     05CA  1C03               	skipc
  2616     05CB  03B8               	decf	sprintf@width+1,f
  2617     05CC  02B8               	subwf	sprintf@width+1,f
  2618     05CD  2DD2               	goto	l3078
  2619     05CE                     l3076:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2622     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2623     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2624     05D0  01B7               	clrf	sprintf@width
  2625     05D1  01B8               	clrf	sprintf@width+1
  2626     05D2                     l3078:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2629     05D2  1D36               	btfss	sprintf@flag,2
  2630     05D3  2DD5               	goto	u4471
  2631     05D4  2DD6               	goto	u4470
  2632     05D5                     u4471:
  2633     05D5  2E01               	goto	l3094
  2634     05D6                     u4470:
  2635     05D6                     l3080:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2638     05D6  0836               	movf	sprintf@flag,w
  2639     05D7  3903               	andlw	3
  2640     05D8  1903               	btfsc	3,2
  2641     05D9  2DDB               	goto	u4481
  2642     05DA  2DDC               	goto	u4480
  2643     05DB                     u4481:
  2644     05DB  2DE5               	goto	l3086
  2645     05DC                     u4480:
  2646     05DC                     l3082:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2649     05DC  0839               	movf	sprintf@sp,w
  2650     05DD  0084               	movwf	4
  2651     05DE  302D               	movlw	45
  2652     05DF  1383               	bcf	3,7	;select IRP bank0
  2653     05E0  0080               	movwf	0
  2654     05E1                     l3084:
  2655     05E1  3001               	movlw	1
  2656     05E2  00AF               	movwf	??_sprintf
  2657     05E3  082F               	movf	??_sprintf,w
  2658     05E4  07B9               	addwf	sprintf@sp,f
  2659     05E5                     l3086:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2662     05E5  0837               	movf	sprintf@width,w
  2663     05E6  0438               	iorwf	sprintf@width+1,w
  2664     05E7  1903               	btfsc	3,2
  2665     05E8  2DEA               	goto	u4491
  2666     05E9  2DEB               	goto	u4490
  2667     05EA                     u4491:
  2668     05EA  2E2B               	goto	l3108
  2669     05EB                     u4490:
  2670     05EB                     l3088:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2673     05EB  0839               	movf	sprintf@sp,w
  2674     05EC  0084               	movwf	4
  2675     05ED  3030               	movlw	48
  2676     05EE  1383               	bcf	3,7	;select IRP bank0
  2677     05EF  0080               	movwf	0
  2678     05F0                     l3090:
  2679     05F0  3001               	movlw	1
  2680     05F1  00AF               	movwf	??_sprintf
  2681     05F2  082F               	movf	??_sprintf,w
  2682     05F3  07B9               	addwf	sprintf@sp,f
  2683     05F4                     l3092:
  2684     05F4  30FF               	movlw	255
  2685     05F5  07B7               	addwf	sprintf@width,f
  2686     05F6  1803               	skipnc
  2687     05F7  0AB8               	incf	sprintf@width+1,f
  2688     05F8  30FF               	movlw	255
  2689     05F9  07B8               	addwf	sprintf@width+1,f
  2690     05FA  0837               	movf	sprintf@width,w
  2691     05FB  0438               	iorwf	sprintf@width+1,w
  2692     05FC  1D03               	btfss	3,2
  2693     05FD  2DFF               	goto	u4501
  2694     05FE  2E00               	goto	u4500
  2695     05FF                     u4501:
  2696     05FF  2DEB               	goto	l3088
  2697     0600                     u4500:
  2698     0600  2E2B               	goto	l3108
  2699     0601                     l3094:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2702     0601  0837               	movf	sprintf@width,w
  2703     0602  0438               	iorwf	sprintf@width+1,w
  2704     0603  1903               	btfsc	3,2
  2705     0604  2E06               	goto	u4511
  2706     0605  2E07               	goto	u4510
  2707     0606                     u4511:
  2708     0606  2E1C               	goto	l3102
  2709     0607                     u4510:
  2710     0607                     l3096:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2713     0607  0839               	movf	sprintf@sp,w
  2714     0608  0084               	movwf	4
  2715     0609  3020               	movlw	32
  2716     060A  1383               	bcf	3,7	;select IRP bank0
  2717     060B  0080               	movwf	0
  2718     060C                     l3098:
  2719     060C  3001               	movlw	1
  2720     060D  00AF               	movwf	??_sprintf
  2721     060E  082F               	movf	??_sprintf,w
  2722     060F  07B9               	addwf	sprintf@sp,f
  2723     0610                     l3100:
  2724     0610  30FF               	movlw	255
  2725     0611  07B7               	addwf	sprintf@width,f
  2726     0612  1803               	skipnc
  2727     0613  0AB8               	incf	sprintf@width+1,f
  2728     0614  30FF               	movlw	255
  2729     0615  07B8               	addwf	sprintf@width+1,f
  2730     0616  0837               	movf	sprintf@width,w
  2731     0617  0438               	iorwf	sprintf@width+1,w
  2732     0618  1D03               	btfss	3,2
  2733     0619  2E1B               	goto	u4521
  2734     061A  2E1C               	goto	u4520
  2735     061B                     u4521:
  2736     061B  2E07               	goto	l3096
  2737     061C                     u4520:
  2738     061C                     l3102:
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2741     061C  0836               	movf	sprintf@flag,w
  2742     061D  3903               	andlw	3
  2743     061E  1903               	btfsc	3,2
  2744     061F  2E21               	goto	u4531
  2745     0620  2E22               	goto	u4530
  2746     0621                     u4531:
  2747     0621  2E2B               	goto	l3108
  2748     0622                     u4530:
  2749     0622                     l3104:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2752     0622  0839               	movf	sprintf@sp,w
  2753     0623  0084               	movwf	4
  2754     0624  302D               	movlw	45
  2755     0625  1383               	bcf	3,7	;select IRP bank0
  2756     0626  0080               	movwf	0
  2757     0627                     l3106:
  2758     0627  3001               	movlw	1
  2759     0628  00AF               	movwf	??_sprintf
  2760     0629  082F               	movf	??_sprintf,w
  2761     062A  07B9               	addwf	sprintf@sp,f
  2762     062B                     l3108:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2765     062B  083A               	movf	sprintf@c,w
  2766     062C  00B3               	movwf	sprintf@prec
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2769     062D  2E65               	goto	l3116
  2770     062E                     l3110:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2773     062E  300A               	movlw	10
  2774     062F  00A3               	movwf	___lwmod@divisor
  2775     0630  3000               	movlw	0
  2776     0631  00A4               	movwf	___lwmod@divisor+1
  2777     0632  0833               	movf	sprintf@prec,w
  2778     0633  00AF               	movwf	??_sprintf
  2779     0634  072F               	addwf	??_sprintf,w
  2780     0635  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2781     0636  0084               	movwf	4
  2782     0637  120A  158A  200A  120A  118A  	fcall	stringdir
  2783     063C  00F3               	movwf	___lwdiv@divisor
  2784     063D  120A  158A  200A  120A  118A  	fcall	stringdir
  2785     0642  00F4               	movwf	___lwdiv@divisor+1
  2786     0643  0835               	movf	sprintf@val+1,w
  2787     0644  00F6               	movwf	___lwdiv@dividend+1
  2788     0645  0834               	movf	sprintf@val,w
  2789     0646  00F5               	movwf	___lwdiv@dividend
  2790     0647  120A  158A  2385  120A  118A  	fcall	___lwdiv
  2791     064C  0874               	movf	?___lwdiv+1,w
  2792     064D  1283               	bcf	3,5	;RP0=0, select bank0
  2793     064E  1303               	bcf	3,6	;RP1=0, select bank0
  2794     064F  00A6               	movwf	___lwmod@dividend+1
  2795     0650  0873               	movf	?___lwdiv,w
  2796     0651  00A5               	movwf	___lwmod@dividend
  2797     0652  120A  158A  2303  120A  118A  	fcall	___lwmod
  2798     0657  1283               	bcf	3,5	;RP0=0, select bank0
  2799     0658  1303               	bcf	3,6	;RP1=0, select bank0
  2800     0659  0823               	movf	?___lwmod,w
  2801     065A  3E30               	addlw	48
  2802     065B  00BA               	movwf	sprintf@c
  2803     065C                     l3112:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2806     065C  0839               	movf	sprintf@sp,w
  2807     065D  0084               	movwf	4
  2808     065E  083A               	movf	sprintf@c,w
  2809     065F  1383               	bcf	3,7	;select IRP bank0
  2810     0660  0080               	movwf	0
  2811     0661                     l3114:
  2812     0661  3001               	movlw	1
  2813     0662  00AF               	movwf	??_sprintf
  2814     0663  082F               	movf	??_sprintf,w
  2815     0664  07B9               	addwf	sprintf@sp,f
  2816     0665                     l3116:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2819     0665  30FF               	movlw	255
  2820     0666  00AF               	movwf	??_sprintf
  2821     0667  082F               	movf	??_sprintf,w
  2822     0668  07B3               	addwf	sprintf@prec,f
  2823     0669  0A33               	incf	sprintf@prec,w
  2824     066A  1D03               	btfss	3,2
  2825     066B  2E6D               	goto	u4541
  2826     066C  2E6E               	goto	u4540
  2827     066D                     u4541:
  2828     066D  2E2E               	goto	l3110
  2829     066E                     u4540:
  2830     066E                     l3118:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2833     066E  3001               	movlw	1
  2834     066F  07A8               	addwf	sprintf@f,f
  2835     0670  30FF               	movlw	-1
  2836     0671  0728               	addwf	sprintf@f,w
  2837     0672  0084               	movwf	4
  2838     0673  120A  158A  200A  120A  118A  	fcall	stringdir
  2839     0678  00BA               	movwf	sprintf@c
  2840     0679  083A               	movf	sprintf@c,w
  2841     067A  1D03               	btfss	3,2
  2842     067B  2E7D               	goto	u4551
  2843     067C  2E7E               	goto	u4550
  2844     067D                     u4551:
  2845     067D  2CC9               	goto	l3016
  2846     067E                     u4550:
  2847     067E                     l3120:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2850     067E  0839               	movf	sprintf@sp,w
  2851     067F  0084               	movwf	4
  2852     0680  1383               	bcf	3,7	;select IRP bank0
  2853     0681  0180               	clrf	0
  2854     0682                     l537:
  2855     0682  0008               	return
  2856     0683                     __end_of_sprintf:
  2857                           
  2858                           	psect	text3
  2859     0A61                     __ptext3:	
  2860 ;; *************** function _isdigit *****************
  2861 ;; Defined at:
  2862 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  c               1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  c               1    4[COMMON] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         0       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0
  2879 ;;      Totals:         2       0       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_sprintf
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     0A61                     _isdigit:	
  2891                           ;psect for function _isdigit
  2892                           
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2896                           ;isdigit@c stored from wreg
  2897     0A61  00F4               	movwf	isdigit@c
  2898     0A62                     l2922:
  2899     0A62  01F3               	clrf	_isdigit$659
  2900     0A63                     l2924:
  2901     0A63  303A               	movlw	58
  2902     0A64  0274               	subwf	isdigit@c,w
  2903     0A65  1803               	skipnc
  2904     0A66  2A68               	goto	u4161
  2905     0A67  2A69               	goto	u4160
  2906     0A68                     u4161:
  2907     0A68  2A71               	goto	l2930
  2908     0A69                     u4160:
  2909     0A69                     l2926:
  2910     0A69  3030               	movlw	48
  2911     0A6A  0274               	subwf	isdigit@c,w
  2912     0A6B  1C03               	skipc
  2913     0A6C  2A6E               	goto	u4171
  2914     0A6D  2A6F               	goto	u4170
  2915     0A6E                     u4171:
  2916     0A6E  2A71               	goto	l2930
  2917     0A6F                     u4170:
  2918     0A6F                     l2928:
  2919     0A6F  01F3               	clrf	_isdigit$659
  2920     0A70  0AF3               	incf	_isdigit$659,f
  2921     0A71                     l2930:
  2922     0A71  0C73               	rrf	_isdigit$659,w
  2923     0A72                     l994:
  2924     0A72  0008               	return
  2925     0A73                     __end_of_isdigit:
  2926                           
  2927                           	psect	text4
  2928     0AAF                     __ptext4:	
  2929 ;; *************** function ___wmul *****************
  2930 ;; Defined at:
  2931 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  multiplier      2    3[COMMON] unsigned int 
  2934 ;;  multiplicand    2    5[COMMON] unsigned int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  product         2    7[COMMON] unsigned int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  2    3[COMMON] unsigned int 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         4       0       0       0       0
  2947 ;;      Locals:         2       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0
  2949 ;;      Totals:         6       0       0       0       0
  2950 ;;Total ram usage:        6 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_sprintf
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960     0AAF                     ___wmul:	
  2961                           ;psect for function ___wmul
  2962                           
  2963     0AAF                     l2934:	
  2964                           ;incstack = 0
  2965                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2966                           
  2967     0AAF  01F7               	clrf	___wmul@product
  2968     0AB0  01F8               	clrf	___wmul@product+1
  2969     0AB1                     l2936:
  2970     0AB1  1C73               	btfss	___wmul@multiplier,0
  2971     0AB2  2AB4               	goto	u4181
  2972     0AB3  2AB5               	goto	u4180
  2973     0AB4                     u4181:
  2974     0AB4  2ABB               	goto	l541
  2975     0AB5                     u4180:
  2976     0AB5                     l2938:
  2977     0AB5  0875               	movf	___wmul@multiplicand,w
  2978     0AB6  07F7               	addwf	___wmul@product,f
  2979     0AB7  1803               	skipnc
  2980     0AB8  0AF8               	incf	___wmul@product+1,f
  2981     0AB9  0876               	movf	___wmul@multiplicand+1,w
  2982     0ABA  07F8               	addwf	___wmul@product+1,f
  2983     0ABB                     l541:
  2984     0ABB  3001               	movlw	1
  2985     0ABC                     u4195:
  2986     0ABC  1003               	clrc
  2987     0ABD  0DF5               	rlf	___wmul@multiplicand,f
  2988     0ABE  0DF6               	rlf	___wmul@multiplicand+1,f
  2989     0ABF  3EFF               	addlw	-1
  2990     0AC0  1D03               	skipz
  2991     0AC1  2ABC               	goto	u4195
  2992     0AC2                     l2940:
  2993     0AC2  3001               	movlw	1
  2994     0AC3                     u4205:
  2995     0AC3  1003               	clrc
  2996     0AC4  0CF4               	rrf	___wmul@multiplier+1,f
  2997     0AC5  0CF3               	rrf	___wmul@multiplier,f
  2998     0AC6  3EFF               	addlw	-1
  2999     0AC7  1D03               	skipz
  3000     0AC8  2AC3               	goto	u4205
  3001     0AC9                     l2942:
  3002     0AC9  0873               	movf	___wmul@multiplier,w
  3003     0ACA  0474               	iorwf	___wmul@multiplier+1,w
  3004     0ACB  1D03               	btfss	3,2
  3005     0ACC  2ACE               	goto	u4211
  3006     0ACD  2ACF               	goto	u4210
  3007     0ACE                     u4211:
  3008     0ACE  2AB1               	goto	l2936
  3009     0ACF                     u4210:
  3010     0ACF                     l2944:
  3011     0ACF  0878               	movf	___wmul@product+1,w
  3012     0AD0  00F4               	movwf	?___wmul+1
  3013     0AD1  0877               	movf	___wmul@product,w
  3014     0AD2  00F3               	movwf	?___wmul
  3015     0AD3                     l543:
  3016     0AD3  0008               	return
  3017     0AD4                     __end_of___wmul:
  3018                           
  3019                           	psect	text5
  3020     0B03                     __ptext5:	
  3021 ;; *************** function ___lwmod *****************
  3022 ;; Defined at:
  3023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  divisor         2    3[BANK0 ] unsigned int 
  3026 ;;  dividend        2    5[BANK0 ] unsigned int 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  counter         1    7[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    3[BANK0 ] unsigned int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       4       0       0       0
  3039 ;;      Locals:         0       1       0       0       0
  3040 ;;      Temps:          1       0       0       0       0
  3041 ;;      Totals:         1       5       0       0       0
  3042 ;;Total ram usage:        6 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_sprintf
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052     0B03                     ___lwmod:	
  3053                           ;psect for function ___lwmod
  3054                           
  3055     0B03                     l2974:	
  3056                           ;incstack = 0
  3057                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3058                           
  3059     0B03  1283               	bcf	3,5	;RP0=0, select bank0
  3060     0B04  1303               	bcf	3,6	;RP1=0, select bank0
  3061     0B05  0823               	movf	___lwmod@divisor,w
  3062     0B06  0424               	iorwf	___lwmod@divisor+1,w
  3063     0B07  1903               	btfsc	3,2
  3064     0B08  2B0A               	goto	u4291
  3065     0B09  2B0B               	goto	u4290
  3066     0B0A                     u4291:
  3067     0B0A  2B3A               	goto	l2992
  3068     0B0B                     u4290:
  3069     0B0B                     l2976:
  3070     0B0B  01A7               	clrf	___lwmod@counter
  3071     0B0C  0AA7               	incf	___lwmod@counter,f
  3072     0B0D  2B19               	goto	l2982
  3073     0B0E                     l2978:
  3074     0B0E  3001               	movlw	1
  3075     0B0F                     u4305:
  3076     0B0F  1003               	clrc
  3077     0B10  0DA3               	rlf	___lwmod@divisor,f
  3078     0B11  0DA4               	rlf	___lwmod@divisor+1,f
  3079     0B12  3EFF               	addlw	-1
  3080     0B13  1D03               	skipz
  3081     0B14  2B0F               	goto	u4305
  3082     0B15                     l2980:
  3083     0B15  3001               	movlw	1
  3084     0B16  00F8               	movwf	??___lwmod
  3085     0B17  0878               	movf	??___lwmod,w
  3086     0B18  07A7               	addwf	___lwmod@counter,f
  3087     0B19                     l2982:
  3088     0B19  1FA4               	btfss	___lwmod@divisor+1,7
  3089     0B1A  2B1C               	goto	u4311
  3090     0B1B  2B1D               	goto	u4310
  3091     0B1C                     u4311:
  3092     0B1C  2B0E               	goto	l2978
  3093     0B1D                     u4310:
  3094     0B1D                     l2984:
  3095     0B1D  0824               	movf	___lwmod@divisor+1,w
  3096     0B1E  0226               	subwf	___lwmod@dividend+1,w
  3097     0B1F  1D03               	skipz
  3098     0B20  2B23               	goto	u4325
  3099     0B21  0823               	movf	___lwmod@divisor,w
  3100     0B22  0225               	subwf	___lwmod@dividend,w
  3101     0B23                     u4325:
  3102     0B23  1C03               	skipc
  3103     0B24  2B26               	goto	u4321
  3104     0B25  2B27               	goto	u4320
  3105     0B26                     u4321:
  3106     0B26  2B2D               	goto	l2988
  3107     0B27                     u4320:
  3108     0B27                     l2986:
  3109     0B27  0823               	movf	___lwmod@divisor,w
  3110     0B28  02A5               	subwf	___lwmod@dividend,f
  3111     0B29  0824               	movf	___lwmod@divisor+1,w
  3112     0B2A  1C03               	skipc
  3113     0B2B  03A6               	decf	___lwmod@dividend+1,f
  3114     0B2C  02A6               	subwf	___lwmod@dividend+1,f
  3115     0B2D                     l2988:
  3116     0B2D  3001               	movlw	1
  3117     0B2E                     u4335:
  3118     0B2E  1003               	clrc
  3119     0B2F  0CA4               	rrf	___lwmod@divisor+1,f
  3120     0B30  0CA3               	rrf	___lwmod@divisor,f
  3121     0B31  3EFF               	addlw	-1
  3122     0B32  1D03               	skipz
  3123     0B33  2B2E               	goto	u4335
  3124     0B34                     l2990:
  3125     0B34  3001               	movlw	1
  3126     0B35  02A7               	subwf	___lwmod@counter,f
  3127     0B36  1D03               	btfss	3,2
  3128     0B37  2B39               	goto	u4341
  3129     0B38  2B3A               	goto	u4340
  3130     0B39                     u4341:
  3131     0B39  2B1D               	goto	l2984
  3132     0B3A                     u4340:
  3133     0B3A                     l2992:
  3134     0B3A  0826               	movf	___lwmod@dividend+1,w
  3135     0B3B  00A4               	movwf	?___lwmod+1
  3136     0B3C  0825               	movf	___lwmod@dividend,w
  3137     0B3D  00A3               	movwf	?___lwmod
  3138     0B3E                     l823:
  3139     0B3E  0008               	return
  3140     0B3F                     __end_of___lwmod:
  3141                           
  3142                           	psect	text6
  3143     0B85                     __ptext6:	
  3144 ;; *************** function ___lwdiv *****************
  3145 ;; Defined at:
  3146 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  divisor         2    3[COMMON] unsigned int 
  3149 ;;  dividend        2    5[COMMON] unsigned int 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  quotient        2    1[BANK0 ] unsigned int 
  3152 ;;  counter         1    0[BANK0 ] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2    3[COMMON] unsigned int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         4       0       0       0       0
  3163 ;;      Locals:         0       3       0       0       0
  3164 ;;      Temps:          1       0       0       0       0
  3165 ;;      Totals:         5       3       0       0       0
  3166 ;;Total ram usage:        8 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_sprintf
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176     0B85                     ___lwdiv:	
  3177                           ;psect for function ___lwdiv
  3178                           
  3179     0B85                     l2948:	
  3180                           ;incstack = 0
  3181                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3182                           
  3183     0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0B87  01A1               	clrf	___lwdiv@quotient
  3186     0B88  01A2               	clrf	___lwdiv@quotient+1
  3187     0B89                     l2950:
  3188     0B89  0873               	movf	___lwdiv@divisor,w
  3189     0B8A  0474               	iorwf	___lwdiv@divisor+1,w
  3190     0B8B  1903               	btfsc	3,2
  3191     0B8C  2B8E               	goto	u4221
  3192     0B8D  2B8F               	goto	u4220
  3193     0B8E                     u4221:
  3194     0B8E  2BC6               	goto	l2970
  3195     0B8F                     u4220:
  3196     0B8F                     l2952:
  3197     0B8F  01A0               	clrf	___lwdiv@counter
  3198     0B90  0AA0               	incf	___lwdiv@counter,f
  3199     0B91  2B9D               	goto	l2958
  3200     0B92                     l2954:
  3201     0B92  3001               	movlw	1
  3202     0B93                     u4235:
  3203     0B93  1003               	clrc
  3204     0B94  0DF3               	rlf	___lwdiv@divisor,f
  3205     0B95  0DF4               	rlf	___lwdiv@divisor+1,f
  3206     0B96  3EFF               	addlw	-1
  3207     0B97  1D03               	skipz
  3208     0B98  2B93               	goto	u4235
  3209     0B99                     l2956:
  3210     0B99  3001               	movlw	1
  3211     0B9A  00F7               	movwf	??___lwdiv
  3212     0B9B  0877               	movf	??___lwdiv,w
  3213     0B9C  07A0               	addwf	___lwdiv@counter,f
  3214     0B9D                     l2958:
  3215     0B9D  1FF4               	btfss	___lwdiv@divisor+1,7
  3216     0B9E  2BA0               	goto	u4241
  3217     0B9F  2BA1               	goto	u4240
  3218     0BA0                     u4241:
  3219     0BA0  2B92               	goto	l2954
  3220     0BA1                     u4240:
  3221     0BA1                     l2960:
  3222     0BA1  3001               	movlw	1
  3223     0BA2                     u4255:
  3224     0BA2  1003               	clrc
  3225     0BA3  0DA1               	rlf	___lwdiv@quotient,f
  3226     0BA4  0DA2               	rlf	___lwdiv@quotient+1,f
  3227     0BA5  3EFF               	addlw	-1
  3228     0BA6  1D03               	skipz
  3229     0BA7  2BA2               	goto	u4255
  3230     0BA8  0874               	movf	___lwdiv@divisor+1,w
  3231     0BA9  0276               	subwf	___lwdiv@dividend+1,w
  3232     0BAA  1D03               	skipz
  3233     0BAB  2BAE               	goto	u4265
  3234     0BAC  0873               	movf	___lwdiv@divisor,w
  3235     0BAD  0275               	subwf	___lwdiv@dividend,w
  3236     0BAE                     u4265:
  3237     0BAE  1C03               	skipc
  3238     0BAF  2BB1               	goto	u4261
  3239     0BB0  2BB2               	goto	u4260
  3240     0BB1                     u4261:
  3241     0BB1  2BB9               	goto	l2966
  3242     0BB2                     u4260:
  3243     0BB2                     l2962:
  3244     0BB2  0873               	movf	___lwdiv@divisor,w
  3245     0BB3  02F5               	subwf	___lwdiv@dividend,f
  3246     0BB4  0874               	movf	___lwdiv@divisor+1,w
  3247     0BB5  1C03               	skipc
  3248     0BB6  03F6               	decf	___lwdiv@dividend+1,f
  3249     0BB7  02F6               	subwf	___lwdiv@dividend+1,f
  3250     0BB8                     l2964:
  3251     0BB8  1421               	bsf	___lwdiv@quotient,0
  3252     0BB9                     l2966:
  3253     0BB9  3001               	movlw	1
  3254     0BBA                     u4275:
  3255     0BBA  1003               	clrc
  3256     0BBB  0CF4               	rrf	___lwdiv@divisor+1,f
  3257     0BBC  0CF3               	rrf	___lwdiv@divisor,f
  3258     0BBD  3EFF               	addlw	-1
  3259     0BBE  1D03               	skipz
  3260     0BBF  2BBA               	goto	u4275
  3261     0BC0                     l2968:
  3262     0BC0  3001               	movlw	1
  3263     0BC1  02A0               	subwf	___lwdiv@counter,f
  3264     0BC2  1D03               	btfss	3,2
  3265     0BC3  2BC5               	goto	u4281
  3266     0BC4  2BC6               	goto	u4280
  3267     0BC5                     u4281:
  3268     0BC5  2BA1               	goto	l2960
  3269     0BC6                     u4280:
  3270     0BC6                     l2970:
  3271     0BC6  0822               	movf	___lwdiv@quotient+1,w
  3272     0BC7  00F4               	movwf	?___lwdiv+1
  3273     0BC8  0821               	movf	___lwdiv@quotient,w
  3274     0BC9  00F3               	movwf	?___lwdiv
  3275     0BCA                     l813:
  3276     0BCA  0008               	return
  3277     0BCB                     __end_of___lwdiv:
  3278                           
  3279                           	psect	text7
  3280     0B3F                     __ptext7:	
  3281 ;; *************** function _LCD_putrs *****************
  3282 ;; Defined at:
  3283 ;;		line 97 in file "lcd.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  a               2    6[COMMON] PTR const unsigned char 
  3286 ;;		 -> STR_6(2), STR_5(2), a_str(32), STR_3(4), 
  3287 ;;		 -> str(32), STR_1(4), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  i               2    3[BANK0 ] int 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         2       0       0       0       0
  3300 ;;      Locals:         0       2       0       0       0
  3301 ;;      Temps:          0       3       0       0       0
  3302 ;;      Totals:         2       5       0       0       0
  3303 ;;Total ram usage:        7 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 3
  3306 ;; This function calls:
  3307 ;;		_LCD_putc
  3308 ;; This function is called by:
  3309 ;;		_update
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313     0B3F                     _LCD_putrs:	
  3314                           ;psect for function _LCD_putrs
  3315                           
  3316     0B3F                     l3006:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3319                           
  3320                           
  3321                           ;lcd.c: 99:     for ( int i = 0; a[i] != '\0'; ++i ) {
  3322     0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  3323     0B40  1303               	bcf	3,6	;RP1=0, select bank0
  3324     0B41  01A3               	clrf	LCD_putrs@i
  3325     0B42  01A4               	clrf	LCD_putrs@i+1
  3326     0B43  2B68               	goto	l3012
  3327     0B44                     l3008:
  3328                           
  3329                           ;lcd.c: 100:         LCD_putc(a[i]);
  3330     0B44  0823               	movf	LCD_putrs@i,w
  3331     0B45  0776               	addwf	LCD_putrs@a,w
  3332     0B46  00A1               	movwf	??_LCD_putrs+1
  3333     0B47  0877               	movf	LCD_putrs@a+1,w
  3334     0B48  00A0               	movwf	??_LCD_putrs
  3335     0B49  1803               	skipnc
  3336     0B4A  0AA0               	incf	??_LCD_putrs,f
  3337     0B4B  1FA3               	btfss	LCD_putrs@i,7
  3338     0B4C  2B4E               	goto	u4350
  3339     0B4D  03A0               	decf	??_LCD_putrs,f
  3340     0B4E                     u4350:
  3341     0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  3342     0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  3343     0B50  0820               	movf	??_LCD_putrs,w
  3344     0B51  00A2               	movwf	??_LCD_putrs+2
  3345     0B52  0822               	movf	??_LCD_putrs+2,w
  3346     0B53  00FF               	movwf	btemp+1
  3347     0B54  0821               	movf	??_LCD_putrs+1,w
  3348     0B55  0084               	movwf	4
  3349     0B56  120A  158A  2000  120A  158A  	fcall	stringtab
  3350     0B5B  120A  158A  22D4  120A  158A  	fcall	_LCD_putc
  3351     0B60                     l3010:
  3352                           
  3353                           ;lcd.c: 101:     }
  3354     0B60  3001               	movlw	1
  3355     0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3356     0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3357     0B63  07A3               	addwf	LCD_putrs@i,f
  3358     0B64  1803               	skipnc
  3359     0B65  0AA4               	incf	LCD_putrs@i+1,f
  3360     0B66  3000               	movlw	0
  3361     0B67  07A4               	addwf	LCD_putrs@i+1,f
  3362     0B68                     l3012:
  3363     0B68  0823               	movf	LCD_putrs@i,w
  3364     0B69  0776               	addwf	LCD_putrs@a,w
  3365     0B6A  00A1               	movwf	??_LCD_putrs+1
  3366     0B6B  0877               	movf	LCD_putrs@a+1,w
  3367     0B6C  00A0               	movwf	??_LCD_putrs
  3368     0B6D  1803               	skipnc
  3369     0B6E  0AA0               	incf	??_LCD_putrs,f
  3370     0B6F  1FA3               	btfss	LCD_putrs@i,7
  3371     0B70  2B72               	goto	u4360
  3372     0B71  03A0               	decf	??_LCD_putrs,f
  3373     0B72                     u4360:
  3374     0B72  1283               	bcf	3,5	;RP0=0, select bank0
  3375     0B73  1303               	bcf	3,6	;RP1=0, select bank0
  3376     0B74  0820               	movf	??_LCD_putrs,w
  3377     0B75  00A2               	movwf	??_LCD_putrs+2
  3378     0B76  0822               	movf	??_LCD_putrs+2,w
  3379     0B77  00FF               	movwf	btemp+1
  3380     0B78  0821               	movf	??_LCD_putrs+1,w
  3381     0B79  0084               	movwf	4
  3382     0B7A  120A  158A  2000  120A  158A  	fcall	stringtab
  3383     0B7F  3A00               	xorlw	0
  3384     0B80  1D03               	skipz
  3385     0B81  2B83               	goto	u4371
  3386     0B82  2B84               	goto	u4370
  3387     0B83                     u4371:
  3388     0B83  2B44               	goto	l3008
  3389     0B84                     u4370:
  3390     0B84                     l59:
  3391     0B84  0008               	return
  3392     0B85                     __end_of_LCD_putrs:
  3393                           
  3394                           	psect	text8
  3395     0AD4                     __ptext8:	
  3396 ;; *************** function _LCD_putc *****************
  3397 ;; Defined at:
  3398 ;;		line 72 in file "lcd.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  c               1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  c               1    5[COMMON] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         1       0       0       0       0
  3414 ;;      Temps:          1       0       0       0       0
  3415 ;;      Totals:         2       0       0       0       0
  3416 ;;Total ram usage:        2 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 2
  3419 ;; This function calls:
  3420 ;;		_LCD_Out
  3421 ;; This function is called by:
  3422 ;;		_LCD_putrs
  3423 ;;		_LCD_puts
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427     0AD4                     _LCD_putc:	
  3428                           ;psect for function _LCD_putc
  3429                           
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _LCD_putc: [wreg+status,2+status,0+pclath+cstack]
  3433                           ;LCD_putc@c stored from wreg
  3434     0AD4  00F5               	movwf	LCD_putc@c
  3435     0AD5                     l2906:
  3436                           
  3437                           ;lcd.c: 74:     RE1 = 1;
  3438     0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  3439     0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  3440     0AD7  1489               	bsf	9,1	;volatile
  3441     0AD8                     l2908:
  3442                           
  3443                           ;lcd.c: 75:     LCD_Out((c & 0xF0) >> 4);
  3444     0AD8  0875               	movf	LCD_putc@c,w
  3445     0AD9  00F4               	movwf	??_LCD_putc
  3446     0ADA  3004               	movlw	4
  3447     0ADB                     u4155:
  3448     0ADB  1003               	clrc
  3449     0ADC  0CF4               	rrf	??_LCD_putc,f
  3450     0ADD  3EFF               	addlw	-1
  3451     0ADE  1D03               	skipz
  3452     0ADF  2ADB               	goto	u4155
  3453     0AE0  0874               	movf	??_LCD_putc,w
  3454     0AE1  390F               	andlw	15
  3455     0AE2  120A  158A  228D  120A  158A  	fcall	_LCD_Out
  3456     0AE7                     l2910:
  3457                           
  3458                           ;lcd.c: 77:     RE0 = 1;
  3459     0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  3460     0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  3461     0AE9  1409               	bsf	9,0	;volatile
  3462     0AEA                     l2912:
  3463                           
  3464                           ;lcd.c: 78:     _delay((unsigned long)((40)*(10000000/4000000.0)));
  3465     0AEA  3021               	movlw	33
  3466     0AEB  00F4               	movwf	??_LCD_putc
  3467     0AEC                     u6087:
  3468     0AEC  0BF4               	decfsz	??_LCD_putc,f
  3469     0AED  2AEC               	goto	u6087
  3470     0AEE                     l2914:
  3471                           
  3472                           ;lcd.c: 79:     RE0 = 0;
  3473     0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0AF0  1009               	bcf	9,0	;volatile
  3476     0AF1                     l2916:
  3477                           
  3478                           ;lcd.c: 81:     LCD_Out(c & 0x0F);
  3479     0AF1  0875               	movf	LCD_putc@c,w
  3480     0AF2  390F               	andlw	15
  3481     0AF3  120A  158A  228D  120A  158A  	fcall	_LCD_Out
  3482     0AF8                     l2918:
  3483                           
  3484                           ;lcd.c: 83:     RE0 = 1;
  3485     0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  3486     0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  3487     0AFA  1409               	bsf	9,0	;volatile
  3488                           
  3489                           ;lcd.c: 84:     _delay((unsigned long)((40)*(10000000/4000000.0)));
  3490     0AFB  3021               	movlw	33
  3491     0AFC  00F4               	movwf	??_LCD_putc
  3492     0AFD                     u6097:
  3493     0AFD  0BF4               	decfsz	??_LCD_putc,f
  3494     0AFE  2AFD               	goto	u6097
  3495     0AFF                     l2920:
  3496                           
  3497                           ;lcd.c: 85:     RE0 = 0;
  3498     0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  3499     0B00  1303               	bcf	3,6	;RP1=0, select bank0
  3500     0B01  1009               	bcf	9,0	;volatile
  3501     0B02                     l47:
  3502     0B02  0008               	return
  3503     0B03                     __end_of_LCD_putc:
  3504                           
  3505                           	psect	text9
  3506     07EF                     __ptext9:	
  3507 ;; *************** function _setup2 *****************
  3508 ;; Defined at:
  3509 ;;		line 103 in file "main.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537     07EF                     _setup2:	
  3538                           ;psect for function _setup2
  3539                           
  3540     07EF                     l3164:	
  3541                           ;incstack = 0
  3542                           ; Regs used in _setup2: [wreg]
  3543                           
  3544                           
  3545                           ;main.c: 105:     OPTION_REG = 0b10000100;
  3546     07EF  3084               	movlw	132
  3547     07F0  1683               	bsf	3,5	;RP0=1, select bank1
  3548     07F1  1303               	bcf	3,6	;RP1=0, select bank1
  3549     07F2  0081               	movwf	1	;volatile
  3550                           
  3551                           ;main.c: 106:     INTCON = 0b11100000;
  3552     07F3  30E0               	movlw	224
  3553     07F4  008B               	movwf	11	;volatile
  3554                           
  3555                           ;main.c: 107:     TMR0 = 178;
  3556     07F5  30B2               	movlw	178
  3557     07F6  1283               	bcf	3,5	;RP0=0, select bank0
  3558     07F7  1303               	bcf	3,6	;RP1=0, select bank0
  3559     07F8  0081               	movwf	1	;volatile
  3560                           
  3561                           ;main.c: 108:     TRISB = 0b11111111;
  3562     07F9  30FF               	movlw	255
  3563     07FA  1683               	bsf	3,5	;RP0=1, select bank1
  3564     07FB  1303               	bcf	3,6	;RP1=0, select bank1
  3565     07FC  0086               	movwf	6	;volatile
  3566     07FD                     l156:
  3567     07FD  0008               	return
  3568     07FE                     __end_of_setup2:
  3569                           
  3570                           	psect	text10
  3571     0BCB                     __ptext10:	
  3572 ;; *************** function _mode3 *****************
  3573 ;; Defined at:
  3574 ;;		line 111 in file "main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          1       0       0       0       0
  3591 ;;      Totals:         1       0       0       0       0
  3592 ;;Total ram usage:        1 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     0BCB                     _mode3:	
  3603                           ;psect for function _mode3
  3604                           
  3605     0BCB                     l3166:	
  3606                           ;incstack = 0
  3607                           ; Regs used in _mode3: [wreg+status,2+status,0]
  3608                           
  3609                           
  3610                           ;main.c: 112:     tone = 1;
  3611     0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  3612     0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  3613     0BCD  01EA               	clrf	_tone
  3614     0BCE  0AEA               	incf	_tone,f
  3615     0BCF                     l3168:
  3616                           
  3617                           ;main.c: 113:     if (flag_2 == 0){
  3618     0BCF  0879               	movf	_flag_2,w
  3619     0BD0  047A               	iorwf	_flag_2+1,w
  3620     0BD1  1D03               	btfss	3,2
  3621     0BD2  2BD4               	goto	u4571
  3622     0BD3  2BD5               	goto	u4570
  3623     0BD4                     u4571:
  3624     0BD4  2BDB               	goto	l3172
  3625     0BD5                     u4570:
  3626     0BD5                     l3170:
  3627                           
  3628                           ;main.c: 114:         RC3 = !RC3;
  3629     0BD5  3008               	movlw	8
  3630     0BD6  0687               	xorwf	7,f
  3631                           
  3632                           ;main.c: 115:         flag_2 = hz_delay;
  3633     0BD7  3001               	movlw	1
  3634     0BD8  00F9               	movwf	_flag_2
  3635     0BD9  3000               	movlw	0
  3636     0BDA  00FA               	movwf	_flag_2+1
  3637     0BDB                     l3172:
  3638                           
  3639                           ;main.c: 117:     if (RB0 == 1 & flag == 0){
  3640     0BDB  1806               	btfsc	6,0	;volatile
  3641     0BDC  2BDE               	goto	u4581
  3642     0BDD  2BE0               	goto	u4580
  3643     0BDE                     u4581:
  3644     0BDE  3001               	movlw	1
  3645     0BDF  2BE1               	goto	u4582
  3646     0BE0                     u4580:
  3647     0BE0  3000               	movlw	0
  3648     0BE1                     u4582:
  3649     0BE1  00F3               	movwf	??_mode3
  3650     0BE2  085A               	movf	_flag,w
  3651     0BE3  045B               	iorwf	_flag+1,w
  3652     0BE4  1903               	btfsc	3,2
  3653     0BE5  2BE7               	goto	u4591
  3654     0BE6  2BE9               	goto	u4590
  3655     0BE7                     u4591:
  3656     0BE7  3001               	movlw	1
  3657     0BE8  2BEA               	goto	u4592
  3658     0BE9                     u4590:
  3659     0BE9  3000               	movlw	0
  3660     0BEA                     u4592:
  3661     0BEA  0573               	andwf	??_mode3,w
  3662     0BEB  3800               	iorlw	0
  3663     0BEC  1903               	skipnz
  3664     0BED  2BEF               	goto	u4601
  3665     0BEE  2BF0               	goto	u4600
  3666     0BEF                     u4601:
  3667     0BEF  2BFE               	goto	l3180
  3668     0BF0                     u4600:
  3669     0BF0                     l3174:
  3670                           
  3671                           ;main.c: 118:         flag = 500;
  3672     0BF0  30F4               	movlw	244
  3673     0BF1  00DA               	movwf	_flag
  3674     0BF2  3001               	movlw	1
  3675     0BF3  00DB               	movwf	_flag+1
  3676     0BF4                     l3176:
  3677                           
  3678                           ;main.c: 119:         a_sek = a_sek + 30;
  3679     0BF4  086D               	movf	_a_sek,w
  3680     0BF5  3E1E               	addlw	30
  3681     0BF6  00ED               	movwf	_a_sek
  3682     0BF7  086E               	movf	_a_sek+1,w
  3683     0BF8  1803               	skipnc
  3684     0BF9  3E01               	addlw	1
  3685     0BFA  3E00               	addlw	0
  3686     0BFB  00EE               	movwf	_a_sek+1
  3687     0BFC                     l3178:
  3688                           
  3689                           ;main.c: 120:         mode = 0;
  3690     0BFC  01DC               	clrf	_mode
  3691     0BFD  01DD               	clrf	_mode+1
  3692     0BFE                     l3180:
  3693                           
  3694                           ;main.c: 122:     if (RB1 == 1 & flag == 0){
  3695     0BFE  1886               	btfsc	6,1	;volatile
  3696     0BFF  2C01               	goto	u4611
  3697     0C00  2C03               	goto	u4610
  3698     0C01                     u4611:
  3699     0C01  3001               	movlw	1
  3700     0C02  2C04               	goto	u4612
  3701     0C03                     u4610:
  3702     0C03  3000               	movlw	0
  3703     0C04                     u4612:
  3704     0C04  00F3               	movwf	??_mode3
  3705     0C05  085A               	movf	_flag,w
  3706     0C06  045B               	iorwf	_flag+1,w
  3707     0C07  1903               	btfsc	3,2
  3708     0C08  2C0A               	goto	u4621
  3709     0C09  2C0C               	goto	u4620
  3710     0C0A                     u4621:
  3711     0C0A  3001               	movlw	1
  3712     0C0B  2C0D               	goto	u4622
  3713     0C0C                     u4620:
  3714     0C0C  3000               	movlw	0
  3715     0C0D                     u4622:
  3716     0C0D  0573               	andwf	??_mode3,w
  3717     0C0E  3800               	iorlw	0
  3718     0C0F  1903               	skipnz
  3719     0C10  2C12               	goto	u4631
  3720     0C11  2C13               	goto	u4630
  3721     0C12                     u4631:
  3722     0C12  2C19               	goto	l162
  3723     0C13                     u4630:
  3724     0C13                     l3182:
  3725                           
  3726                           ;main.c: 123:         flag = 500;
  3727     0C13  30F4               	movlw	244
  3728     0C14  00DA               	movwf	_flag
  3729     0C15  3001               	movlw	1
  3730     0C16  00DB               	movwf	_flag+1
  3731     0C17                     l3184:
  3732                           
  3733                           ;main.c: 124:         mode = 0;
  3734     0C17  01DC               	clrf	_mode
  3735     0C18  01DD               	clrf	_mode+1
  3736     0C19                     l162:
  3737     0C19  0008               	return
  3738     0C1A                     __end_of_mode3:
  3739                           
  3740                           	psect	text11
  3741     0F28                     __ptext11:	
  3742 ;; *************** function _mode2 *****************
  3743 ;; Defined at:
  3744 ;;		line 251 in file "main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          1       0       0       0       0
  3761 ;;      Totals:         1       0       0       0       0
  3762 ;;Total ram usage:        1 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 1
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772     0F28                     _mode2:	
  3773                           ;psect for function _mode2
  3774                           
  3775     0F28                     l3398:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _mode2: [wreg+status,2+status,0]
  3778                           
  3779                           
  3780                           ;main.c: 253:         if(RB7 == 1 & flag == 0){
  3781     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3782     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3783     0F2A  1B86               	btfsc	6,7	;volatile
  3784     0F2B  2F2D               	goto	u5091
  3785     0F2C  2F2F               	goto	u5090
  3786     0F2D                     u5091:
  3787     0F2D  3001               	movlw	1
  3788     0F2E  2F30               	goto	u5092
  3789     0F2F                     u5090:
  3790     0F2F  3000               	movlw	0
  3791     0F30                     u5092:
  3792     0F30  00F3               	movwf	??_mode2
  3793     0F31  085A               	movf	_flag,w
  3794     0F32  045B               	iorwf	_flag+1,w
  3795     0F33  1903               	btfsc	3,2
  3796     0F34  2F36               	goto	u5101
  3797     0F35  2F38               	goto	u5100
  3798     0F36                     u5101:
  3799     0F36  3001               	movlw	1
  3800     0F37  2F39               	goto	u5102
  3801     0F38                     u5100:
  3802     0F38  3000               	movlw	0
  3803     0F39                     u5102:
  3804     0F39  0573               	andwf	??_mode2,w
  3805     0F3A  3800               	iorlw	0
  3806     0F3B  1903               	skipnz
  3807     0F3C  2F3E               	goto	u5111
  3808     0F3D  2F3F               	goto	u5110
  3809     0F3E                     u5111:
  3810     0F3E  2F49               	goto	l3402
  3811     0F3F                     u5110:
  3812     0F3F                     l3400:
  3813                           
  3814                           ;main.c: 254:             a_tim++;
  3815     0F3F  3001               	movlw	1
  3816     0F40  07DE               	addwf	_a_tim,f
  3817     0F41  1803               	skipnc
  3818     0F42  0ADF               	incf	_a_tim+1,f
  3819     0F43  3000               	movlw	0
  3820     0F44  07DF               	addwf	_a_tim+1,f
  3821                           
  3822                           ;main.c: 255:             flag = 500;
  3823     0F45  30F4               	movlw	244
  3824     0F46  00DA               	movwf	_flag
  3825     0F47  3001               	movlw	1
  3826     0F48  00DB               	movwf	_flag+1
  3827     0F49                     l3402:
  3828                           
  3829                           ;main.c: 258:         if (RB6 == 1 & flag == 0){
  3830     0F49  1B06               	btfsc	6,6	;volatile
  3831     0F4A  2F4C               	goto	u5121
  3832     0F4B  2F4E               	goto	u5120
  3833     0F4C                     u5121:
  3834     0F4C  3001               	movlw	1
  3835     0F4D  2F4F               	goto	u5122
  3836     0F4E                     u5120:
  3837     0F4E  3000               	movlw	0
  3838     0F4F                     u5122:
  3839     0F4F  00F3               	movwf	??_mode2
  3840     0F50  085A               	movf	_flag,w
  3841     0F51  045B               	iorwf	_flag+1,w
  3842     0F52  1903               	btfsc	3,2
  3843     0F53  2F55               	goto	u5131
  3844     0F54  2F57               	goto	u5130
  3845     0F55                     u5131:
  3846     0F55  3001               	movlw	1
  3847     0F56  2F58               	goto	u5132
  3848     0F57                     u5130:
  3849     0F57  3000               	movlw	0
  3850     0F58                     u5132:
  3851     0F58  0573               	andwf	??_mode2,w
  3852     0F59  3800               	iorlw	0
  3853     0F5A  1903               	skipnz
  3854     0F5B  2F5D               	goto	u5141
  3855     0F5C  2F5E               	goto	u5140
  3856     0F5D                     u5141:
  3857     0F5D  2F68               	goto	l3406
  3858     0F5E                     u5140:
  3859     0F5E                     l3404:
  3860                           
  3861                           ;main.c: 259:             a_tim--;
  3862     0F5E  30FF               	movlw	255
  3863     0F5F  07DE               	addwf	_a_tim,f
  3864     0F60  1803               	skipnc
  3865     0F61  0ADF               	incf	_a_tim+1,f
  3866     0F62  30FF               	movlw	255
  3867     0F63  07DF               	addwf	_a_tim+1,f
  3868                           
  3869                           ;main.c: 260:             flag = 500;
  3870     0F64  30F4               	movlw	244
  3871     0F65  00DA               	movwf	_flag
  3872     0F66  3001               	movlw	1
  3873     0F67  00DB               	movwf	_flag+1
  3874     0F68                     l3406:
  3875                           
  3876                           ;main.c: 263:         if(RB5 == 1 & flag == 0){
  3877     0F68  1A86               	btfsc	6,5	;volatile
  3878     0F69  2F6B               	goto	u5151
  3879     0F6A  2F6D               	goto	u5150
  3880     0F6B                     u5151:
  3881     0F6B  3001               	movlw	1
  3882     0F6C  2F6E               	goto	u5152
  3883     0F6D                     u5150:
  3884     0F6D  3000               	movlw	0
  3885     0F6E                     u5152:
  3886     0F6E  00F3               	movwf	??_mode2
  3887     0F6F  085A               	movf	_flag,w
  3888     0F70  045B               	iorwf	_flag+1,w
  3889     0F71  1903               	btfsc	3,2
  3890     0F72  2F74               	goto	u5161
  3891     0F73  2F76               	goto	u5160
  3892     0F74                     u5161:
  3893     0F74  3001               	movlw	1
  3894     0F75  2F77               	goto	u5162
  3895     0F76                     u5160:
  3896     0F76  3000               	movlw	0
  3897     0F77                     u5162:
  3898     0F77  0573               	andwf	??_mode2,w
  3899     0F78  3800               	iorlw	0
  3900     0F79  1903               	skipnz
  3901     0F7A  2F7C               	goto	u5171
  3902     0F7B  2F7D               	goto	u5170
  3903     0F7C                     u5171:
  3904     0F7C  2F87               	goto	l3410
  3905     0F7D                     u5170:
  3906     0F7D                     l3408:
  3907                           
  3908                           ;main.c: 264:             a_min++;
  3909     0F7D  3001               	movlw	1
  3910     0F7E  07E0               	addwf	_a_min,f
  3911     0F7F  1803               	skipnc
  3912     0F80  0AE1               	incf	_a_min+1,f
  3913     0F81  3000               	movlw	0
  3914     0F82  07E1               	addwf	_a_min+1,f
  3915                           
  3916                           ;main.c: 265:             flag = 500;
  3917     0F83  30F4               	movlw	244
  3918     0F84  00DA               	movwf	_flag
  3919     0F85  3001               	movlw	1
  3920     0F86  00DB               	movwf	_flag+1
  3921     0F87                     l3410:
  3922                           
  3923                           ;main.c: 268:         if (RB4 == 1 & flag == 0){
  3924     0F87  1A06               	btfsc	6,4	;volatile
  3925     0F88  2F8A               	goto	u5181
  3926     0F89  2F8C               	goto	u5180
  3927     0F8A                     u5181:
  3928     0F8A  3001               	movlw	1
  3929     0F8B  2F8D               	goto	u5182
  3930     0F8C                     u5180:
  3931     0F8C  3000               	movlw	0
  3932     0F8D                     u5182:
  3933     0F8D  00F3               	movwf	??_mode2
  3934     0F8E  085A               	movf	_flag,w
  3935     0F8F  045B               	iorwf	_flag+1,w
  3936     0F90  1903               	btfsc	3,2
  3937     0F91  2F93               	goto	u5191
  3938     0F92  2F95               	goto	u5190
  3939     0F93                     u5191:
  3940     0F93  3001               	movlw	1
  3941     0F94  2F96               	goto	u5192
  3942     0F95                     u5190:
  3943     0F95  3000               	movlw	0
  3944     0F96                     u5192:
  3945     0F96  0573               	andwf	??_mode2,w
  3946     0F97  3800               	iorlw	0
  3947     0F98  1903               	skipnz
  3948     0F99  2F9B               	goto	u5201
  3949     0F9A  2F9C               	goto	u5200
  3950     0F9B                     u5201:
  3951     0F9B  2FA6               	goto	l3414
  3952     0F9C                     u5200:
  3953     0F9C                     l3412:
  3954                           
  3955                           ;main.c: 269:             a_min--;
  3956     0F9C  30FF               	movlw	255
  3957     0F9D  07E0               	addwf	_a_min,f
  3958     0F9E  1803               	skipnc
  3959     0F9F  0AE1               	incf	_a_min+1,f
  3960     0FA0  30FF               	movlw	255
  3961     0FA1  07E1               	addwf	_a_min+1,f
  3962                           
  3963                           ;main.c: 270:             flag = 500;
  3964     0FA2  30F4               	movlw	244
  3965     0FA3  00DA               	movwf	_flag
  3966     0FA4  3001               	movlw	1
  3967     0FA5  00DB               	movwf	_flag+1
  3968     0FA6                     l3414:
  3969                           
  3970                           ;main.c: 273:         if(RB3 == 1 & flag == 0){
  3971     0FA6  1986               	btfsc	6,3	;volatile
  3972     0FA7  2FA9               	goto	u5211
  3973     0FA8  2FAB               	goto	u5210
  3974     0FA9                     u5211:
  3975     0FA9  3001               	movlw	1
  3976     0FAA  2FAC               	goto	u5212
  3977     0FAB                     u5210:
  3978     0FAB  3000               	movlw	0
  3979     0FAC                     u5212:
  3980     0FAC  00F3               	movwf	??_mode2
  3981     0FAD  085A               	movf	_flag,w
  3982     0FAE  045B               	iorwf	_flag+1,w
  3983     0FAF  1903               	btfsc	3,2
  3984     0FB0  2FB2               	goto	u5221
  3985     0FB1  2FB4               	goto	u5220
  3986     0FB2                     u5221:
  3987     0FB2  3001               	movlw	1
  3988     0FB3  2FB5               	goto	u5222
  3989     0FB4                     u5220:
  3990     0FB4  3000               	movlw	0
  3991     0FB5                     u5222:
  3992     0FB5  0573               	andwf	??_mode2,w
  3993     0FB6  3800               	iorlw	0
  3994     0FB7  1903               	skipnz
  3995     0FB8  2FBA               	goto	u5231
  3996     0FB9  2FBB               	goto	u5230
  3997     0FBA                     u5231:
  3998     0FBA  2FC5               	goto	l3418
  3999     0FBB                     u5230:
  4000     0FBB                     l3416:
  4001                           
  4002                           ;main.c: 274:             a_sek++;
  4003     0FBB  3001               	movlw	1
  4004     0FBC  07ED               	addwf	_a_sek,f
  4005     0FBD  1803               	skipnc
  4006     0FBE  0AEE               	incf	_a_sek+1,f
  4007     0FBF  3000               	movlw	0
  4008     0FC0  07EE               	addwf	_a_sek+1,f
  4009                           
  4010                           ;main.c: 275:             flag = 500;
  4011     0FC1  30F4               	movlw	244
  4012     0FC2  00DA               	movwf	_flag
  4013     0FC3  3001               	movlw	1
  4014     0FC4  00DB               	movwf	_flag+1
  4015     0FC5                     l3418:
  4016                           
  4017                           ;main.c: 278:         if (RB2 == 1 & flag == 0){
  4018     0FC5  1906               	btfsc	6,2	;volatile
  4019     0FC6  2FC8               	goto	u5241
  4020     0FC7  2FCA               	goto	u5240
  4021     0FC8                     u5241:
  4022     0FC8  3001               	movlw	1
  4023     0FC9  2FCB               	goto	u5242
  4024     0FCA                     u5240:
  4025     0FCA  3000               	movlw	0
  4026     0FCB                     u5242:
  4027     0FCB  00F3               	movwf	??_mode2
  4028     0FCC  085A               	movf	_flag,w
  4029     0FCD  045B               	iorwf	_flag+1,w
  4030     0FCE  1903               	btfsc	3,2
  4031     0FCF  2FD1               	goto	u5251
  4032     0FD0  2FD3               	goto	u5250
  4033     0FD1                     u5251:
  4034     0FD1  3001               	movlw	1
  4035     0FD2  2FD4               	goto	u5252
  4036     0FD3                     u5250:
  4037     0FD3  3000               	movlw	0
  4038     0FD4                     u5252:
  4039     0FD4  0573               	andwf	??_mode2,w
  4040     0FD5  3800               	iorlw	0
  4041     0FD6  1903               	skipnz
  4042     0FD7  2FD9               	goto	u5261
  4043     0FD8  2FDA               	goto	u5260
  4044     0FD9                     u5261:
  4045     0FD9  2FE4               	goto	l3422
  4046     0FDA                     u5260:
  4047     0FDA                     l3420:
  4048                           
  4049                           ;main.c: 279:             a_sek--;
  4050     0FDA  30FF               	movlw	255
  4051     0FDB  07ED               	addwf	_a_sek,f
  4052     0FDC  1803               	skipnc
  4053     0FDD  0AEE               	incf	_a_sek+1,f
  4054     0FDE  30FF               	movlw	255
  4055     0FDF  07EE               	addwf	_a_sek+1,f
  4056                           
  4057                           ;main.c: 280:             flag = 500;
  4058     0FE0  30F4               	movlw	244
  4059     0FE1  00DA               	movwf	_flag
  4060     0FE2  3001               	movlw	1
  4061     0FE3  00DB               	movwf	_flag+1
  4062     0FE4                     l3422:
  4063                           
  4064                           ;main.c: 283:         if(RB0 == 1 & flag == 0){
  4065     0FE4  1806               	btfsc	6,0	;volatile
  4066     0FE5  2FE7               	goto	u5271
  4067     0FE6  2FE9               	goto	u5270
  4068     0FE7                     u5271:
  4069     0FE7  3001               	movlw	1
  4070     0FE8  2FEA               	goto	u5272
  4071     0FE9                     u5270:
  4072     0FE9  3000               	movlw	0
  4073     0FEA                     u5272:
  4074     0FEA  00F3               	movwf	??_mode2
  4075     0FEB  085A               	movf	_flag,w
  4076     0FEC  045B               	iorwf	_flag+1,w
  4077     0FED  1903               	btfsc	3,2
  4078     0FEE  2FF0               	goto	u5281
  4079     0FEF  2FF2               	goto	u5280
  4080     0FF0                     u5281:
  4081     0FF0  3001               	movlw	1
  4082     0FF1  2FF3               	goto	u5282
  4083     0FF2                     u5280:
  4084     0FF2  3000               	movlw	0
  4085     0FF3                     u5282:
  4086     0FF3  0573               	andwf	??_mode2,w
  4087     0FF4  3800               	iorlw	0
  4088     0FF5  1903               	skipnz
  4089     0FF6  2FF8               	goto	u5291
  4090     0FF7  2FF9               	goto	u5290
  4091     0FF8                     u5291:
  4092     0FF8  2FFF               	goto	l378
  4093     0FF9                     u5290:
  4094     0FF9                     l3424:
  4095                           
  4096                           ;main.c: 284:             mode = 0;
  4097     0FF9  01DC               	clrf	_mode
  4098     0FFA  01DD               	clrf	_mode+1
  4099     0FFB                     l3426:
  4100                           
  4101                           ;main.c: 285:             flag = 500;
  4102     0FFB  30F4               	movlw	244
  4103     0FFC  00DA               	movwf	_flag
  4104     0FFD  3001               	movlw	1
  4105     0FFE  00DB               	movwf	_flag+1
  4106     0FFF                     l378:
  4107     0FFF  0008               	return
  4108     1000                     __end_of_mode2:
  4109                           
  4110                           	psect	text12
  4111     0E50                     __ptext12:	
  4112 ;; *************** function _mode1 *****************
  4113 ;; Defined at:
  4114 ;;		line 208 in file "main.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0
  4131 ;;      Totals:         1       0       0       0       0
  4132 ;;Total ram usage:        1 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 1
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142     0E50                     _mode1:	
  4143                           ;psect for function _mode1
  4144                           
  4145     0E50                     l3368:	
  4146                           ;incstack = 0
  4147                           ; Regs used in _mode1: [wreg+status,2+status,0]
  4148                           
  4149                           
  4150                           ;main.c: 212:         if(RB7 == 1 & flag == 0){
  4151     0E50  1283               	bcf	3,5	;RP0=0, select bank0
  4152     0E51  1303               	bcf	3,6	;RP1=0, select bank0
  4153     0E52  1B86               	btfsc	6,7	;volatile
  4154     0E53  2E55               	goto	u4881
  4155     0E54  2E57               	goto	u4880
  4156     0E55                     u4881:
  4157     0E55  3001               	movlw	1
  4158     0E56  2E58               	goto	u4882
  4159     0E57                     u4880:
  4160     0E57  3000               	movlw	0
  4161     0E58                     u4882:
  4162     0E58  00F3               	movwf	??_mode1
  4163     0E59  085A               	movf	_flag,w
  4164     0E5A  045B               	iorwf	_flag+1,w
  4165     0E5B  1903               	btfsc	3,2
  4166     0E5C  2E5E               	goto	u4891
  4167     0E5D  2E60               	goto	u4890
  4168     0E5E                     u4891:
  4169     0E5E  3001               	movlw	1
  4170     0E5F  2E61               	goto	u4892
  4171     0E60                     u4890:
  4172     0E60  3000               	movlw	0
  4173     0E61                     u4892:
  4174     0E61  0573               	andwf	??_mode1,w
  4175     0E62  3800               	iorlw	0
  4176     0E63  1903               	skipnz
  4177     0E64  2E66               	goto	u4901
  4178     0E65  2E67               	goto	u4900
  4179     0E66                     u4901:
  4180     0E66  2E71               	goto	l3372
  4181     0E67                     u4900:
  4182     0E67                     l3370:
  4183                           
  4184                           ;main.c: 213:             tim++;
  4185     0E67  3001               	movlw	1
  4186     0E68  07E2               	addwf	_tim,f
  4187     0E69  1803               	skipnc
  4188     0E6A  0AE3               	incf	_tim+1,f
  4189     0E6B  3000               	movlw	0
  4190     0E6C  07E3               	addwf	_tim+1,f
  4191                           
  4192                           ;main.c: 214:             flag = 500;
  4193     0E6D  30F4               	movlw	244
  4194     0E6E  00DA               	movwf	_flag
  4195     0E6F  3001               	movlw	1
  4196     0E70  00DB               	movwf	_flag+1
  4197     0E71                     l3372:
  4198                           
  4199                           ;main.c: 217:         if (RB6 == 1 & flag == 0){
  4200     0E71  1B06               	btfsc	6,6	;volatile
  4201     0E72  2E74               	goto	u4911
  4202     0E73  2E76               	goto	u4910
  4203     0E74                     u4911:
  4204     0E74  3001               	movlw	1
  4205     0E75  2E77               	goto	u4912
  4206     0E76                     u4910:
  4207     0E76  3000               	movlw	0
  4208     0E77                     u4912:
  4209     0E77  00F3               	movwf	??_mode1
  4210     0E78  085A               	movf	_flag,w
  4211     0E79  045B               	iorwf	_flag+1,w
  4212     0E7A  1903               	btfsc	3,2
  4213     0E7B  2E7D               	goto	u4921
  4214     0E7C  2E7F               	goto	u4920
  4215     0E7D                     u4921:
  4216     0E7D  3001               	movlw	1
  4217     0E7E  2E80               	goto	u4922
  4218     0E7F                     u4920:
  4219     0E7F  3000               	movlw	0
  4220     0E80                     u4922:
  4221     0E80  0573               	andwf	??_mode1,w
  4222     0E81  3800               	iorlw	0
  4223     0E82  1903               	skipnz
  4224     0E83  2E85               	goto	u4931
  4225     0E84  2E86               	goto	u4930
  4226     0E85                     u4931:
  4227     0E85  2E90               	goto	l3376
  4228     0E86                     u4930:
  4229     0E86                     l3374:
  4230                           
  4231                           ;main.c: 218:             tim--;
  4232     0E86  30FF               	movlw	255
  4233     0E87  07E2               	addwf	_tim,f
  4234     0E88  1803               	skipnc
  4235     0E89  0AE3               	incf	_tim+1,f
  4236     0E8A  30FF               	movlw	255
  4237     0E8B  07E3               	addwf	_tim+1,f
  4238                           
  4239                           ;main.c: 219:             flag = 500;
  4240     0E8C  30F4               	movlw	244
  4241     0E8D  00DA               	movwf	_flag
  4242     0E8E  3001               	movlw	1
  4243     0E8F  00DB               	movwf	_flag+1
  4244     0E90                     l3376:
  4245                           
  4246                           ;main.c: 222:         if(RB5 == 1 & flag == 0){
  4247     0E90  1A86               	btfsc	6,5	;volatile
  4248     0E91  2E93               	goto	u4941
  4249     0E92  2E95               	goto	u4940
  4250     0E93                     u4941:
  4251     0E93  3001               	movlw	1
  4252     0E94  2E96               	goto	u4942
  4253     0E95                     u4940:
  4254     0E95  3000               	movlw	0
  4255     0E96                     u4942:
  4256     0E96  00F3               	movwf	??_mode1
  4257     0E97  085A               	movf	_flag,w
  4258     0E98  045B               	iorwf	_flag+1,w
  4259     0E99  1903               	btfsc	3,2
  4260     0E9A  2E9C               	goto	u4951
  4261     0E9B  2E9E               	goto	u4950
  4262     0E9C                     u4951:
  4263     0E9C  3001               	movlw	1
  4264     0E9D  2E9F               	goto	u4952
  4265     0E9E                     u4950:
  4266     0E9E  3000               	movlw	0
  4267     0E9F                     u4952:
  4268     0E9F  0573               	andwf	??_mode1,w
  4269     0EA0  3800               	iorlw	0
  4270     0EA1  1903               	skipnz
  4271     0EA2  2EA4               	goto	u4961
  4272     0EA3  2EA5               	goto	u4960
  4273     0EA4                     u4961:
  4274     0EA4  2EAF               	goto	l3380
  4275     0EA5                     u4960:
  4276     0EA5                     l3378:
  4277                           
  4278                           ;main.c: 223:             min++;
  4279     0EA5  3001               	movlw	1
  4280     0EA6  07E4               	addwf	_min,f
  4281     0EA7  1803               	skipnc
  4282     0EA8  0AE5               	incf	_min+1,f
  4283     0EA9  3000               	movlw	0
  4284     0EAA  07E5               	addwf	_min+1,f
  4285                           
  4286                           ;main.c: 224:             flag = 500;
  4287     0EAB  30F4               	movlw	244
  4288     0EAC  00DA               	movwf	_flag
  4289     0EAD  3001               	movlw	1
  4290     0EAE  00DB               	movwf	_flag+1
  4291     0EAF                     l3380:
  4292                           
  4293                           ;main.c: 227:         if (RB4 == 1 & flag == 0){
  4294     0EAF  1A06               	btfsc	6,4	;volatile
  4295     0EB0  2EB2               	goto	u4971
  4296     0EB1  2EB4               	goto	u4970
  4297     0EB2                     u4971:
  4298     0EB2  3001               	movlw	1
  4299     0EB3  2EB5               	goto	u4972
  4300     0EB4                     u4970:
  4301     0EB4  3000               	movlw	0
  4302     0EB5                     u4972:
  4303     0EB5  00F3               	movwf	??_mode1
  4304     0EB6  085A               	movf	_flag,w
  4305     0EB7  045B               	iorwf	_flag+1,w
  4306     0EB8  1903               	btfsc	3,2
  4307     0EB9  2EBB               	goto	u4981
  4308     0EBA  2EBD               	goto	u4980
  4309     0EBB                     u4981:
  4310     0EBB  3001               	movlw	1
  4311     0EBC  2EBE               	goto	u4982
  4312     0EBD                     u4980:
  4313     0EBD  3000               	movlw	0
  4314     0EBE                     u4982:
  4315     0EBE  0573               	andwf	??_mode1,w
  4316     0EBF  3800               	iorlw	0
  4317     0EC0  1903               	skipnz
  4318     0EC1  2EC3               	goto	u4991
  4319     0EC2  2EC4               	goto	u4990
  4320     0EC3                     u4991:
  4321     0EC3  2ECE               	goto	l3384
  4322     0EC4                     u4990:
  4323     0EC4                     l3382:
  4324                           
  4325                           ;main.c: 228:             min--;
  4326     0EC4  30FF               	movlw	255
  4327     0EC5  07E4               	addwf	_min,f
  4328     0EC6  1803               	skipnc
  4329     0EC7  0AE5               	incf	_min+1,f
  4330     0EC8  30FF               	movlw	255
  4331     0EC9  07E5               	addwf	_min+1,f
  4332                           
  4333                           ;main.c: 229:             flag = 500;
  4334     0ECA  30F4               	movlw	244
  4335     0ECB  00DA               	movwf	_flag
  4336     0ECC  3001               	movlw	1
  4337     0ECD  00DB               	movwf	_flag+1
  4338     0ECE                     l3384:
  4339                           
  4340                           ;main.c: 232:         if(RB3 == 1 & flag == 0){
  4341     0ECE  1986               	btfsc	6,3	;volatile
  4342     0ECF  2ED1               	goto	u5001
  4343     0ED0  2ED3               	goto	u5000
  4344     0ED1                     u5001:
  4345     0ED1  3001               	movlw	1
  4346     0ED2  2ED4               	goto	u5002
  4347     0ED3                     u5000:
  4348     0ED3  3000               	movlw	0
  4349     0ED4                     u5002:
  4350     0ED4  00F3               	movwf	??_mode1
  4351     0ED5  085A               	movf	_flag,w
  4352     0ED6  045B               	iorwf	_flag+1,w
  4353     0ED7  1903               	btfsc	3,2
  4354     0ED8  2EDA               	goto	u5011
  4355     0ED9  2EDC               	goto	u5010
  4356     0EDA                     u5011:
  4357     0EDA  3001               	movlw	1
  4358     0EDB  2EDD               	goto	u5012
  4359     0EDC                     u5010:
  4360     0EDC  3000               	movlw	0
  4361     0EDD                     u5012:
  4362     0EDD  0573               	andwf	??_mode1,w
  4363     0EDE  3800               	iorlw	0
  4364     0EDF  1903               	skipnz
  4365     0EE0  2EE2               	goto	u5021
  4366     0EE1  2EE3               	goto	u5020
  4367     0EE2                     u5021:
  4368     0EE2  2EED               	goto	l3388
  4369     0EE3                     u5020:
  4370     0EE3                     l3386:
  4371                           
  4372                           ;main.c: 233:             sek++;
  4373     0EE3  3001               	movlw	1
  4374     0EE4  07E6               	addwf	_sek,f
  4375     0EE5  1803               	skipnc
  4376     0EE6  0AE7               	incf	_sek+1,f
  4377     0EE7  3000               	movlw	0
  4378     0EE8  07E7               	addwf	_sek+1,f
  4379                           
  4380                           ;main.c: 234:             flag = 500;
  4381     0EE9  30F4               	movlw	244
  4382     0EEA  00DA               	movwf	_flag
  4383     0EEB  3001               	movlw	1
  4384     0EEC  00DB               	movwf	_flag+1
  4385     0EED                     l3388:
  4386                           
  4387                           ;main.c: 237:         if (RB2 == 1 & flag == 0){
  4388     0EED  1906               	btfsc	6,2	;volatile
  4389     0EEE  2EF0               	goto	u5031
  4390     0EEF  2EF2               	goto	u5030
  4391     0EF0                     u5031:
  4392     0EF0  3001               	movlw	1
  4393     0EF1  2EF3               	goto	u5032
  4394     0EF2                     u5030:
  4395     0EF2  3000               	movlw	0
  4396     0EF3                     u5032:
  4397     0EF3  00F3               	movwf	??_mode1
  4398     0EF4  085A               	movf	_flag,w
  4399     0EF5  045B               	iorwf	_flag+1,w
  4400     0EF6  1903               	btfsc	3,2
  4401     0EF7  2EF9               	goto	u5041
  4402     0EF8  2EFB               	goto	u5040
  4403     0EF9                     u5041:
  4404     0EF9  3001               	movlw	1
  4405     0EFA  2EFC               	goto	u5042
  4406     0EFB                     u5040:
  4407     0EFB  3000               	movlw	0
  4408     0EFC                     u5042:
  4409     0EFC  0573               	andwf	??_mode1,w
  4410     0EFD  3800               	iorlw	0
  4411     0EFE  1903               	skipnz
  4412     0EFF  2F01               	goto	u5051
  4413     0F00  2F02               	goto	u5050
  4414     0F01                     u5051:
  4415     0F01  2F0C               	goto	l3392
  4416     0F02                     u5050:
  4417     0F02                     l3390:
  4418                           
  4419                           ;main.c: 238:             sek--;
  4420     0F02  30FF               	movlw	255
  4421     0F03  07E6               	addwf	_sek,f
  4422     0F04  1803               	skipnc
  4423     0F05  0AE7               	incf	_sek+1,f
  4424     0F06  30FF               	movlw	255
  4425     0F07  07E7               	addwf	_sek+1,f
  4426                           
  4427                           ;main.c: 239:             flag = 500;
  4428     0F08  30F4               	movlw	244
  4429     0F09  00DA               	movwf	_flag
  4430     0F0A  3001               	movlw	1
  4431     0F0B  00DB               	movwf	_flag+1
  4432     0F0C                     l3392:
  4433                           
  4434                           ;main.c: 242:         if(RB0 == 1 & flag == 0){
  4435     0F0C  1806               	btfsc	6,0	;volatile
  4436     0F0D  2F0F               	goto	u5061
  4437     0F0E  2F11               	goto	u5060
  4438     0F0F                     u5061:
  4439     0F0F  3001               	movlw	1
  4440     0F10  2F12               	goto	u5062
  4441     0F11                     u5060:
  4442     0F11  3000               	movlw	0
  4443     0F12                     u5062:
  4444     0F12  00F3               	movwf	??_mode1
  4445     0F13  085A               	movf	_flag,w
  4446     0F14  045B               	iorwf	_flag+1,w
  4447     0F15  1903               	btfsc	3,2
  4448     0F16  2F18               	goto	u5071
  4449     0F17  2F1A               	goto	u5070
  4450     0F18                     u5071:
  4451     0F18  3001               	movlw	1
  4452     0F19  2F1B               	goto	u5072
  4453     0F1A                     u5070:
  4454     0F1A  3000               	movlw	0
  4455     0F1B                     u5072:
  4456     0F1B  0573               	andwf	??_mode1,w
  4457     0F1C  3800               	iorlw	0
  4458     0F1D  1903               	skipnz
  4459     0F1E  2F20               	goto	u5081
  4460     0F1F  2F21               	goto	u5080
  4461     0F20                     u5081:
  4462     0F20  2F27               	goto	l368
  4463     0F21                     u5080:
  4464     0F21                     l3394:
  4465                           
  4466                           ;main.c: 243:             mode = 0;
  4467     0F21  01DC               	clrf	_mode
  4468     0F22  01DD               	clrf	_mode+1
  4469     0F23                     l3396:
  4470                           
  4471                           ;main.c: 244:             flag = 500;
  4472     0F23  30F4               	movlw	244
  4473     0F24  00DA               	movwf	_flag
  4474     0F25  3001               	movlw	1
  4475     0F26  00DB               	movwf	_flag+1
  4476     0F27                     l368:
  4477     0F27  0008               	return
  4478     0F28                     __end_of_mode1:
  4479                           
  4480                           	psect	text13
  4481     0D96                     __ptext13:	
  4482 ;; *************** function ___xxtofl *****************
  4483 ;; Defined at:
  4484 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  sign            1    wreg     unsigned char 
  4487 ;;  val             4    3[COMMON] long 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  sign            1    4[BANK0 ] unsigned char 
  4490 ;;  arg             4    6[BANK0 ] unsigned long 
  4491 ;;  exp             1    5[BANK0 ] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4    3[COMMON] unsigned char 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         4       0       0       0       0
  4502 ;;      Locals:         0       6       0       0       0
  4503 ;;      Temps:          0       4       0       0       0
  4504 ;;      Totals:         4      10       0       0       0
  4505 ;;Total ram usage:       14 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515     0D96                     ___xxtofl:	
  4516                           ;psect for function ___xxtofl
  4517                           
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4521                           ;___xxtofl@sign stored from wreg
  4522     0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4523     0D97  1303               	bcf	3,6	;RP1=0, select bank0
  4524     0D98  00A4               	movwf	___xxtofl@sign
  4525     0D99                     l3606:
  4526     0D99  0824               	movf	___xxtofl@sign,w
  4527     0D9A  1903               	btfsc	3,2
  4528     0D9B  2D9D               	goto	u5691
  4529     0D9C  2D9E               	goto	u5690
  4530     0D9D                     u5691:
  4531     0D9D  2DB2               	goto	l3612
  4532     0D9E                     u5690:
  4533     0D9E                     l3608:
  4534     0D9E  1FF6               	btfss	___xxtofl@val+3,7
  4535     0D9F  2DA1               	goto	u5701
  4536     0DA0  2DA2               	goto	u5700
  4537     0DA1                     u5701:
  4538     0DA1  2DB2               	goto	l3612
  4539     0DA2                     u5700:
  4540     0DA2                     l3610:
  4541     0DA2  0973               	comf	___xxtofl@val,w
  4542     0DA3  00A6               	movwf	___xxtofl@arg
  4543     0DA4  0974               	comf	___xxtofl@val+1,w
  4544     0DA5  00A7               	movwf	___xxtofl@arg+1
  4545     0DA6  0975               	comf	___xxtofl@val+2,w
  4546     0DA7  00A8               	movwf	___xxtofl@arg+2
  4547     0DA8  0976               	comf	___xxtofl@val+3,w
  4548     0DA9  00A9               	movwf	___xxtofl@arg+3
  4549     0DAA  0AA6               	incf	___xxtofl@arg,f
  4550     0DAB  1903               	skipnz
  4551     0DAC  0AA7               	incf	___xxtofl@arg+1,f
  4552     0DAD  1903               	skipnz
  4553     0DAE  0AA8               	incf	___xxtofl@arg+2,f
  4554     0DAF  1903               	skipnz
  4555     0DB0  0AA9               	incf	___xxtofl@arg+3,f
  4556     0DB1  2DBA               	goto	l974
  4557     0DB2                     l3612:
  4558     0DB2  0876               	movf	___xxtofl@val+3,w
  4559     0DB3  00A9               	movwf	___xxtofl@arg+3
  4560     0DB4  0875               	movf	___xxtofl@val+2,w
  4561     0DB5  00A8               	movwf	___xxtofl@arg+2
  4562     0DB6  0874               	movf	___xxtofl@val+1,w
  4563     0DB7  00A7               	movwf	___xxtofl@arg+1
  4564     0DB8  0873               	movf	___xxtofl@val,w
  4565     0DB9  00A6               	movwf	___xxtofl@arg
  4566     0DBA                     l974:
  4567     0DBA  0876               	movf	___xxtofl@val+3,w
  4568     0DBB  0475               	iorwf	___xxtofl@val+2,w
  4569     0DBC  0474               	iorwf	___xxtofl@val+1,w
  4570     0DBD  0473               	iorwf	___xxtofl@val,w
  4571     0DBE  1D03               	skipz
  4572     0DBF  2DC1               	goto	u5711
  4573     0DC0  2DC2               	goto	u5710
  4574     0DC1                     u5711:
  4575     0DC1  2DCB               	goto	l3618
  4576     0DC2                     u5710:
  4577     0DC2                     l3614:
  4578     0DC2  3000               	movlw	0
  4579     0DC3  00F6               	movwf	?___xxtofl+3
  4580     0DC4  3000               	movlw	0
  4581     0DC5  00F5               	movwf	?___xxtofl+2
  4582     0DC6  3000               	movlw	0
  4583     0DC7  00F4               	movwf	?___xxtofl+1
  4584     0DC8  3000               	movlw	0
  4585     0DC9  00F3               	movwf	?___xxtofl
  4586     0DCA  2E4F               	goto	l976
  4587     0DCB                     l3618:
  4588     0DCB  3096               	movlw	150
  4589     0DCC  00A5               	movwf	___xxtofl@exp
  4590     0DCD  2DDB               	goto	l3622
  4591     0DCE                     l3620:
  4592     0DCE  3001               	movlw	1
  4593     0DCF  00A0               	movwf	??___xxtofl
  4594     0DD0  0820               	movf	??___xxtofl,w
  4595     0DD1  07A5               	addwf	___xxtofl@exp,f
  4596     0DD2  3001               	movlw	1
  4597     0DD3                     u5725:
  4598     0DD3  1003               	clrc
  4599     0DD4  0CA9               	rrf	___xxtofl@arg+3,f
  4600     0DD5  0CA8               	rrf	___xxtofl@arg+2,f
  4601     0DD6  0CA7               	rrf	___xxtofl@arg+1,f
  4602     0DD7  0CA6               	rrf	___xxtofl@arg,f
  4603     0DD8  3EFF               	addlw	-1
  4604     0DD9  1D03               	skipz
  4605     0DDA  2DD3               	goto	u5725
  4606     0DDB                     l3622:
  4607     0DDB  30FE               	movlw	254
  4608     0DDC  0529               	andwf	___xxtofl@arg+3,w
  4609     0DDD  1D03               	btfss	3,2
  4610     0DDE  2DE0               	goto	u5731
  4611     0DDF  2DE1               	goto	u5730
  4612     0DE0                     u5731:
  4613     0DE0  2DCE               	goto	l3620
  4614     0DE1                     u5730:
  4615     0DE1  2DFD               	goto	l980
  4616     0DE2                     l3624:
  4617     0DE2  3001               	movlw	1
  4618     0DE3  00A0               	movwf	??___xxtofl
  4619     0DE4  0820               	movf	??___xxtofl,w
  4620     0DE5  07A5               	addwf	___xxtofl@exp,f
  4621     0DE6                     l3626:
  4622     0DE6  3001               	movlw	1
  4623     0DE7  07A6               	addwf	___xxtofl@arg,f
  4624     0DE8  3000               	movlw	0
  4625     0DE9  1803               	skipnc
  4626     0DEA  3001               	movlw	1
  4627     0DEB  07A7               	addwf	___xxtofl@arg+1,f
  4628     0DEC  3000               	movlw	0
  4629     0DED  1803               	skipnc
  4630     0DEE  3001               	movlw	1
  4631     0DEF  07A8               	addwf	___xxtofl@arg+2,f
  4632     0DF0  3000               	movlw	0
  4633     0DF1  1803               	skipnc
  4634     0DF2  3001               	movlw	1
  4635     0DF3  07A9               	addwf	___xxtofl@arg+3,f
  4636     0DF4                     l3628:
  4637     0DF4  3001               	movlw	1
  4638     0DF5                     u5745:
  4639     0DF5  1003               	clrc
  4640     0DF6  0CA9               	rrf	___xxtofl@arg+3,f
  4641     0DF7  0CA8               	rrf	___xxtofl@arg+2,f
  4642     0DF8  0CA7               	rrf	___xxtofl@arg+1,f
  4643     0DF9  0CA6               	rrf	___xxtofl@arg,f
  4644     0DFA  3EFF               	addlw	-1
  4645     0DFB  1D03               	skipz
  4646     0DFC  2DF5               	goto	u5745
  4647     0DFD                     l980:
  4648     0DFD  30FF               	movlw	255
  4649     0DFE  0529               	andwf	___xxtofl@arg+3,w
  4650     0DFF  1D03               	btfss	3,2
  4651     0E00  2E02               	goto	u5751
  4652     0E01  2E03               	goto	u5750
  4653     0E02                     u5751:
  4654     0E02  2DE2               	goto	l3624
  4655     0E03                     u5750:
  4656     0E03  2E0F               	goto	l3632
  4657     0E04                     l3630:
  4658     0E04  3001               	movlw	1
  4659     0E05  02A5               	subwf	___xxtofl@exp,f
  4660     0E06  3001               	movlw	1
  4661     0E07  00A0               	movwf	??___xxtofl
  4662     0E08                     u5765:
  4663     0E08  1003               	clrc
  4664     0E09  0DA6               	rlf	___xxtofl@arg,f
  4665     0E0A  0DA7               	rlf	___xxtofl@arg+1,f
  4666     0E0B  0DA8               	rlf	___xxtofl@arg+2,f
  4667     0E0C  0DA9               	rlf	___xxtofl@arg+3,f
  4668     0E0D  0BA0               	decfsz	??___xxtofl,f
  4669     0E0E  2E08               	goto	u5765
  4670     0E0F                     l3632:
  4671     0E0F  1BA8               	btfsc	___xxtofl@arg+2,7
  4672     0E10  2E12               	goto	u5771
  4673     0E11  2E13               	goto	u5770
  4674     0E12                     u5771:
  4675     0E12  2E19               	goto	l987
  4676     0E13                     u5770:
  4677     0E13                     l3634:
  4678     0E13  3002               	movlw	2
  4679     0E14  0225               	subwf	___xxtofl@exp,w
  4680     0E15  1803               	skipnc
  4681     0E16  2E18               	goto	u5781
  4682     0E17  2E19               	goto	u5780
  4683     0E18                     u5781:
  4684     0E18  2E04               	goto	l3630
  4685     0E19                     u5780:
  4686     0E19                     l987:
  4687     0E19  1825               	btfsc	___xxtofl@exp,0
  4688     0E1A  2E1C               	goto	u5791
  4689     0E1B  2E1D               	goto	u5790
  4690     0E1C                     u5791:
  4691     0E1C  2E25               	goto	l988
  4692     0E1D                     u5790:
  4693     0E1D                     l3636:
  4694     0E1D  30FF               	movlw	255
  4695     0E1E  05A6               	andwf	___xxtofl@arg,f
  4696     0E1F  30FF               	movlw	255
  4697     0E20  05A7               	andwf	___xxtofl@arg+1,f
  4698     0E21  307F               	movlw	127
  4699     0E22  05A8               	andwf	___xxtofl@arg+2,f
  4700     0E23  30FF               	movlw	255
  4701     0E24  05A9               	andwf	___xxtofl@arg+3,f
  4702     0E25                     l988:
  4703     0E25  1003               	clrc
  4704     0E26  0CA5               	rrf	___xxtofl@exp,f
  4705     0E27                     l3638:
  4706     0E27  0825               	movf	___xxtofl@exp,w
  4707     0E28  00A0               	movwf	??___xxtofl
  4708     0E29  01A1               	clrf	??___xxtofl+1
  4709     0E2A  01A2               	clrf	??___xxtofl+2
  4710     0E2B  01A3               	clrf	??___xxtofl+3
  4711     0E2C  3018               	movlw	24
  4712     0E2D                     u5805:
  4713     0E2D  1003               	clrc
  4714     0E2E  0DA0               	rlf	??___xxtofl,f
  4715     0E2F  0DA1               	rlf	??___xxtofl+1,f
  4716     0E30  0DA2               	rlf	??___xxtofl+2,f
  4717     0E31  0DA3               	rlf	??___xxtofl+3,f
  4718     0E32                     u5800:
  4719     0E32  3EFF               	addlw	-1
  4720     0E33  1D03               	skipz
  4721     0E34  2E2D               	goto	u5805
  4722     0E35  0820               	movf	??___xxtofl,w
  4723     0E36  04A6               	iorwf	___xxtofl@arg,f
  4724     0E37  0821               	movf	??___xxtofl+1,w
  4725     0E38  04A7               	iorwf	___xxtofl@arg+1,f
  4726     0E39  0822               	movf	??___xxtofl+2,w
  4727     0E3A  04A8               	iorwf	___xxtofl@arg+2,f
  4728     0E3B  0823               	movf	??___xxtofl+3,w
  4729     0E3C  04A9               	iorwf	___xxtofl@arg+3,f
  4730     0E3D                     l3640:
  4731     0E3D  0824               	movf	___xxtofl@sign,w
  4732     0E3E  1903               	btfsc	3,2
  4733     0E3F  2E41               	goto	u5811
  4734     0E40  2E42               	goto	u5810
  4735     0E41                     u5811:
  4736     0E41  2E47               	goto	l3646
  4737     0E42                     u5810:
  4738     0E42                     l3642:
  4739     0E42  1FF6               	btfss	___xxtofl@val+3,7
  4740     0E43  2E45               	goto	u5821
  4741     0E44  2E46               	goto	u5820
  4742     0E45                     u5821:
  4743     0E45  2E47               	goto	l3646
  4744     0E46                     u5820:
  4745     0E46                     l3644:
  4746     0E46  17A9               	bsf	___xxtofl@arg+3,7
  4747     0E47                     l3646:
  4748     0E47  0829               	movf	___xxtofl@arg+3,w
  4749     0E48  00F6               	movwf	?___xxtofl+3
  4750     0E49  0828               	movf	___xxtofl@arg+2,w
  4751     0E4A  00F5               	movwf	?___xxtofl+2
  4752     0E4B  0827               	movf	___xxtofl@arg+1,w
  4753     0E4C  00F4               	movwf	?___xxtofl+1
  4754     0E4D  0826               	movf	___xxtofl@arg,w
  4755     0E4E  00F3               	movwf	?___xxtofl
  4756     0E4F                     l976:
  4757     0E4F  0008               	return
  4758     0E50                     __end_of___xxtofl:
  4759                           
  4760                           	psect	text14
  4761     0C8F                     __ptext14:	
  4762 ;; *************** function ___fltol *****************
  4763 ;; Defined at:
  4764 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  f1              4   36[BANK0 ] unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  exp1            1    8[COMMON] unsigned char 
  4769 ;;  sign1           1    7[COMMON] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  4   36[BANK0 ] long 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       4       0       0       0
  4780 ;;      Locals:         2       0       0       0       0
  4781 ;;      Temps:          0       4       0       0       0
  4782 ;;      Totals:         2       8       0       0       0
  4783 ;;Total ram usage:       10 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793     0C8F                     ___fltol:	
  4794                           ;psect for function ___fltol
  4795                           
  4796     0C8F                     l3428:	
  4797                           ;incstack = 0
  4798                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4799                           
  4800     0C8F  1003               	clrc
  4801     0C90  1283               	bcf	3,5	;RP0=0, select bank0
  4802     0C91  1303               	bcf	3,6	;RP1=0, select bank0
  4803     0C92  0D46               	rlf	___fltol@f1+2,w
  4804     0C93  0D47               	rlf	___fltol@f1+3,w
  4805     0C94  00F8               	movwf	___fltol@exp1
  4806     0C95  0878               	movf	___fltol@exp1,w
  4807     0C96  1D03               	btfss	3,2
  4808     0C97  2C99               	goto	u5301
  4809     0C98  2C9A               	goto	u5300
  4810     0C99                     u5301:
  4811     0C99  2CA3               	goto	l3434
  4812     0C9A                     u5300:
  4813     0C9A                     l3430:
  4814     0C9A  3000               	movlw	0
  4815     0C9B  00C7               	movwf	?___fltol+3
  4816     0C9C  3000               	movlw	0
  4817     0C9D  00C6               	movwf	?___fltol+2
  4818     0C9E  3000               	movlw	0
  4819     0C9F  00C5               	movwf	?___fltol+1
  4820     0CA0  3000               	movlw	0
  4821     0CA1  00C4               	movwf	?___fltol
  4822     0CA2  2D06               	goto	l727
  4823     0CA3                     l3434:
  4824     0CA3  0844               	movf	___fltol@f1,w
  4825     0CA4  00C8               	movwf	??___fltol
  4826     0CA5  0845               	movf	___fltol@f1+1,w
  4827     0CA6  00C9               	movwf	??___fltol+1
  4828     0CA7  0846               	movf	___fltol@f1+2,w
  4829     0CA8  00CA               	movwf	??___fltol+2
  4830     0CA9  0847               	movf	___fltol@f1+3,w
  4831     0CAA  00CB               	movwf	??___fltol+3
  4832     0CAB  301F               	movlw	31
  4833     0CAC                     u5315:
  4834     0CAC  1003               	clrc
  4835     0CAD  0CCB               	rrf	??___fltol+3,f
  4836     0CAE  0CCA               	rrf	??___fltol+2,f
  4837     0CAF  0CC9               	rrf	??___fltol+1,f
  4838     0CB0  0CC8               	rrf	??___fltol,f
  4839     0CB1                     u5310:
  4840     0CB1  3EFF               	addlw	-1
  4841     0CB2  1D03               	skipz
  4842     0CB3  2CAC               	goto	u5315
  4843     0CB4  0848               	movf	??___fltol,w
  4844     0CB5  00F7               	movwf	___fltol@sign1
  4845     0CB6                     l3436:
  4846     0CB6  17C6               	bsf	___fltol@f1+2,7
  4847     0CB7                     l3438:
  4848     0CB7  30FF               	movlw	255
  4849     0CB8  05C4               	andwf	___fltol@f1,f
  4850     0CB9  30FF               	movlw	255
  4851     0CBA  05C5               	andwf	___fltol@f1+1,f
  4852     0CBB  30FF               	movlw	255
  4853     0CBC  05C6               	andwf	___fltol@f1+2,f
  4854     0CBD  3000               	movlw	0
  4855     0CBE  05C7               	andwf	___fltol@f1+3,f
  4856     0CBF                     l3440:
  4857     0CBF  3096               	movlw	150
  4858     0CC0  02F8               	subwf	___fltol@exp1,f
  4859     0CC1                     l3442:
  4860     0CC1  1FF8               	btfss	___fltol@exp1,7
  4861     0CC2  2CC4               	goto	u5321
  4862     0CC3  2CC5               	goto	u5320
  4863     0CC4                     u5321:
  4864     0CC4  2CDF               	goto	l3452
  4865     0CC5                     u5320:
  4866     0CC5                     l3444:
  4867     0CC5  0878               	movf	___fltol@exp1,w
  4868     0CC6  3A80               	xorlw	128
  4869     0CC7  3E97               	addlw	151
  4870     0CC8  1803               	skipnc
  4871     0CC9  2CCB               	goto	u5331
  4872     0CCA  2CCC               	goto	u5330
  4873     0CCB                     u5331:
  4874     0CCB  2CCD               	goto	l3450
  4875     0CCC                     u5330:
  4876     0CCC  2C9A               	goto	l3430
  4877     0CCD                     l3450:
  4878     0CCD  3001               	movlw	1
  4879     0CCE                     u5345:
  4880     0CCE  1003               	clrc
  4881     0CCF  0CC7               	rrf	___fltol@f1+3,f
  4882     0CD0  0CC6               	rrf	___fltol@f1+2,f
  4883     0CD1  0CC5               	rrf	___fltol@f1+1,f
  4884     0CD2  0CC4               	rrf	___fltol@f1,f
  4885     0CD3  3EFF               	addlw	-1
  4886     0CD4  1D03               	skipz
  4887     0CD5  2CCE               	goto	u5345
  4888     0CD6  3001               	movlw	1
  4889     0CD7  00C8               	movwf	??___fltol
  4890     0CD8  0848               	movf	??___fltol,w
  4891     0CD9  07F8               	addwf	___fltol@exp1,f
  4892     0CDA  1D03               	btfss	3,2
  4893     0CDB  2CDD               	goto	u5351
  4894     0CDC  2CDE               	goto	u5350
  4895     0CDD                     u5351:
  4896     0CDD  2CCD               	goto	l3450
  4897     0CDE                     u5350:
  4898     0CDE  2CF6               	goto	l3460
  4899     0CDF                     l3452:
  4900     0CDF  3020               	movlw	32
  4901     0CE0  0278               	subwf	___fltol@exp1,w
  4902     0CE1  1C03               	skipc
  4903     0CE2  2CE4               	goto	u5361
  4904     0CE3  2CE5               	goto	u5360
  4905     0CE4                     u5361:
  4906     0CE4  2CF1               	goto	l734
  4907     0CE5                     u5360:
  4908     0CE5  2C9A               	goto	l3430
  4909     0CE6                     l3458:
  4910     0CE6  3001               	movlw	1
  4911     0CE7  00C8               	movwf	??___fltol
  4912     0CE8                     u5375:
  4913     0CE8  1003               	clrc
  4914     0CE9  0DC4               	rlf	___fltol@f1,f
  4915     0CEA  0DC5               	rlf	___fltol@f1+1,f
  4916     0CEB  0DC6               	rlf	___fltol@f1+2,f
  4917     0CEC  0DC7               	rlf	___fltol@f1+3,f
  4918     0CED  0BC8               	decfsz	??___fltol,f
  4919     0CEE  2CE8               	goto	u5375
  4920     0CEF  3001               	movlw	1
  4921     0CF0  02F8               	subwf	___fltol@exp1,f
  4922     0CF1                     l734:
  4923     0CF1  0878               	movf	___fltol@exp1,w
  4924     0CF2  1D03               	btfss	3,2
  4925     0CF3  2CF5               	goto	u5381
  4926     0CF4  2CF6               	goto	u5380
  4927     0CF5                     u5381:
  4928     0CF5  2CE6               	goto	l3458
  4929     0CF6                     u5380:
  4930     0CF6                     l3460:
  4931     0CF6  0877               	movf	___fltol@sign1,w
  4932     0CF7  1903               	btfsc	3,2
  4933     0CF8  2CFA               	goto	u5391
  4934     0CF9  2CFB               	goto	u5390
  4935     0CFA                     u5391:
  4936     0CFA  2D06               	goto	l737
  4937     0CFB                     u5390:
  4938     0CFB                     l3462:
  4939     0CFB  09C4               	comf	___fltol@f1,f
  4940     0CFC  09C5               	comf	___fltol@f1+1,f
  4941     0CFD  09C6               	comf	___fltol@f1+2,f
  4942     0CFE  09C7               	comf	___fltol@f1+3,f
  4943     0CFF  0AC4               	incf	___fltol@f1,f
  4944     0D00  1903               	skipnz
  4945     0D01  0AC5               	incf	___fltol@f1+1,f
  4946     0D02  1903               	skipnz
  4947     0D03  0AC6               	incf	___fltol@f1+2,f
  4948     0D04  1903               	skipnz
  4949     0D05  0AC7               	incf	___fltol@f1+3,f
  4950     0D06                     l737:
  4951     0D06                     l727:
  4952     0D06  0008               	return
  4953     0D07                     __end_of___fltol:
  4954                           
  4955                           	psect	text15
  4956     02F0                     __ptext15:	
  4957 ;; *************** function ___fldiv *****************
  4958 ;; Defined at:
  4959 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  a               4   10[BANK0 ] long 
  4962 ;;  b               4   14[BANK0 ] long 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  grs             4   30[BANK0 ] unsigned long 
  4965 ;;  rem             4   23[BANK0 ] unsigned long 
  4966 ;;  new_exp         2   28[BANK0 ] int 
  4967 ;;  aexp            1   35[BANK0 ] unsigned char 
  4968 ;;  bexp            1   34[BANK0 ] unsigned char 
  4969 ;;  sign            1   27[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  4   10[BANK0 ] unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, btemp+1
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         0       8       0       0       0
  4980 ;;      Locals:         0      13       0       0       0
  4981 ;;      Temps:          0       5       0       0       0
  4982 ;;      Totals:         0      26       0       0       0
  4983 ;;Total ram usage:       26 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993     02F0                     ___fldiv:	
  4994                           ;psect for function ___fldiv
  4995                           
  4996     02F0                     l3464:	
  4997                           ;incstack = 0
  4998                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4999                           
  5000     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  5001     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  5002     02F2  0831               	movf	___fldiv@b+3,w
  5003     02F3  3980               	andlw	128
  5004     02F4  00BB               	movwf	___fldiv@sign
  5005     02F5                     l3466:
  5006     02F5  0831               	movf	___fldiv@b+3,w
  5007     02F6  00B2               	movwf	??___fldiv
  5008     02F7  0732               	addwf	??___fldiv,w
  5009     02F8  00C2               	movwf	___fldiv@bexp
  5010     02F9                     l3468:
  5011     02F9  1FB0               	btfss	___fldiv@b+2,7
  5012     02FA  2AFC               	goto	u5401
  5013     02FB  2AFD               	goto	u5400
  5014     02FC                     u5401:
  5015     02FC  2AFE               	goto	l3472
  5016     02FD                     u5400:
  5017     02FD                     l3470:
  5018     02FD  1442               	bsf	___fldiv@bexp,0
  5019     02FE                     l3472:
  5020     02FE  0842               	movf	___fldiv@bexp,w
  5021     02FF  1903               	btfsc	3,2
  5022     0300  2B02               	goto	u5411
  5023     0301  2B03               	goto	u5410
  5024     0302                     u5411:
  5025     0302  2B13               	goto	l3482
  5026     0303                     u5410:
  5027     0303                     l3474:
  5028     0303  0A42               	incf	___fldiv@bexp,w
  5029     0304  1D03               	btfss	3,2
  5030     0305  2B07               	goto	u5421
  5031     0306  2B08               	goto	u5420
  5032     0307                     u5421:
  5033     0307  2B10               	goto	l3478
  5034     0308                     u5420:
  5035     0308                     l3476:
  5036     0308  3000               	movlw	0
  5037     0309  00B1               	movwf	___fldiv@b+3
  5038     030A  3000               	movlw	0
  5039     030B  00B0               	movwf	___fldiv@b+2
  5040     030C  3000               	movlw	0
  5041     030D  00AF               	movwf	___fldiv@b+1
  5042     030E  3000               	movlw	0
  5043     030F  00AE               	movwf	___fldiv@b
  5044     0310                     l3478:
  5045     0310  17B0               	bsf	___fldiv@b+2,7
  5046     0311                     l3480:
  5047     0311  01B1               	clrf	___fldiv@b+3
  5048     0312  2B1B               	goto	l3484
  5049     0313                     l3482:
  5050     0313  3000               	movlw	0
  5051     0314  00B1               	movwf	___fldiv@b+3
  5052     0315  3000               	movlw	0
  5053     0316  00B0               	movwf	___fldiv@b+2
  5054     0317  3000               	movlw	0
  5055     0318  00AF               	movwf	___fldiv@b+1
  5056     0319  3000               	movlw	0
  5057     031A  00AE               	movwf	___fldiv@b
  5058     031B                     l3484:
  5059     031B  082D               	movf	___fldiv@a+3,w
  5060     031C  3980               	andlw	128
  5061     031D  00B2               	movwf	??___fldiv
  5062     031E  0832               	movf	??___fldiv,w
  5063     031F  06BB               	xorwf	___fldiv@sign,f
  5064     0320                     l3486:
  5065     0320  082D               	movf	___fldiv@a+3,w
  5066     0321  00B2               	movwf	??___fldiv
  5067     0322  0732               	addwf	??___fldiv,w
  5068     0323  00C3               	movwf	___fldiv@aexp
  5069     0324                     l3488:
  5070     0324  1FAC               	btfss	___fldiv@a+2,7
  5071     0325  2B27               	goto	u5431
  5072     0326  2B28               	goto	u5430
  5073     0327                     u5431:
  5074     0327  2B29               	goto	l3492
  5075     0328                     u5430:
  5076     0328                     l3490:
  5077     0328  1443               	bsf	___fldiv@aexp,0
  5078     0329                     l3492:
  5079     0329  0843               	movf	___fldiv@aexp,w
  5080     032A  1903               	btfsc	3,2
  5081     032B  2B2D               	goto	u5441
  5082     032C  2B2E               	goto	u5440
  5083     032D                     u5441:
  5084     032D  2B3E               	goto	l3502
  5085     032E                     u5440:
  5086     032E                     l3494:
  5087     032E  0A43               	incf	___fldiv@aexp,w
  5088     032F  1D03               	btfss	3,2
  5089     0330  2B32               	goto	u5451
  5090     0331  2B33               	goto	u5450
  5091     0332                     u5451:
  5092     0332  2B3B               	goto	l3498
  5093     0333                     u5450:
  5094     0333                     l3496:
  5095     0333  3000               	movlw	0
  5096     0334  00AD               	movwf	___fldiv@a+3
  5097     0335  3000               	movlw	0
  5098     0336  00AC               	movwf	___fldiv@a+2
  5099     0337  3000               	movlw	0
  5100     0338  00AB               	movwf	___fldiv@a+1
  5101     0339  3000               	movlw	0
  5102     033A  00AA               	movwf	___fldiv@a
  5103     033B                     l3498:
  5104     033B  17AC               	bsf	___fldiv@a+2,7
  5105     033C                     l3500:
  5106     033C  01AD               	clrf	___fldiv@a+3
  5107     033D  2B46               	goto	l890
  5108     033E                     l3502:
  5109     033E  3000               	movlw	0
  5110     033F  00AD               	movwf	___fldiv@a+3
  5111     0340  3000               	movlw	0
  5112     0341  00AC               	movwf	___fldiv@a+2
  5113     0342  3000               	movlw	0
  5114     0343  00AB               	movwf	___fldiv@a+1
  5115     0344  3000               	movlw	0
  5116     0345  00AA               	movwf	___fldiv@a
  5117     0346                     l890:
  5118     0346  082D               	movf	___fldiv@a+3,w
  5119     0347  042C               	iorwf	___fldiv@a+2,w
  5120     0348  042B               	iorwf	___fldiv@a+1,w
  5121     0349  042A               	iorwf	___fldiv@a,w
  5122     034A  1D03               	skipz
  5123     034B  2B4D               	goto	u5461
  5124     034C  2B4E               	goto	u5460
  5125     034D                     u5461:
  5126     034D  2B67               	goto	l3512
  5127     034E                     u5460:
  5128     034E                     l3504:
  5129     034E  3000               	movlw	0
  5130     034F  00B1               	movwf	___fldiv@b+3
  5131     0350  3000               	movlw	0
  5132     0351  00B0               	movwf	___fldiv@b+2
  5133     0352  3000               	movlw	0
  5134     0353  00AF               	movwf	___fldiv@b+1
  5135     0354  3000               	movlw	0
  5136     0355  00AE               	movwf	___fldiv@b
  5137     0356  3080               	movlw	128
  5138     0357  04B0               	iorwf	___fldiv@b+2,f
  5139     0358  307F               	movlw	127
  5140     0359  04B1               	iorwf	___fldiv@b+3,f
  5141     035A                     l3506:
  5142     035A  083B               	movf	___fldiv@sign,w
  5143     035B  00B2               	movwf	??___fldiv
  5144     035C  0832               	movf	??___fldiv,w
  5145     035D  04B1               	iorwf	___fldiv@b+3,f
  5146     035E                     l3508:
  5147     035E  0831               	movf	___fldiv@b+3,w
  5148     035F  00AD               	movwf	?___fldiv+3
  5149     0360  0830               	movf	___fldiv@b+2,w
  5150     0361  00AC               	movwf	?___fldiv+2
  5151     0362  082F               	movf	___fldiv@b+1,w
  5152     0363  00AB               	movwf	?___fldiv+1
  5153     0364  082E               	movf	___fldiv@b,w
  5154     0365  00AA               	movwf	?___fldiv
  5155     0366  2CC2               	goto	l892
  5156     0367                     l3512:
  5157     0367  0842               	movf	___fldiv@bexp,w
  5158     0368  1D03               	btfss	3,2
  5159     0369  2B6B               	goto	u5471
  5160     036A  2B6C               	goto	u5470
  5161     036B                     u5471:
  5162     036B  2B75               	goto	l3518
  5163     036C                     u5470:
  5164     036C                     l3514:
  5165     036C  3000               	movlw	0
  5166     036D  00AD               	movwf	?___fldiv+3
  5167     036E  3000               	movlw	0
  5168     036F  00AC               	movwf	?___fldiv+2
  5169     0370  3000               	movlw	0
  5170     0371  00AB               	movwf	?___fldiv+1
  5171     0372  3000               	movlw	0
  5172     0373  00AA               	movwf	?___fldiv
  5173     0374  2CC2               	goto	l892
  5174     0375                     l3518:
  5175     0375  0842               	movf	___fldiv@bexp,w
  5176     0376  00B2               	movwf	??___fldiv
  5177     0377  01B3               	clrf	??___fldiv+1
  5178     0378  0833               	movf	??___fldiv+1,w
  5179     0379  00B5               	movwf	??___fldiv+3
  5180     037A  0843               	movf	___fldiv@aexp,w
  5181     037B  0232               	subwf	??___fldiv,w
  5182     037C  00B4               	movwf	??___fldiv+2
  5183     037D  1C03               	skipc
  5184     037E  03B5               	decf	??___fldiv+3,f
  5185     037F  0834               	movf	??___fldiv+2,w
  5186     0380  3E7F               	addlw	127
  5187     0381  00BC               	movwf	___fldiv@new_exp
  5188     0382  0835               	movf	??___fldiv+3,w
  5189     0383  1803               	skipnc
  5190     0384  3E01               	addlw	1
  5191     0385  3E00               	addlw	0
  5192     0386  00BD               	movwf	___fldiv@new_exp+1
  5193     0387                     l3520:
  5194     0387  0831               	movf	___fldiv@b+3,w
  5195     0388  00BA               	movwf	___fldiv@rem+3
  5196     0389  0830               	movf	___fldiv@b+2,w
  5197     038A  00B9               	movwf	___fldiv@rem+2
  5198     038B  082F               	movf	___fldiv@b+1,w
  5199     038C  00B8               	movwf	___fldiv@rem+1
  5200     038D  082E               	movf	___fldiv@b,w
  5201     038E  00B7               	movwf	___fldiv@rem
  5202     038F                     l3522:
  5203     038F  3000               	movlw	0
  5204     0390  00B1               	movwf	___fldiv@b+3
  5205     0391  3000               	movlw	0
  5206     0392  00B0               	movwf	___fldiv@b+2
  5207     0393  3000               	movlw	0
  5208     0394  00AF               	movwf	___fldiv@b+1
  5209     0395  3000               	movlw	0
  5210     0396  00AE               	movwf	___fldiv@b
  5211     0397                     l3524:
  5212     0397  3000               	movlw	0
  5213     0398  00C1               	movwf	___fldiv@grs+3
  5214     0399  3000               	movlw	0
  5215     039A  00C0               	movwf	___fldiv@grs+2
  5216     039B  3000               	movlw	0
  5217     039C  00BF               	movwf	___fldiv@grs+1
  5218     039D  3000               	movlw	0
  5219     039E  00BE               	movwf	___fldiv@grs
  5220     039F                     l3526:
  5221     039F  01C3               	clrf	___fldiv@aexp
  5222     03A0  2BEB               	goto	l3546
  5223     03A1                     l3528:
  5224     03A1  0843               	movf	___fldiv@aexp,w
  5225     03A2  1903               	btfsc	3,2
  5226     03A3  2BA5               	goto	u5481
  5227     03A4  2BA6               	goto	u5480
  5228     03A5                     u5481:
  5229     03A5  2BC6               	goto	l3538
  5230     03A6                     u5480:
  5231     03A6                     l3530:
  5232     03A6  3001               	movlw	1
  5233     03A7  00B2               	movwf	??___fldiv
  5234     03A8                     u5495:
  5235     03A8  1003               	clrc
  5236     03A9  0DB7               	rlf	___fldiv@rem,f
  5237     03AA  0DB8               	rlf	___fldiv@rem+1,f
  5238     03AB  0DB9               	rlf	___fldiv@rem+2,f
  5239     03AC  0DBA               	rlf	___fldiv@rem+3,f
  5240     03AD  0BB2               	decfsz	??___fldiv,f
  5241     03AE  2BA8               	goto	u5495
  5242     03AF  3001               	movlw	1
  5243     03B0  00B2               	movwf	??___fldiv
  5244     03B1                     u5505:
  5245     03B1  1003               	clrc
  5246     03B2  0DAE               	rlf	___fldiv@b,f
  5247     03B3  0DAF               	rlf	___fldiv@b+1,f
  5248     03B4  0DB0               	rlf	___fldiv@b+2,f
  5249     03B5  0DB1               	rlf	___fldiv@b+3,f
  5250     03B6  0BB2               	decfsz	??___fldiv,f
  5251     03B7  2BB1               	goto	u5505
  5252     03B8                     l3532:
  5253     03B8  1FC1               	btfss	___fldiv@grs+3,7
  5254     03B9  2BBB               	goto	u5511
  5255     03BA  2BBC               	goto	u5510
  5256     03BB                     u5511:
  5257     03BB  2BBD               	goto	l3536
  5258     03BC                     u5510:
  5259     03BC                     l3534:
  5260     03BC  142E               	bsf	___fldiv@b,0
  5261     03BD                     l3536:
  5262     03BD  3001               	movlw	1
  5263     03BE  00B2               	movwf	??___fldiv
  5264     03BF                     u5525:
  5265     03BF  1003               	clrc
  5266     03C0  0DBE               	rlf	___fldiv@grs,f
  5267     03C1  0DBF               	rlf	___fldiv@grs+1,f
  5268     03C2  0DC0               	rlf	___fldiv@grs+2,f
  5269     03C3  0DC1               	rlf	___fldiv@grs+3,f
  5270     03C4  0BB2               	decfsz	??___fldiv,f
  5271     03C5  2BBF               	goto	u5525
  5272     03C6                     l3538:
  5273     03C6  082D               	movf	___fldiv@a+3,w
  5274     03C7  023A               	subwf	___fldiv@rem+3,w
  5275     03C8  1D03               	skipz
  5276     03C9  2BD4               	goto	u5535
  5277     03CA  082C               	movf	___fldiv@a+2,w
  5278     03CB  0239               	subwf	___fldiv@rem+2,w
  5279     03CC  1D03               	skipz
  5280     03CD  2BD4               	goto	u5535
  5281     03CE  082B               	movf	___fldiv@a+1,w
  5282     03CF  0238               	subwf	___fldiv@rem+1,w
  5283     03D0  1D03               	skipz
  5284     03D1  2BD4               	goto	u5535
  5285     03D2  082A               	movf	___fldiv@a,w
  5286     03D3  0237               	subwf	___fldiv@rem,w
  5287     03D4                     u5535:
  5288     03D4  1C03               	skipc
  5289     03D5  2BD7               	goto	u5531
  5290     03D6  2BD8               	goto	u5530
  5291     03D7                     u5531:
  5292     03D7  2BE7               	goto	l3544
  5293     03D8                     u5530:
  5294     03D8                     l3540:
  5295     03D8  1741               	bsf	___fldiv@grs+3,6
  5296     03D9                     l3542:
  5297     03D9  082A               	movf	___fldiv@a,w
  5298     03DA  02B7               	subwf	___fldiv@rem,f
  5299     03DB  082B               	movf	___fldiv@a+1,w
  5300     03DC  1C03               	skipc
  5301     03DD  0F2B               	incfsz	___fldiv@a+1,w
  5302     03DE  02B8               	subwf	___fldiv@rem+1,f
  5303     03DF  082C               	movf	___fldiv@a+2,w
  5304     03E0  1C03               	skipc
  5305     03E1  0F2C               	incfsz	___fldiv@a+2,w
  5306     03E2  02B9               	subwf	___fldiv@rem+2,f
  5307     03E3  082D               	movf	___fldiv@a+3,w
  5308     03E4  1C03               	skipc
  5309     03E5  0F2D               	incfsz	___fldiv@a+3,w
  5310     03E6  02BA               	subwf	___fldiv@rem+3,f
  5311     03E7                     l3544:
  5312     03E7  3001               	movlw	1
  5313     03E8  00B2               	movwf	??___fldiv
  5314     03E9  0832               	movf	??___fldiv,w
  5315     03EA  07C3               	addwf	___fldiv@aexp,f
  5316     03EB                     l3546:
  5317     03EB  301A               	movlw	26
  5318     03EC  0243               	subwf	___fldiv@aexp,w
  5319     03ED  1C03               	skipc
  5320     03EE  2BF0               	goto	u5541
  5321     03EF  2BF1               	goto	u5540
  5322     03F0                     u5541:
  5323     03F0  2BA1               	goto	l3528
  5324     03F1                     u5540:
  5325     03F1                     l3548:
  5326     03F1  083A               	movf	___fldiv@rem+3,w
  5327     03F2  0439               	iorwf	___fldiv@rem+2,w
  5328     03F3  0438               	iorwf	___fldiv@rem+1,w
  5329     03F4  0437               	iorwf	___fldiv@rem,w
  5330     03F5  1903               	skipnz
  5331     03F6  2BF8               	goto	u5551
  5332     03F7  2BF9               	goto	u5550
  5333     03F8                     u5551:
  5334     03F8  2C18               	goto	l3562
  5335     03F9                     u5550:
  5336     03F9                     l3550:
  5337     03F9  143E               	bsf	___fldiv@grs,0
  5338     03FA  2C18               	goto	l3562
  5339     03FB                     l3552:
  5340     03FB  3001               	movlw	1
  5341     03FC  00B2               	movwf	??___fldiv
  5342     03FD                     u5565:
  5343     03FD  1003               	clrc
  5344     03FE  0DAE               	rlf	___fldiv@b,f
  5345     03FF  0DAF               	rlf	___fldiv@b+1,f
  5346     0400  0DB0               	rlf	___fldiv@b+2,f
  5347     0401  0DB1               	rlf	___fldiv@b+3,f
  5348     0402  0BB2               	decfsz	??___fldiv,f
  5349     0403  2BFD               	goto	u5565
  5350     0404                     l3554:
  5351     0404  1FC1               	btfss	___fldiv@grs+3,7
  5352     0405  2C07               	goto	u5571
  5353     0406  2C08               	goto	u5570
  5354     0407                     u5571:
  5355     0407  2C09               	goto	l3558
  5356     0408                     u5570:
  5357     0408                     l3556:
  5358     0408  142E               	bsf	___fldiv@b,0
  5359     0409                     l3558:
  5360     0409  3001               	movlw	1
  5361     040A  00B2               	movwf	??___fldiv
  5362     040B                     u5585:
  5363     040B  1003               	clrc
  5364     040C  0DBE               	rlf	___fldiv@grs,f
  5365     040D  0DBF               	rlf	___fldiv@grs+1,f
  5366     040E  0DC0               	rlf	___fldiv@grs+2,f
  5367     040F  0DC1               	rlf	___fldiv@grs+3,f
  5368     0410  0BB2               	decfsz	??___fldiv,f
  5369     0411  2C0B               	goto	u5585
  5370     0412                     l3560:
  5371     0412  30FF               	movlw	255
  5372     0413  07BC               	addwf	___fldiv@new_exp,f
  5373     0414  1803               	skipnc
  5374     0415  0ABD               	incf	___fldiv@new_exp+1,f
  5375     0416  30FF               	movlw	255
  5376     0417  07BD               	addwf	___fldiv@new_exp+1,f
  5377     0418                     l3562:
  5378     0418  1FB0               	btfss	___fldiv@b+2,7
  5379     0419  2C1B               	goto	u5591
  5380     041A  2C1C               	goto	u5590
  5381     041B                     u5591:
  5382     041B  2BFB               	goto	l3552
  5383     041C                     u5590:
  5384     041C                     l3564:
  5385     041C  01C3               	clrf	___fldiv@aexp
  5386     041D                     l3566:
  5387     041D  1FC1               	btfss	___fldiv@grs+3,7
  5388     041E  2C20               	goto	u5601
  5389     041F  2C21               	goto	u5600
  5390     0420                     u5601:
  5391     0420  2C3D               	goto	l3574
  5392     0421                     u5600:
  5393     0421                     l3568:
  5394     0421  30FF               	movlw	255
  5395     0422  053E               	andwf	___fldiv@grs,w
  5396     0423  00B2               	movwf	??___fldiv
  5397     0424  30FF               	movlw	255
  5398     0425  053F               	andwf	___fldiv@grs+1,w
  5399     0426  00B3               	movwf	??___fldiv+1
  5400     0427  30FF               	movlw	255
  5401     0428  0540               	andwf	___fldiv@grs+2,w
  5402     0429  00B4               	movwf	??___fldiv+2
  5403     042A  307F               	movlw	127
  5404     042B  0541               	andwf	___fldiv@grs+3,w
  5405     042C  00B5               	movwf	??___fldiv+3
  5406     042D  0835               	movf	??___fldiv+3,w
  5407     042E  0434               	iorwf	??___fldiv+2,w
  5408     042F  0433               	iorwf	??___fldiv+1,w
  5409     0430  0432               	iorwf	??___fldiv,w
  5410     0431  1903               	skipnz
  5411     0432  2C34               	goto	u5611
  5412     0433  2C35               	goto	u5610
  5413     0434                     u5611:
  5414     0434  2C38               	goto	l906
  5415     0435                     u5610:
  5416     0435                     l3570:
  5417     0435  01C3               	clrf	___fldiv@aexp
  5418     0436  0AC3               	incf	___fldiv@aexp,f
  5419     0437  2C3D               	goto	l3574
  5420     0438                     l906:
  5421     0438  1C2E               	btfss	___fldiv@b,0
  5422     0439  2C3B               	goto	u5621
  5423     043A  2C3C               	goto	u5620
  5424     043B                     u5621:
  5425     043B  2C3D               	goto	l3574
  5426     043C                     u5620:
  5427     043C  2C35               	goto	l3570
  5428     043D                     l3574:
  5429     043D  0843               	movf	___fldiv@aexp,w
  5430     043E  1903               	btfsc	3,2
  5431     043F  2C41               	goto	u5631
  5432     0440  2C42               	goto	u5630
  5433     0441                     u5631:
  5434     0441  2C73               	goto	l3584
  5435     0442                     u5630:
  5436     0442                     l3576:
  5437     0442  3001               	movlw	1
  5438     0443  07AE               	addwf	___fldiv@b,f
  5439     0444  3000               	movlw	0
  5440     0445  1803               	skipnc
  5441     0446  3001               	movlw	1
  5442     0447  07AF               	addwf	___fldiv@b+1,f
  5443     0448  3000               	movlw	0
  5444     0449  1803               	skipnc
  5445     044A  3001               	movlw	1
  5446     044B  07B0               	addwf	___fldiv@b+2,f
  5447     044C  3000               	movlw	0
  5448     044D  1803               	skipnc
  5449     044E  3001               	movlw	1
  5450     044F  07B1               	addwf	___fldiv@b+3,f
  5451     0450                     l3578:
  5452     0450  1C31               	btfss	___fldiv@b+3,0
  5453     0451  2C53               	goto	u5641
  5454     0452  2C54               	goto	u5640
  5455     0453                     u5641:
  5456     0453  2C73               	goto	l3584
  5457     0454                     u5640:
  5458     0454                     l3580:
  5459     0454  082E               	movf	___fldiv@b,w
  5460     0455  00B2               	movwf	??___fldiv
  5461     0456  082F               	movf	___fldiv@b+1,w
  5462     0457  00B3               	movwf	??___fldiv+1
  5463     0458  0830               	movf	___fldiv@b+2,w
  5464     0459  00B4               	movwf	??___fldiv+2
  5465     045A  0831               	movf	___fldiv@b+3,w
  5466     045B  00B5               	movwf	??___fldiv+3
  5467     045C  3001               	movlw	1
  5468     045D  00B6               	movwf	??___fldiv+4
  5469     045E                     u5655:
  5470     045E  0D35               	rlf	??___fldiv+3,w
  5471     045F  0CB5               	rrf	??___fldiv+3,f
  5472     0460  0CB4               	rrf	??___fldiv+2,f
  5473     0461  0CB3               	rrf	??___fldiv+1,f
  5474     0462  0CB2               	rrf	??___fldiv,f
  5475     0463                     u5650:
  5476     0463  0BB6               	decfsz	??___fldiv+4,f
  5477     0464  2C5E               	goto	u5655
  5478     0465  0835               	movf	??___fldiv+3,w
  5479     0466  00B1               	movwf	___fldiv@b+3
  5480     0467  0834               	movf	??___fldiv+2,w
  5481     0468  00B0               	movwf	___fldiv@b+2
  5482     0469  0833               	movf	??___fldiv+1,w
  5483     046A  00AF               	movwf	___fldiv@b+1
  5484     046B  0832               	movf	??___fldiv,w
  5485     046C  00AE               	movwf	___fldiv@b
  5486     046D                     l3582:
  5487     046D  3001               	movlw	1
  5488     046E  07BC               	addwf	___fldiv@new_exp,f
  5489     046F  1803               	skipnc
  5490     0470  0ABD               	incf	___fldiv@new_exp+1,f
  5491     0471  3000               	movlw	0
  5492     0472  07BD               	addwf	___fldiv@new_exp+1,f
  5493     0473                     l3584:
  5494     0473  083D               	movf	___fldiv@new_exp+1,w
  5495     0474  3A80               	xorlw	128
  5496     0475  00FF               	movwf	btemp+1
  5497     0476  3080               	movlw	128
  5498     0477  027F               	subwf	btemp+1,w
  5499     0478  1D03               	skipz
  5500     0479  2C7C               	goto	u5665
  5501     047A  30FF               	movlw	255
  5502     047B  023C               	subwf	___fldiv@new_exp,w
  5503     047C                     u5665:
  5504     047C  1C03               	skipc
  5505     047D  2C7F               	goto	u5661
  5506     047E  2C80               	goto	u5660
  5507     047F                     u5661:
  5508     047F  2C8E               	goto	l3588
  5509     0480                     u5660:
  5510     0480                     l3586:
  5511     0480  30FF               	movlw	255
  5512     0481  1283               	bcf	3,5	;RP0=0, select bank0
  5513     0482  1303               	bcf	3,6	;RP1=0, select bank0
  5514     0483  00BC               	movwf	___fldiv@new_exp
  5515     0484  3000               	movlw	0
  5516     0485  00BD               	movwf	___fldiv@new_exp+1
  5517     0486  3000               	movlw	0
  5518     0487  00B1               	movwf	___fldiv@b+3
  5519     0488  3000               	movlw	0
  5520     0489  00B0               	movwf	___fldiv@b+2
  5521     048A  3000               	movlw	0
  5522     048B  00AF               	movwf	___fldiv@b+1
  5523     048C  3000               	movlw	0
  5524     048D  00AE               	movwf	___fldiv@b
  5525     048E                     l3588:
  5526     048E  1283               	bcf	3,5	;RP0=0, select bank0
  5527     048F  1303               	bcf	3,6	;RP1=0, select bank0
  5528     0490  083D               	movf	___fldiv@new_exp+1,w
  5529     0491  3A80               	xorlw	128
  5530     0492  00FF               	movwf	btemp+1
  5531     0493  3080               	movlw	128
  5532     0494  027F               	subwf	btemp+1,w
  5533     0495  1D03               	skipz
  5534     0496  2C99               	goto	u5675
  5535     0497  3001               	movlw	1
  5536     0498  023C               	subwf	___fldiv@new_exp,w
  5537     0499                     u5675:
  5538     0499  1803               	skipnc
  5539     049A  2C9C               	goto	u5671
  5540     049B  2C9D               	goto	u5670
  5541     049C                     u5671:
  5542     049C  2CAA               	goto	l912
  5543     049D                     u5670:
  5544     049D                     l3590:
  5545     049D  1283               	bcf	3,5	;RP0=0, select bank0
  5546     049E  1303               	bcf	3,6	;RP1=0, select bank0
  5547     049F  01BC               	clrf	___fldiv@new_exp
  5548     04A0  01BD               	clrf	___fldiv@new_exp+1
  5549     04A1                     l3592:
  5550     04A1  3000               	movlw	0
  5551     04A2  00B1               	movwf	___fldiv@b+3
  5552     04A3  3000               	movlw	0
  5553     04A4  00B0               	movwf	___fldiv@b+2
  5554     04A5  3000               	movlw	0
  5555     04A6  00AF               	movwf	___fldiv@b+1
  5556     04A7  3000               	movlw	0
  5557     04A8  00AE               	movwf	___fldiv@b
  5558     04A9                     l3594:
  5559     04A9  01BB               	clrf	___fldiv@sign
  5560     04AA                     l912:
  5561     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  5562     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  5563     04AC  083C               	movf	___fldiv@new_exp,w
  5564     04AD  00C2               	movwf	___fldiv@bexp
  5565     04AE                     l3596:
  5566     04AE  1C42               	btfss	___fldiv@bexp,0
  5567     04AF  2CB1               	goto	u5681
  5568     04B0  2CB2               	goto	u5680
  5569     04B1                     u5681:
  5570     04B1  2CB4               	goto	l3600
  5571     04B2                     u5680:
  5572     04B2                     l3598:
  5573     04B2  17B0               	bsf	___fldiv@b+2,7
  5574     04B3  2CB8               	goto	l914
  5575     04B4                     l3600:
  5576     04B4  307F               	movlw	127
  5577     04B5  00B2               	movwf	??___fldiv
  5578     04B6  0832               	movf	??___fldiv,w
  5579     04B7  05B0               	andwf	___fldiv@b+2,f
  5580     04B8                     l914:
  5581     04B8  0842               	movf	___fldiv@bexp,w
  5582     04B9  00B2               	movwf	??___fldiv
  5583     04BA  1003               	clrc
  5584     04BB  0C32               	rrf	??___fldiv,w
  5585     04BC  00B1               	movwf	___fldiv@b+3
  5586     04BD  083B               	movf	___fldiv@sign,w
  5587     04BE  00B2               	movwf	??___fldiv
  5588     04BF  0832               	movf	??___fldiv,w
  5589     04C0  04B1               	iorwf	___fldiv@b+3,f
  5590     04C1  2B5E               	goto	l3508
  5591     04C2                     l892:
  5592     04C2  0008               	return
  5593     04C3                     __end_of___fldiv:
  5594                           
  5595                           	psect	text16
  5596     0C1A                     __ptext16:	
  5597 ;; *************** function _LCD_Init *****************
  5598 ;; Defined at:
  5599 ;;		line 45 in file "lcd.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  cmd             1    0[BANK0 ] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      _Bool 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0, pclath, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         0       0       0       0       0
  5614 ;;      Locals:         0       1       0       0       0
  5615 ;;      Temps:          2       0       0       0       0
  5616 ;;      Totals:         2       1       0       0       0
  5617 ;;Total ram usage:        3 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; Hardware stack levels required when called: 3
  5620 ;; This function calls:
  5621 ;;		_LCD_Write
  5622 ;; This function is called by:
  5623 ;;		_main
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627     0C1A                     _LCD_Init:	
  5628                           ;psect for function _LCD_Init
  5629                           
  5630     0C1A                     l3132:	
  5631                           ;incstack = 0
  5632                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5633                           
  5634                           
  5635                           ;lcd.c: 47:     _delay((unsigned long)((20)*(10000000/4000.0)));
  5636     0C1A  3041               	movlw	65
  5637     0C1B  00F8               	movwf	??_LCD_Init+1
  5638     0C1C  30EE               	movlw	238
  5639     0C1D  00F7               	movwf	??_LCD_Init
  5640     0C1E                     u6107:
  5641     0C1E  0BF7               	decfsz	??_LCD_Init,f
  5642     0C1F  2C1E               	goto	u6107
  5643     0C20  0BF8               	decfsz	??_LCD_Init+1,f
  5644     0C21  2C1E               	goto	u6107
  5645     0C22  0000               	nop
  5646     0C23                     l3134:
  5647                           
  5648                           ;lcd.c: 50:     LCD_Write(0x03);
  5649     0C23  3003               	movlw	3
  5650     0C24  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5651     0C29                     l3136:
  5652                           
  5653                           ;lcd.c: 51:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5654     0C29  3011               	movlw	17
  5655     0C2A  00F8               	movwf	??_LCD_Init+1
  5656     0C2B  303A               	movlw	58
  5657     0C2C  00F7               	movwf	??_LCD_Init
  5658     0C2D                     u6117:
  5659     0C2D  0BF7               	decfsz	??_LCD_Init,f
  5660     0C2E  2C2D               	goto	u6117
  5661     0C2F  0BF8               	decfsz	??_LCD_Init+1,f
  5662     0C30  2C2D               	goto	u6117
  5663     0C31  0000               	nop
  5664                           
  5665                           ;lcd.c: 52:     LCD_Write(0x03);
  5666     0C32  3003               	movlw	3
  5667     0C33  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5668     0C38                     l3138:
  5669                           
  5670                           ;lcd.c: 53:     _delay((unsigned long)((16)*(10000000/4000.0)));
  5671     0C38  3034               	movlw	52
  5672     0C39  00F8               	movwf	??_LCD_Init+1
  5673     0C3A  30F1               	movlw	241
  5674     0C3B  00F7               	movwf	??_LCD_Init
  5675     0C3C                     u6127:
  5676     0C3C  0BF7               	decfsz	??_LCD_Init,f
  5677     0C3D  2C3C               	goto	u6127
  5678     0C3E  0BF8               	decfsz	??_LCD_Init+1,f
  5679     0C3F  2C3C               	goto	u6127
  5680     0C40  2C41               	nop2
  5681     0C41                     l3140:
  5682                           
  5683                           ;lcd.c: 54:     LCD_Write(0x03);
  5684     0C41  3003               	movlw	3
  5685     0C42  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5686     0C47                     l3142:
  5687                           
  5688                           ;lcd.c: 57:     LCD_Write(0x02);
  5689     0C47  3002               	movlw	2
  5690     0C48  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5691     0C4D                     l3144:
  5692     0C4D  3002               	movlw	2
  5693     0C4E  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5694     0C53                     l3146:
  5695     0C53  3008               	movlw	8
  5696     0C54  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5697     0C59                     l3148:
  5698     0C59  3000               	movlw	0
  5699     0C5A  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5700     0C5F                     l3150:
  5701     0C5F  3006               	movlw	6
  5702     0C60  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5703     0C65                     l3152:
  5704     0C65  3008               	movlw	8
  5705     0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5706     0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5707     0C68  00A0               	movwf	LCD_Init@cmd
  5708     0C69                     l3154:
  5709     0C69  1520               	bsf	LCD_Init@cmd,2
  5710     0C6A                     l3160:
  5711     0C6A  0820               	movf	LCD_Init@cmd,w
  5712     0C6B  00F7               	movwf	??_LCD_Init
  5713     0C6C  3004               	movlw	4
  5714     0C6D                     u4565:
  5715     0C6D  1003               	clrc
  5716     0C6E  0CF7               	rrf	??_LCD_Init,f
  5717     0C6F  3EFF               	addlw	-1
  5718     0C70  1D03               	skipz
  5719     0C71  2C6D               	goto	u4565
  5720     0C72  0877               	movf	??_LCD_Init,w
  5721     0C73  390F               	andlw	15
  5722     0C74  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5723     0C79  1283               	bcf	3,5	;RP0=0, select bank0
  5724     0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  5725     0C7B  0820               	movf	LCD_Init@cmd,w
  5726     0C7C  390F               	andlw	15
  5727     0C7D  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5728     0C82                     l42:	
  5729                           ;lcd.c: 67:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while (
      +                           0 );
  5730                           
  5731     0C82  3000               	movlw	0
  5732     0C83  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5733     0C88  3001               	movlw	1
  5734     0C89  120A  158A  2273  120A  158A  	fcall	_LCD_Write
  5735     0C8E                     l44:
  5736     0C8E  0008               	return
  5737     0C8F                     __end_of_LCD_Init:
  5738                           
  5739                           	psect	text17
  5740     0A73                     __ptext17:	
  5741 ;; *************** function _LCD_Write *****************
  5742 ;; Defined at:
  5743 ;;		line 34 in file "lcd.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  c               1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  c               1    6[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         1       0       0       0       0
  5759 ;;      Temps:          2       0       0       0       0
  5760 ;;      Totals:         3       0       0       0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 2
  5764 ;; This function calls:
  5765 ;;		_LCD_Out
  5766 ;; This function is called by:
  5767 ;;		_LCD_Init
  5768 ;;		_update
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772     0A73                     _LCD_Write:	
  5773                           ;psect for function _LCD_Write
  5774                           
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _LCD_Write: [wreg+status,2+status,0+pclath+cstack]
  5778                           ;LCD_Write@c stored from wreg
  5779     0A73  00F6               	movwf	LCD_Write@c
  5780     0A74                     l2996:
  5781                           
  5782                           ;lcd.c: 36:     RE1 = 0;
  5783     0A74  1283               	bcf	3,5	;RP0=0, select bank0
  5784     0A75  1303               	bcf	3,6	;RP1=0, select bank0
  5785     0A76  1089               	bcf	9,1	;volatile
  5786     0A77                     l2998:
  5787                           
  5788                           ;lcd.c: 37:     LCD_Out(c);
  5789     0A77  0876               	movf	LCD_Write@c,w
  5790     0A78  120A  158A  228D  120A  158A  	fcall	_LCD_Out
  5791     0A7D                     l3000:
  5792                           
  5793                           ;lcd.c: 39:     RE0 = 1;
  5794     0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  5795     0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  5796     0A7F  1409               	bsf	9,0	;volatile
  5797     0A80                     l3002:
  5798                           
  5799                           ;lcd.c: 40:     _delay((unsigned long)((4)*(10000000/4000.0)));
  5800     0A80  300D               	movlw	13
  5801     0A81  00F5               	movwf	??_LCD_Write+1
  5802     0A82  30FB               	movlw	251
  5803     0A83  00F4               	movwf	??_LCD_Write
  5804     0A84                     u6137:
  5805     0A84  0BF4               	decfsz	??_LCD_Write,f
  5806     0A85  2A84               	goto	u6137
  5807     0A86  0BF5               	decfsz	??_LCD_Write+1,f
  5808     0A87  2A84               	goto	u6137
  5809     0A88  2A89               	nop2
  5810     0A89                     l3004:
  5811                           
  5812                           ;lcd.c: 41:     RE0 = 0;
  5813     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5814     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5815     0A8B  1009               	bcf	9,0	;volatile
  5816     0A8C                     l28:
  5817     0A8C  0008               	return
  5818     0A8D                     __end_of_LCD_Write:
  5819                           
  5820                           	psect	text18
  5821     0A8D                     __ptext18:	
  5822 ;; *************** function _LCD_Out *****************
  5823 ;; Defined at:
  5824 ;;		line 15 in file "lcd.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  c               1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  c               1    3[COMMON] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         0       0       0       0       0
  5839 ;;      Locals:         1       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0
  5841 ;;      Totals:         1       0       0       0       0
  5842 ;;Total ram usage:        1 bytes
  5843 ;; Hardware stack levels used: 1
  5844 ;; Hardware stack levels required when called: 1
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_LCD_Write
  5849 ;;		_LCD_putc
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853     0A8D                     _LCD_Out:	
  5854                           ;psect for function _LCD_Out
  5855                           
  5856                           
  5857                           ;incstack = 0
  5858                           ; Regs used in _LCD_Out: [wreg]
  5859                           ;LCD_Out@c stored from wreg
  5860     0A8D  00F3               	movwf	LCD_Out@c
  5861     0A8E                     l2896:
  5862                           
  5863                           ;lcd.c: 16:     if(c & 1)
  5864     0A8E  1C73               	btfss	LCD_Out@c,0
  5865     0A8F  2A91               	goto	u4111
  5866     0A90  2A92               	goto	u4110
  5867     0A91                     u4111:
  5868     0A91  2A96               	goto	l17
  5869     0A92                     u4110:
  5870     0A92                     l2898:
  5871                           
  5872                           ;lcd.c: 17:         RD4 = 1;
  5873     0A92  1283               	bcf	3,5	;RP0=0, select bank0
  5874     0A93  1303               	bcf	3,6	;RP1=0, select bank0
  5875     0A94  1608               	bsf	8,4	;volatile
  5876     0A95  2A99               	goto	l18
  5877     0A96                     l17:	
  5878                           ;lcd.c: 18:     else
  5879                           
  5880                           
  5881                           ;lcd.c: 19:        RD4 = 0;
  5882     0A96  1283               	bcf	3,5	;RP0=0, select bank0
  5883     0A97  1303               	bcf	3,6	;RP1=0, select bank0
  5884     0A98  1208               	bcf	8,4	;volatile
  5885     0A99                     l18:
  5886                           
  5887                           ;lcd.c: 20:     if(c & 2)
  5888     0A99  1CF3               	btfss	LCD_Out@c,1
  5889     0A9A  2A9C               	goto	u4121
  5890     0A9B  2A9D               	goto	u4120
  5891     0A9C                     u4121:
  5892     0A9C  2A9F               	goto	l19
  5893     0A9D                     u4120:
  5894     0A9D                     l2900:
  5895                           
  5896                           ;lcd.c: 21:        RD5 = 1;
  5897     0A9D  1688               	bsf	8,5	;volatile
  5898     0A9E  2AA0               	goto	l20
  5899     0A9F                     l19:	
  5900                           ;lcd.c: 22:     else
  5901                           
  5902                           
  5903                           ;lcd.c: 23:        RD5 = 0;
  5904     0A9F  1288               	bcf	8,5	;volatile
  5905     0AA0                     l20:
  5906                           
  5907                           ;lcd.c: 24:     if(c & 4)
  5908     0AA0  1D73               	btfss	LCD_Out@c,2
  5909     0AA1  2AA3               	goto	u4131
  5910     0AA2  2AA4               	goto	u4130
  5911     0AA3                     u4131:
  5912     0AA3  2AA6               	goto	l21
  5913     0AA4                     u4130:
  5914     0AA4                     l2902:
  5915                           
  5916                           ;lcd.c: 25:        RD6 = 1;
  5917     0AA4  1708               	bsf	8,6	;volatile
  5918     0AA5  2AA7               	goto	l22
  5919     0AA6                     l21:	
  5920                           ;lcd.c: 26:     else
  5921                           
  5922                           
  5923                           ;lcd.c: 27:        RD6 = 0;
  5924     0AA6  1308               	bcf	8,6	;volatile
  5925     0AA7                     l22:
  5926                           
  5927                           ;lcd.c: 28:     if(c & 8)
  5928     0AA7  1DF3               	btfss	LCD_Out@c,3
  5929     0AA8  2AAA               	goto	u4141
  5930     0AA9  2AAB               	goto	u4140
  5931     0AAA                     u4141:
  5932     0AAA  2AAD               	goto	l23
  5933     0AAB                     u4140:
  5934     0AAB                     l2904:
  5935                           
  5936                           ;lcd.c: 29:        RD7 = 1;
  5937     0AAB  1788               	bsf	8,7	;volatile
  5938     0AAC  2AAE               	goto	l25
  5939     0AAD                     l23:	
  5940                           ;lcd.c: 30:     else
  5941                           
  5942                           
  5943                           ;lcd.c: 31:        RD7 = 0;
  5944     0AAD  1388               	bcf	8,7	;volatile
  5945     0AAE                     l25:
  5946     0AAE  0008               	return
  5947     0AAF                     __end_of_LCD_Out:
  5948                           
  5949                           	psect	text19
  5950     0D07                     __ptext19:	
  5951 ;; *************** function _ISR *****************
  5952 ;; Defined at:
  5953 ;;		line 162 in file "main.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0, btemp+1
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5967 ;;      Params:         0       0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0
  5969 ;;      Temps:          3       0       0       0       0
  5970 ;;      Totals:         3       0       0       0       0
  5971 ;;Total ram usage:        3 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		Interrupt level 1
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980     0D07                     _ISR:	
  5981                           ;psect for function _ISR
  5982                           
  5983     0D07                     i1l2736:
  5984                           
  5985                           ;main.c: 164:     if(TMR0IF == 1)
  5986     0D07  1D0B               	btfss	11,2	;volatile
  5987     0D08  2D0A               	goto	u379_21
  5988     0D09  2D0B               	goto	u379_20
  5989     0D0A                     u379_21:
  5990     0D0A  2D8D               	goto	i1l358
  5991     0D0B                     u379_20:
  5992     0D0B                     i1l2738:
  5993                           
  5994                           ;main.c: 165:     {;main.c: 166:         antal++;
  5995     0D0B  3001               	movlw	1
  5996     0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  5997     0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  5998     0D0E  07E8               	addwf	_antal,f
  5999     0D0F  1803               	skipnc
  6000     0D10  0AE9               	incf	_antal+1,f
  6001     0D11  3000               	movlw	0
  6002     0D12  07E9               	addwf	_antal+1,f
  6003                           
  6004                           ;main.c: 167:         flag_update++;
  6005     0D13  3001               	movlw	1
  6006     0D14  07D6               	addwf	_flag_update,f
  6007     0D15  1803               	skipnc
  6008     0D16  0AD7               	incf	_flag_update+1,f
  6009     0D17  3000               	movlw	0
  6010     0D18  07D7               	addwf	_flag_update+1,f
  6011     0D19                     i1l2740:
  6012                           
  6013                           ;main.c: 169:         if(antal >= 1000)
  6014     0D19  0869               	movf	_antal+1,w
  6015     0D1A  3A80               	xorlw	128
  6016     0D1B  00FF               	movwf	btemp+1
  6017     0D1C  3083               	movlw	131
  6018     0D1D  027F               	subwf	btemp+1,w
  6019     0D1E  1D03               	skipz
  6020     0D1F  2D22               	goto	u380_25
  6021     0D20  30E8               	movlw	232
  6022     0D21  0268               	subwf	_antal,w
  6023     0D22                     u380_25:
  6024     0D22  1C03               	skipc
  6025     0D23  2D25               	goto	u380_21
  6026     0D24  2D26               	goto	u380_20
  6027     0D25                     u380_21:
  6028     0D25  2D58               	goto	i1l2762
  6029     0D26                     u380_20:
  6030     0D26                     i1l2742:
  6031                           
  6032                           ;main.c: 170:         {;main.c: 171:             sek++;
  6033     0D26  3001               	movlw	1
  6034     0D27  1283               	bcf	3,5	;RP0=0, select bank0
  6035     0D28  1303               	bcf	3,6	;RP1=0, select bank0
  6036     0D29  07E6               	addwf	_sek,f
  6037     0D2A  1803               	skipnc
  6038     0D2B  0AE7               	incf	_sek+1,f
  6039     0D2C  3000               	movlw	0
  6040     0D2D  07E7               	addwf	_sek+1,f
  6041     0D2E                     i1l2744:
  6042                           
  6043                           ;main.c: 172:             antal = 0;
  6044     0D2E  01E8               	clrf	_antal
  6045     0D2F  01E9               	clrf	_antal+1
  6046     0D30                     i1l2746:
  6047                           
  6048                           ;main.c: 173:             if (sek == 60){
  6049     0D30  303C               	movlw	60
  6050     0D31  0666               	xorwf	_sek,w
  6051     0D32  0467               	iorwf	_sek+1,w
  6052     0D33  1D03               	btfss	3,2
  6053     0D34  2D36               	goto	u381_21
  6054     0D35  2D37               	goto	u381_20
  6055     0D36                     u381_21:
  6056     0D36  2D58               	goto	i1l2762
  6057     0D37                     u381_20:
  6058     0D37                     i1l2748:
  6059                           
  6060                           ;main.c: 174:                 sek = 00;
  6061     0D37  01E6               	clrf	_sek
  6062     0D38  01E7               	clrf	_sek+1
  6063     0D39                     i1l2750:
  6064                           
  6065                           ;main.c: 175:                 min++;
  6066     0D39  3001               	movlw	1
  6067     0D3A  07E4               	addwf	_min,f
  6068     0D3B  1803               	skipnc
  6069     0D3C  0AE5               	incf	_min+1,f
  6070     0D3D  3000               	movlw	0
  6071     0D3E  07E5               	addwf	_min+1,f
  6072     0D3F                     i1l2752:
  6073                           
  6074                           ;main.c: 176:                 if (min == 60){
  6075     0D3F  303C               	movlw	60
  6076     0D40  0664               	xorwf	_min,w
  6077     0D41  0465               	iorwf	_min+1,w
  6078     0D42  1D03               	btfss	3,2
  6079     0D43  2D45               	goto	u382_21
  6080     0D44  2D46               	goto	u382_20
  6081     0D45                     u382_21:
  6082     0D45  2D58               	goto	i1l2762
  6083     0D46                     u382_20:
  6084     0D46                     i1l2754:
  6085                           
  6086                           ;main.c: 177:                     tim++;
  6087     0D46  3001               	movlw	1
  6088     0D47  07E2               	addwf	_tim,f
  6089     0D48  1803               	skipnc
  6090     0D49  0AE3               	incf	_tim+1,f
  6091     0D4A  3000               	movlw	0
  6092     0D4B  07E3               	addwf	_tim+1,f
  6093     0D4C                     i1l2756:
  6094                           
  6095                           ;main.c: 178:                     min = 00;
  6096     0D4C  01E4               	clrf	_min
  6097     0D4D  01E5               	clrf	_min+1
  6098     0D4E                     i1l2758:
  6099                           
  6100                           ;main.c: 179:                     if (tim == 24){
  6101     0D4E  3018               	movlw	24
  6102     0D4F  0662               	xorwf	_tim,w
  6103     0D50  0463               	iorwf	_tim+1,w
  6104     0D51  1D03               	btfss	3,2
  6105     0D52  2D54               	goto	u383_21
  6106     0D53  2D55               	goto	u383_20
  6107     0D54                     u383_21:
  6108     0D54  2D58               	goto	i1l351
  6109     0D55                     u383_20:
  6110     0D55                     i1l2760:
  6111                           
  6112                           ;main.c: 180:                         tim = 0;
  6113     0D55  01E2               	clrf	_tim
  6114     0D56  01E3               	clrf	_tim+1
  6115     0D57  2D58               	goto	i1l2762
  6116     0D58                     i1l351:	
  6117                           ;main.c: 183:             }
  6118                           
  6119     0D58                     i1l2762:
  6120                           
  6121                           ;main.c: 187:         if (flag != 0){
  6122     0D58  1283               	bcf	3,5	;RP0=0, select bank0
  6123     0D59  1303               	bcf	3,6	;RP1=0, select bank0
  6124     0D5A  085A               	movf	_flag,w
  6125     0D5B  045B               	iorwf	_flag+1,w
  6126     0D5C  1903               	btfsc	3,2
  6127     0D5D  2D5F               	goto	u384_21
  6128     0D5E  2D60               	goto	u384_20
  6129     0D5F                     u384_21:
  6130     0D5F  2D66               	goto	i1l2766
  6131     0D60                     u384_20:
  6132     0D60                     i1l2764:
  6133                           
  6134                           ;main.c: 188:             flag--;
  6135     0D60  30FF               	movlw	255
  6136     0D61  07DA               	addwf	_flag,f
  6137     0D62  1803               	skipnc
  6138     0D63  0ADB               	incf	_flag+1,f
  6139     0D64  30FF               	movlw	255
  6140     0D65  07DB               	addwf	_flag+1,f
  6141     0D66                     i1l2766:
  6142                           
  6143                           ;main.c: 190:         if (flag_2 != 0){
  6144     0D66  0879               	movf	_flag_2,w
  6145     0D67  047A               	iorwf	_flag_2+1,w
  6146     0D68  1903               	btfsc	3,2
  6147     0D69  2D6B               	goto	u385_21
  6148     0D6A  2D6C               	goto	u385_20
  6149     0D6B                     u385_21:
  6150     0D6B  2D72               	goto	i1l2770
  6151     0D6C                     u385_20:
  6152     0D6C                     i1l2768:
  6153                           
  6154                           ;main.c: 191:             flag_2--;
  6155     0D6C  30FF               	movlw	255
  6156     0D6D  07F9               	addwf	_flag_2,f
  6157     0D6E  1803               	skipnc
  6158     0D6F  0AFA               	incf	_flag_2+1,f
  6159     0D70  30FF               	movlw	255
  6160     0D71  07FA               	addwf	_flag_2+1,f
  6161     0D72                     i1l2770:
  6162                           
  6163                           ;main.c: 193:         if (flag_3 != 0){
  6164     0D72  0858               	movf	_flag_3,w
  6165     0D73  0459               	iorwf	_flag_3+1,w
  6166     0D74  1903               	btfsc	3,2
  6167     0D75  2D77               	goto	u386_21
  6168     0D76  2D78               	goto	u386_20
  6169     0D77                     u386_21:
  6170     0D77  2D7E               	goto	i1l2774
  6171     0D78                     u386_20:
  6172     0D78                     i1l2772:
  6173                           
  6174                           ;main.c: 194:             flag_3--;
  6175     0D78  30FF               	movlw	255
  6176     0D79  07D8               	addwf	_flag_3,f
  6177     0D7A  1803               	skipnc
  6178     0D7B  0AD9               	incf	_flag_3+1,f
  6179     0D7C  30FF               	movlw	255
  6180     0D7D  07D9               	addwf	_flag_3+1,f
  6181     0D7E                     i1l2774:
  6182                           
  6183                           ;main.c: 196:         if(flag_4 != 0){
  6184     0D7E  0854               	movf	_flag_4,w
  6185     0D7F  0455               	iorwf	_flag_4+1,w
  6186     0D80  1903               	btfsc	3,2
  6187     0D81  2D83               	goto	u387_21
  6188     0D82  2D84               	goto	u387_20
  6189     0D83                     u387_21:
  6190     0D83  2D8A               	goto	i1l2778
  6191     0D84                     u387_20:
  6192     0D84                     i1l2776:
  6193                           
  6194                           ;main.c: 197:             flag_4--;
  6195     0D84  30FF               	movlw	255
  6196     0D85  07D4               	addwf	_flag_4,f
  6197     0D86  1803               	skipnc
  6198     0D87  0AD5               	incf	_flag_4+1,f
  6199     0D88  30FF               	movlw	255
  6200     0D89  07D5               	addwf	_flag_4+1,f
  6201     0D8A                     i1l2778:
  6202                           
  6203                           ;main.c: 200:          TMR0IF = 0;
  6204     0D8A  110B               	bcf	11,2	;volatile
  6205                           
  6206                           ;main.c: 201:          TMR0 = 178;
  6207     0D8B  30B2               	movlw	178
  6208     0D8C  0081               	movwf	1	;volatile
  6209     0D8D                     i1l358:
  6210     0D8D  0872               	movf	??_ISR+2,w
  6211     0D8E  00FF               	movwf	btemp+1
  6212     0D8F  0871               	movf	??_ISR+1,w
  6213     0D90  008A               	movwf	10
  6214     0D91  0E70               	swapf	??_ISR,w
  6215     0D92  0083               	movwf	3
  6216     0D93  0EFE               	swapf	btemp,f
  6217     0D94  0E7E               	swapf	btemp,w
  6218     0D95  0009               	retfie
  6219     0D96                     __end_of_ISR:
  6220     007E                     btemp	set	126	;btemp
  6221     007E                     wtemp0	set	126
  6222                           
  6223                           	psect	intentry
  6224     0004                     __pintentry:	
  6225                           ;incstack = 0
  6226                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  6227                           
  6228     0004                     interrupt_function:
  6229     007E                     saved_w	set	btemp
  6230     0004  00FE               	movwf	btemp
  6231     0005  0E03               	swapf	3,w
  6232     0006  00F0               	movwf	??_ISR
  6233     0007  080A               	movf	10,w
  6234     0008  00F1               	movwf	??_ISR+1
  6235     0009  087F               	movf	btemp+1,w
  6236     000A  00F2               	movwf	??_ISR+2
  6237     000B  120A  158A  2D07   	ljmp	_ISR
  6238                           
  6239                           	psect	config
  6240                           
  6241                           ;Config register CONFIG @ 0x2007
  6242                           ;	Oscillator Selection bits
  6243                           ;	FOSC = HS, HS oscillator
  6244                           ;	Watchdog Timer Enable bit
  6245                           ;	WDTE = OFF, WDT disabled
  6246                           ;	Power-up Timer Enable bit
  6247                           ;	PWRTE = OFF, PWRT disabled
  6248                           ;	Brown-out Reset Enable bit
  6249                           ;	BOREN = OFF, BOR disabled
  6250                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6251                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6252                           ;	Data EEPROM Memory Code Protection bit
  6253                           ;	CPD = OFF, Data EEPROM code protection off
  6254                           ;	Flash Program Memory Write Enable bits
  6255                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6256                           ;	In-Circuit Debugger Mode bit
  6257                           ;	DEBUG = 0x1, unprogrammed default
  6258                           ;	Flash Program Memory Code Protection bit
  6259                           ;	CP = OFF, Code protection off
  6260     2007                     	org	8199
  6261     2007  3F3A               	dw	16186

Data Sizes:
    Strings     27
    Constant    10
    Data        5
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     52      80
    BANK1            80      2      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_4(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> a_str(BANK1[32]), str(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_6(CODE[2]), STR_5(CODE[2]), a_str(BANK1[32]), STR_3(CODE[4]), 
		 -> str(BANK1[32]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->___fltol
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    ___fltol->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_update
    _update->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7528
                                             51 BANK0      1     1      0
                                              0 BANK1      2     2      0
                           _LCD_Init
                            ___fldiv
                            ___fltol
                           ___xxtofl
                              _mode1
                              _mode2
                              _mode3
                             _setup2
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                              24    24      0    4279
                                             27 BANK0     24    24      0
                          _LCD_Write
                          _LCD_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    2824
                                              8 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            7     5      2     856
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             2     2      0     186
                                              4 COMMON     2     2      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _setup2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mode3                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mode2                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mode1                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                              7 COMMON     2     2      0
                                             36 BANK0      8     4      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1863
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     229
                                              7 COMMON     2     2      0
                                              0 BANK0      1     1      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     155
                                              4 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _mode1
   _mode2
   _mode3
   _setup2
   _update
     _LCD_Write
     _LCD_putrs
       _LCD_putc
         _LCD_Out
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      2      42       7       82.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9D      12        0.0%
ABS                  0      0      9D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 20 13:41:33 2022

           ___fldiv@aexp 0043             ___fldiv@bexp 0042                        pc 0002  
           ___fldiv@sign 003B                       l20 0AA0                       l21 0AA6  
                     l22 0AA7                       l23 0AAD                       l25 0AAE  
                     l17 0A96                       l18 0A99                       l42 0C82  
                     l19 0A9F                       l28 0A8C                       l44 0C8E  
                     l47 0B02                       l59 0B84                       fsr 0004  
    ___wmul@multiplicand 0075                      l201 0142                      l213 018C  
                    l225 01D6                      l162 0C19                      l156 07FD  
                    l237 0220                      l502 04DD                      l520 05B7  
                    l344 02EF                      l177 00AE                      l541 0ABB  
                    l189 00F8                      l543 0AD3                      l368 0F27  
                    l392 0744                      l537 0682                      l378 0FFF  
                    l394 0748                      l395 0749                      l813 0BCA  
                    l397 074D                      l734 0CF1                      l727 0D06  
                    l823 0B3E                      l399 07D0                      l912 04AA  
                    l737 0D06                      l914 04B8                      l906 0438  
                    l890 0346                      l892 04C2                      l980 0DFD  
                    l974 0DBA                      l976 0E4F                      l994 0A72  
                    l987 0E19                      l988 0E25                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RC1 0039                      _RB4 0034                      _RC3 003B  
                    _RB5 0035                      _RE0 0048                      _RB6 0036  
                    _RE1 0049                      _RB7 0037                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    _ISR 0D07                      _min 0064                      _sek 0066  
                    _tim 0062                      fsr0 0004                      _str 00A0  
                    indf 0000                     ?_ISR 0070          __end_of_LCD_Out 0AAF  
           ___fltol@exp1 0078                     l3000 0A7D                     l3002 0A80  
                   l3010 0B60                     l3004 0A89                     l3012 0B68  
                   l3100 0610                     l3020 04D4                     l3006 0B3F  
                   l3110 062E                     l3102 061C                     l3030 04F5  
                   l3022 04D9                     l3014 04C6                     l3008 0B44  
                   l3112 065C                     l3104 0622                     l3120 067E  
                   l3040 0535                     l3032 0505                     l3024 04DE  
                   l3016 04C9                     l3200 0081                     l3114 0661  
                   l3106 0627                     l3050 0570                     l3034 0509  
                   l3018 04CF                     l3210 00B3                     l3202 0087  
                   l3140 0C41                     l3132 0C1A                     l3116 0665  
                   l3108 062B                     l3052 0574                     l3036 051E  
                   l3044 0545                     l3028 04E2                     l3220 00DE  
                   l3212 00B9                     l3204 0094                     l3150 0C5F  
                   l3142 0C47                     l3134 0C23                     l3070 05AB  
                   l3062 057F                     l3054 0578                     l3046 0564  
                   l3038 0531                     l3118 066E                     l3310 0252  
                   l3230 0110                     l3222 00ED                     l3214 00C6  
                   l3206 00A3                     l3160 0C6A                     l3152 0C65  
                   l3144 0C4D                     l3136 0C29                     l3400 0F3F  
                   l3080 05D6                     l3072 05B1                     l3056 057D  
                   l3048 056C                     l3320 026E                     l3240 013C  
                   l3232 0115                     l3224 00F2                     l3216 00CB  
                   l3208 00A8                     l3154 0C69                     l3146 0C53  
                   l3138 0C38                     l3410 0F87                     l3402 0F49  
                   l3170 0BD5                     l3090 05F0                     l3082 05DC  
                   l3074 05C2                     l3066 059B                     l3330 0283  
                   l3306 0243                     l3250 0165                     l3242 0147  
                   l3234 011B                     l3226 00FD                     l3218 00D1  
                   l3148 0C59                     l3500 033C                     l3420 0FDA  
                   l3412 0F9C                     l3404 0F5E                     l3180 0BFE  
                   l3172 0BDB                     l3164 07EF                     l3092 05F4  
                   l3084 05E1                     l3076 05CE                     l3068 05A5  
                   l3340 0298                     l3324 0277                     l3308 024C  
                   l3260 0197                     l3252 0172                     l3244 014D  
                   l3236 0128                     l3228 0103                     l3502 033E  
                   l3430 0C9A                     l3422 0FE4                     l3414 0FA6  
                   l3406 0F68                     l3182 0C13                     l3174 0BF0  
                   l3166 0BCB                     l3086 05E5                     l3094 0601  
                   l3078 05D2                     l3342 02AE                     l3334 028C  
                   l3318 0258                     l3270 01CB                     l3262 01A4  
                   l3254 0181                     l3246 015A                     l3238 0137  
                   l3190 005C                     l3600 04B4                     l3520 0387  
                   l3504 034E                     l3512 0367                     l3440 0CBF  
                   l3424 0FF9                     l3416 0FBB                     l3408 0F7D  
                   l3184 0C17                     l3176 0BF4                     l3168 0BCF  
                   l3096 0607                     l3088 05EB                     l3360 02DA  
                   l3344 02B7                     l3280 01F3                     l3272 01D0  
                   l3264 01A9                     l3256 0186                     l3248 015F  
                   l3192 0066                     l3530 03A6                     l3522 038F  
                   l3514 036C                     l3506 035A                     l3450 0CCD  
                   l3442 0CC1                     l3434 0CA3                     l3610 0DA2  
                   l3370 0E67                     l3426 0FFB                     l3418 0FC5  
                   l3178 0BFC                     l3098 060C                     l3354 02CA  
                   l3346 02BE                     l3290 0225                     l3282 01F9  
                   l3274 01DB                     l3266 01AF                     l3258 0191  
                   l3194 006B                     l3186 0046                     l2900 0A9D  
                   l3540 03D8                     l3532 03B8                     l3524 0397  
                   l3508 035E                     l3460 0CF6                     l3444 0CC5  
                   l3452 0CDF                     l3436 0CB6                     l3428 0C8F  
                   l3620 0DCE                     l3612 0DB2                     l3380 0EAF  
                   l3372 0E71                     l3356 02D3                     l3292 022B  
                   l3284 0206                     l3276 01E1                     l3268 01BC  
                   l3188 0052                     l3196 006F                     l3700 0725  
                   l2902 0AA4                     l3550 03F9                     l3542 03D9  
                   l3534 03BC                     l3526 039F                     l3518 0375  
                   l3470 02FD                     l3462 0CFB                     l3438 0CB7  
                   l3630 0E04                     l3622 0DDB                     l3614 0DC2  
                   l3606 0D99                     l3390 0F02                     l3382 0EC4  
                   l3374 0E86                     l2910 0AE7                     l3366 02E6  
                   l3294 0231                     l3286 0215                     l3278 01EE  
                   l3198 007C                     l3710 073A                     l3702 072A  
                   l2904 0AAB                     l3560 0412                     l3552 03FB  
                   l3544 03E7                     l3536 03BD                     l3528 03A1  
                   l3480 0311                     l3472 02FE                     l3464 02F0  
                   l3640 0E3D                     l3632 0E0F                     l3624 0DE2  
                   l3608 0D9E                     l3392 0F0C                     l3384 0ECE  
                   l3376 0E90                     l3368 0E50                     l2920 0AFF  
                   l2912 0AEA                     l3296 0237                     l3288 021A  
                   l3720 07A1                     l3712 0741                     l3704 0731  
                   l3570 0435                     l3554 0404                     l3562 0418  
                   l3538 03C6                     l3546 03EB                     l3490 0328  
                   l3474 0303                     l3482 0313                     l3466 02F5  
                   l3458 0CE6                     l3642 0E42                     l3634 0E13  
                   l3626 0DE6                     l3618 0DCB                     l3394 0F21  
                   l3386 0EE3                     l3378 0EA5                     l2914 0AEE  
                   l2906 0AD5                     l2930 0A71                     l2922 0A62  
                   l3298 023D                     l3730 07E2                     l3722 07AE  
                   l3714 074E                     l3706 0737                     l3580 0454  
                   l3564 041C                     l3556 0408                     l3548 03F1  
                   l3492 0329                     l3484 031B                     l3476 0308  
                   l3468 02F9                     l3644 0E46                     l3636 0E1D  
                   l3628 0DF4                     l3396 0F23                     l3388 0EED  
                   l2916 0AF1                     l2908 0AD8                     l2940 0AC2  
                   l2924 0A63                     l3732 07E6                     l3724 07BD  
                   l3716 0758                     l3708 0739                     l3660 0688  
                   l3590 049D                     l3582 046D                     l3574 043D  
                   l3566 041D                     l3558 0409                     l3494 032E  
                   l3486 0320                     l3478 0310                     l3646 0E47  
                   l3638 0E27                     l3398 0F28                     l2918 0AF8  
                   l2950 0B89                     l2942 0AC9                     l2934 0AAF  
                   l2926 0A69                     l3726 07CC                     l3718 0799  
                   l3670 0699                     l3662 068B                     l3592 04A1  
                   l3576 0442                     l3584 0473                     l3568 0421  
                   l3496 0333                     l3488 0324                     l2960 0BA1  
                   l2952 0B8F                     l2944 0ACF                     l2936 0AB1  
                   l2928 0A6F                     l3728 07D3                     l3680 06C5  
                   l3672 069D                     l3664 068C                     l3594 04A9  
                   l3586 0480                     l3578 0450                     l3498 033B  
                   l2962 0BB2                     l2954 0B92                     l2970 0BC6  
                   l2938 0AB5                     l3682 06DA                     l3690 0703  
                   l3674 06A0                     l3666 068E                     l3658 0683  
                   l3596 04AE                     l3588 048E                     l2964 0BB8  
                   l2956 0B99                     l2948 0B85                     l2980 0B15  
                   l3692 0709                     l3684 06E2                     l3676 06A8  
                   l3668 0695                     l3598 04B2                     l2966 0BB9  
                   l2958 0B9D                     l2990 0B34                     l2982 0B19  
                   l2974 0B03                     l3774 04F0                     l3694 070E  
                   l3686 06F7                     l3678 06BD                     l2896 0A8E  
                   l2968 0BC0                     l2984 0B1D                     l2976 0B0B  
                   l2992 0B3A                     l3776 0559                     l3696 0717  
                   l3688 06FB                     l2898 0A92                     l2986 0B27  
                   l2978 0B0E                     l3698 071C                     l2996 0A74  
                   l2988 0B2D                     l2998 0A77                     STR_1 082D  
                   STR_2 081A                     STR_3 0829                     STR_4 081A  
                   STR_5 0831                     STR_6 0833                     u4110 0A92  
                   u4111 0A91                     u4120 0A9D                     u5000 0ED3  
                   u4121 0A9C                     u5001 0ED1                     u4130 0AA4  
                   u5010 0EDC                     u5002 0ED4                     u4210 0ACF  
                   u4131 0AA3                     u5011 0EDA                     u4211 0ACE  
                   u4140 0AAB                     u5020 0EE3                     u5012 0EDD  
                   u5100 0F38                     u4220 0B8F                     u4141 0AAA  
                   u5021 0EE2                     u5101 0F36                     u4221 0B8E  
                   u4205 0AC3                     u5030 0EF2                     u5110 0F3F  
                   u5102 0F39                     u4310 0B1D                     u5031 0EF0  
                   u5111 0F3E                     u4311 0B1C                     u5040 0EFB  
                   u5032 0EF3                     u5200 0F9C                     u5120 0F4E  
                   u4240 0BA1                     u4320 0B27                     u4160 0A69  
                   u4400 0545                     u6000 0737                     u5041 0EF9  
                   u5201 0F9B                     u5121 0F4C                     u4241 0BA0  
                   u4321 0B26                     u4305 0B0F                     u4161 0A68  
                   u4401 0544                     u6001 0736                     u5050 0F02  
                   u5042 0EFC                     u5210 0FAB                     u5130 0F57  
                   u5122 0F4F                     u4170 0A6F                     u4410 0574  
                   u6010 0748                     u5051 0F01                     u5211 0FA9  
                   u5131 0F55                     u4155 0ADB                     u4235 0B93  
                   u4171 0A6E                     u4411 0573                     u6011 0747  
                   u5300 0C9A                     u5060 0F11                     u5220 0FB4  
                   u5212 0FAC                     u5140 0F5E                     u5132 0F58  
                   u4260 0BB2                     u4340 0B3A                     u4180 0AB5  
                   u4500 0600                     u4420 059A                     u6020 074D  
                   u5301 0C99                     u5061 0F0F                     u5221 0FB2  
                   u5141 0F5D                     u4261 0BB1                     u4341 0B39  
                   u4325 0B23                     u4181 0AB4                     u4501 05FF  
                   u4421 0599                     u6021 074C                     u5310 0CB1  
                   u5070 0F1A                     u5062 0F12                     u5230 0FBB  
                   u5222 0FB5                     u5150 0F6D                     u4350 0B4E  
                   u4510 0607                     u4430 05A5                     u6030 07AE  
                   u5071 0F18                     u5231 0FBA                     u5151 0F6B  
                   u4255 0BA2                     u4335 0B2E                     u4511 0606  
                   u4431 05A4                     u6031 07AD                     u5400 02FD  
                   u5320 0CC5                     u5080 0F21                     u5072 0F1B  
                   u5240 0FCA                     u5160 0F76                     u5152 0F6E  
                   u4600 0BF0                     u4360 0B72                     u4280 0BC6  
                   u4520 061C                     u4440 05AB                     u6040 07BD  
                   u5401 02FC                     u5321 0CC4                     u5081 0F20  
                   u5241 0FC8                     u5161 0F74                     u4601 0BEF  
                   u4281 0BC5                     u4265 0BAE                     u4521 061B  
                   u4441 05AA                     u4425 0596                     u6041 07BC  
                   u5410 0303                     u5330 0CCC                     u5250 0FD3  
                   u5242 0FCB                     u5170 0F7D                     u5162 0F77  
                   u5090 0F2F                     u4610 0C03                     u4370 0B84  
                   u4290 0B0B                     u4530 0622                     u4450 05B1  
                   u6050 07CC                     u6107 0C1E                     u5411 0302  
                   u5331 0CCB                     u5315 0CAC                     u5251 0FD1  
                   u5171 0F7C                     u5091 0F2D                     u4611 0C01  
                   u4371 0B83                     u4275 0BBA                     u4291 0B0A  
                   u4195 0ABC                     u4531 0621                     u4451 05B0  
                   u6051 07CB                     u6035 07AA                     u5420 0308  
                   u5260 0FDA                     u5252 0FD4                     u5180 0F8C  
                   u5092 0F30                     u4620 0C0C                     u4612 0C04  
                   u4540 066E                     u4460 05C2                     u4380 04CF  
                   u4700 00A3                     u6060 07E2                     u6117 0C2D  
                   u5421 0307                     u5261 0FD9                     u5181 0F8A  
                   u4621 0C0A                     u4541 066D                     u4461 05C1  
                   u4381 04CE                     u4701 00A2                     u6061 07E1  
                   u6045 07B9                     u5510 03BC                     u5430 0328  
                   u5350 0CDE                     u5270 0FE9                     u5190 0F95  
                   u5182 0F8D                     u4630 0C13                     u4622 0C0D  
                   u4550 067E                     u4470 05D6                     u4390 0505  
                   u4710 00C6                     u6127 0C3C                     u5511 03BB  
                   u5431 0327                     u5351 0CDD                     u5271 0FE7  
                   u5191 0F93                     u4631 0C12                     u4551 067D  
                   u4471 05D5                     u4391 0504                     u4711 00C5  
                   u6055 07C8                     u5600 0421                     u5440 032E  
                   u5360 0CE5                     u5280 0FF2                     u5272 0FEA  
                   u5192 0F96                     u4480 05DC                     u4800 01A4  
                   u4720 00DE                     u4640 0052                     u6137 0A84  
                   u5601 0420                     u5505 03B1                     u5441 032D  
                   u5361 0CE4                     u5345 0CCE                     u5281 0FF0  
                   u4481 05DB                     u4465 05BE                     u4801 01A3  
                   u4721 00DD                     u4705 009F                     u4641 0051  
                   u6065 07DE                     u5610 0435                     u5530 03D8  
                   u5450 0333                     u5290 0FF9                     u5282 0FF3  
                   u4570 0BD5                     u4490 05EB                     u4810 01BC  
                   u4730 00ED                     u4650 005C                     u5611 0434  
                   u5531 03D7                     u5451 0332                     u5291 0FF8  
                   u4571 0BD4                     u4491 05EA                     u4811 01BB  
                   u4731 00EC                     u4715 00C2                     u4651 005B  
                   u5620 043C                     u5540 03F1                     u5460 034E  
                   u5380 0CF6                     u5700 0DA2                     u4900 0E67  
                   u4580 0BE0                     u4820 01CB                     u4740 0110  
                   u4660 0066                     u4565 0C6D                     u5621 043B  
                   u5541 03F0                     u5525 03BF                     u5461 034D  
                   u5381 0CF5                     u5701 0DA1                     u4901 0E66  
                   u4581 0BDE                     u4821 01CA                     u4805 01A0  
                   u4741 010F                     u4725 00DA                     u4661 0065  
                   u4645 004E                     u6077 073E                     u5630 0442  
                   u5550 03F9                     u5470 036C                     u5390 0CFB  
                   u5710 0DC2                     u4910 0E76                     u4590 0BE9  
                   u4582 0BE1                     u4830 01EE                     u4750 0128  
                   u4670 006B                     u5631 0441                     u5551 03F8  
                   u5535 03D4                     u5471 036B                     u5391 0CFA  
                   u5375 0CE8                     u5711 0DC1                     u4911 0E74  
                   u4591 0BE7                     u6087 0AEC                     u4831 01ED  
                   u4815 01B8                     u4751 0127                     u4735 00E9  
                   u4671 006A                     u4655 0058                     u5640 0454  
                   u5480 03A6                     u5800 0E32                     u4920 0E7F  
                   u4912 0E77                     u4592 0BEA                     u4840 0206  
                   u4760 0137                     u4680 007C                     u5641 0453  
                   u5481 03A5                     u4921 0E7D                     u6097 0AFD  
                   u4841 0205                     u4825 01C7                     u4761 0136  
                   u4745 010C                     u4681 007B                     u4665 0062  
                   u5650 0463                     u5570 0408                     u5810 0E42  
                   u5730 0DE1                     u4930 0E86                     u4922 0E80  
                   u4850 0215                     u4770 015A                     u4690 0094  
                   u5571 0407                     u5811 0E41                     u5731 0DE0  
                   u4931 0E85                     u4851 0214                     u4835 01EA  
                   u4771 0159                     u4755 0124                     u4691 0093  
                   u5660 0480                     u5820 0E46                     u4940 0E95  
                   u4860 02BE                     u4780 0172                     u5900 06DA  
                   u5661 047F                     u5565 03FD                     u5821 0E45  
                   u5805 0E2D                     u5725 0DD3                     u4941 0E93  
                   u4861 02BD                     u4845 0202                     u4781 0171  
                   u4765 0133                     u4685 0078                     u5901 06D9  
                   u5670 049D                     u5590 041C                     u5750 0E03  
                   u4950 0E9E                     u4942 0E96                     u4870 02DA  
                   u4790 0181                     u5910 06E7                     u5671 049C  
                   u5655 045E                     u5591 041B                     u5495 03A8  
                   u5751 0E02                     u4951 0E9C                     u4871 02D9  
                   u4855 0211                     u4791 0180                     u4775 0156  
                   u4695 0090                     u5911 06E5                     u5680 04B2  
                   u4960 0EA5                     u4952 0E9F                     u4880 0E57  
                   u5920 06F0                     u5912 06E8                     u5840 06A8  
                   u5681 04B1                     u5665 047C                     u5585 040B  
                   u5745 0DF5                     u4961 0EA4                     u4881 0E55  
                   u4785 016E                     u5921 06EE                     u5841 06A7  
                   u5770 0E13                     u5690 0D9E                     u4970 0EB4  
                   u4890 0E60                     u4882 0E58                     u5930 06F7  
                   u5922 06F1                     u5850 06AD                     u5675 0499  
                   u5771 0E12                     u5691 0D9D                     u4971 0EB2  
                   u4891 0E5E                     u4795 017D                     u5931 06F6  
                   u5851 06AB                     u5780 0E19                     u4980 0EBD  
                   u4972 0EB5                     u4892 0E61                     u5940 0701  
                   u5860 06B6                     u5852 06AE                     u5781 0E18  
                   u5765 0E08                     u4981 0EBB                     u5941 06FF  
                   u5861 06B4                     u5790 0E1D                     u4990 0EC4  
                   u4982 0EBE                     u5950 0702                     u5870 06BD  
                   u5862 06B7                     u5791 0E1C                     u4991 0EC3  
                   u5871 06BC                     u5960 0709                     u5880 06CA  
                   u5961 0708                     u5881 06C8                     u5970 0717  
                   u5890 06D3                     u5882 06CB                     u5971 0716  
                   u5891 06D1                     u5980 0725                     u5892 06D4  
                   u5981 0724                     u5990 0731                     u5991 0730  
                   _TMR0 0001                     _flag 005A                     _main 0683  
                   _mode 005C                     _tone 006A                     btemp 007E  
                   start 000E          ___fldiv@new_exp 003C              LCD_Init@cmd 0020  
                  ??_ISR 0070         __end_of_LCD_Init 0C8F         __end_of_LCD_putc 0B03  
          ___fltol@sign1 0077                    ?_main 0070          __end_of___fldiv 04C3  
        __end_of___fltol 0D07                    _CMCON 009C                    _T1CON 0010  
        __end_of___lwdiv 0BCB                    i1l351 0D58          __end_of___lwmod 0B3F  
                  i1l358 0D8D                    _TMR1H 000F                    _TMR1L 000E  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _a_min 0060                    _a_sek 006D  
                  _a_tim 005E                    _a_str 00C0                    _alarm 006F  
                  _antal 0068          __end_of_dpowers 081A                    _mode1 0E50  
                  _mode2 0F28                    _mode3 0BCB          __end_of_isdigit 0A73  
                  main@a 00E0                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0683          __initialization 0011  
           __end_of_main 07EF                   ??_main 0053                ??_LCD_Out 0073  
      __end_of_LCD_Write 0A8D        __end_of_LCD_putrs 0B85                   _ADCON1 009F  
                 ?_mode1 0070                   ?_mode2 0070                   ?_mode3 0070  
                 i1l2740 0D19                   i1l2750 0D39                   i1l2742 0D26  
                 i1l2760 0D55                   i1l2752 0D3F                   i1l2744 0D2E  
                 i1l2736 0D07                   i1l2770 0D72                   i1l2754 0D46  
                 i1l2746 0D30                   i1l2762 0D58                   i1l2738 0D0B  
                 i1l2772 0D78                   i1l2764 0D60                   i1l2756 0D4C  
                 i1l2748 0D37                   i1l2774 0D7E                   i1l2766 0D66  
                 i1l2758 0D4E                   i1l2776 0D84                   i1l2768 0D6C  
                 i1l2778 0D8A                   _INTCON 000B                   u380_20 0D26  
                 u380_21 0D25                   u380_25 0D22                   u381_20 0D37  
                 u381_21 0D36                   u382_20 0D46                   u382_21 0D45  
                 u383_20 0D55                   u383_21 0D54                   u384_20 0D60  
                 u384_21 0D5F                   u385_20 0D6C                   u385_21 0D6B  
                 u386_20 0D78                   u386_21 0D77                   u387_20 0D84  
                 u379_20 0D0B                   u387_21 0D83                   u379_21 0D0A  
                 _TMR0IF 005A         __end_of___xxtofl 0E50                   ___wmul 0AAF  
              ??___fldiv 0032                ??___fltol 0048                   _flag_2 0079  
                 _flag_3 0058                   _flag_4 0054                ??___lwdiv 0077  
              ??___lwmod 0078                   _setup2 07EF                   _update 0046  
              ??_isdigit 0073                   saved_w 007E                ??_sprintf 002F  
           ___xxtofl@arg 0026             ___xxtofl@exp 0025             ___xxtofl@val 0073  
__end_of__initialization 0042                ?_LCD_Init 0070                ?_LCD_putc 0070  
             ___fltol@f1 0044           __pcstackCOMMON 0070             __pidataBANK0 0A54  
          __end_of_mode1 0F28            __end_of_mode2 1000            __end_of_mode3 0C1A  
              LCD_putc@c 0075                  ??_mode1 0073                  ??_mode2 0073  
                ??_mode3 0073             sprintf@width 0037               __pbssBANK0 0054  
             __pbssBANK1 00A0               ??_LCD_Init 0077               ??_LCD_putc 0074  
             __pmaintext 0683                  ?___wmul 0073               __pintentry 0004  
                ?_setup2 0070                  ?_update 0070                  _LCD_Out 0A8D  
              ?___xxtofl 0073               __stringtab 0800                  ___fldiv 02F0  
                ___fltol 0C8F                  ___lwdiv 0B85                  ___lwmod 0B03  
                __ptext1 0046                  __ptext2 04C3                  __ptext3 0A61  
                __ptext4 0AAF                  __ptext5 0B03                  __ptext6 0B85  
                __ptext7 0B3F                  __ptext8 0AD4                  __ptext9 07EF  
              _T1CONbits 0010                  _dpowers 0810                  _isdigit 0A61  
             ??___xxtofl 0020                  _sprintf 04C3                  clrloop0 0A5A  
              _LCD_Write 0A73     end_of_initialization 0042                _LCD_putrs 0B3F  
             _update$141 003B               _update$150 004D               _update$142 003D  
             _update$151 004F               _update$143 003F               _update$152 0051  
             _update$144 0041               _update$145 0043               _update$146 0045  
             _update$147 0047               _update$148 0049               _update$149 004B  
          ___xxtofl@sign 0024              ___fldiv@grs 003E              ___fldiv@rem 0037  
             ?_LCD_Write 0070               ?_LCD_putrs 0076           __end_of___wmul 0AD4  
             LCD_Write@c 0076           __end_of_setup2 07FE           __end_of_update 02F0  
    start_initialization 0011              __end_of_ISR 0D96               LCD_putrs@a 0076  
             LCD_putrs@i 0023                 ??___wmul 0077              __pdataBANK0 006B  
               ??_setup2 0073                 ??_update 0079                ___fldiv@a 002A  
              ___fldiv@b 002E                 ?_LCD_Out 0070              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00E0  
               LCD_Out@c 0073              ??_LCD_Write 0074              ??_LCD_putrs 0020  
            sprintf@flag 0036              sprintf@prec 0033         ___lwdiv@dividend 0075  
               ?___fldiv 002A                 ?___fltol 0044                 ?___lwdiv 0073  
               ?___lwmod 0023                __pstrings 0800                 ?_isdigit 0070  
            _flag_update 0056         ___lwdiv@quotient 0021                 ?_sprintf 0028  
      interrupt_function 0004                 _LCD_Init 0C1A           ___wmul@product 0077  
              clear_ram0 0A59                 _LCD_putc 0AD4              __stringbase 080F  
      ___wmul@multiplier 0073       __end_of__stringtab 0810              _isdigit$659 0073  
             sprintf@val 0034                 ___xxtofl 0D96          ___lwdiv@divisor 0073  
        ___lwdiv@counter 0020                 __ptext10 0BCB                 __ptext11 0F28  
               __ptext12 0E50                 __ptext13 0D96                 __ptext14 0C8F  
               __ptext15 02F0                 __ptext16 0C1A                 __ptext17 0A73  
               __ptext18 0A8D                 __ptext19 0D07                 _hz_delay 006B  
               isdigit@c 0074                 intlevel1 0000                sprintf@ap 0032  
              sprintf@sp 0039         ___lwmod@dividend 0025                stringcode 080A  
             _OPTION_REG 0081                 sprintf@c 003A                 sprintf@f 0028  
        ___lwmod@divisor 0023          ___lwmod@counter 0027                 stringdir 080A  
               stringtab 0800  
