

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 09 12:53:46 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 04/07/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0010                     _T1CON	set	16
   232     0048                     _RE0	set	72
   233     0049                     _RE1	set	73
   234     0047                     _RD7	set	71
   235     0046                     _RD6	set	70
   236     0045                     _RD5	set	69
   237     0044                     _RD4	set	68
   238     0086                     _TRISB	set	134
   239     009F                     _ADCON1	set	159
   240     009C                     _CMCON	set	156
   241     0089                     _TRISE	set	137
   242     0088                     _TRISD	set	136
   243                           
   244                           	psect	strings
   245     0003                     __pstrings:
   246     0003                     stringtab:
   247     0003                     __stringtab:
   248     0003                     stringcode:	
   249                           ;	String table - string pointers are 1 byte each
   250                           
   251     0003                     stringdir:
   252     0003  3000               	movlw	high stringdir
   253     0004  008A               	movwf	10
   254     0005  0804               	movf	4,w
   255     0006  0A84               	incf	4,f
   256     0007  0782               	addwf	2,f
   257     0008                     __stringbase:
   258     0008  3400               	retlw	0
   259     0009                     __end_of__stringtab:
   260     0009                     STR_1:
   261     0009  3420               	retlw	32	;' '
   262     000A  3420               	retlw	32	;' '
   263     000B  3448               	retlw	72	;'H'
   264     000C  3445               	retlw	69	;'E'
   265     000D  344C               	retlw	76	;'L'
   266     000E  344C               	retlw	76	;'L'
   267     000F  344F               	retlw	79	;'O'
   268     0010  3420               	retlw	32	;' '
   269     0011  3457               	retlw	87	;'W'
   270     0012  344F               	retlw	79	;'O'
   271     0013  3452               	retlw	82	;'R'
   272     0014  344C               	retlw	76	;'L'
   273     0015  3444               	retlw	68	;'D'
   274     0016  3421               	retlw	33	;'!'
   275     0017  3420               	retlw	32	;' '
   276     0018  3420               	retlw	32	;' '
   277     0019  3400               	retlw	0
   278                           
   279                           	psect	cinit
   280     07FC                     start_initialization:	
   281                           ; #config settings
   282                           
   283     07FC                     __initialization:
   284     07FC                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287     07FC                     __end_of__initialization:
   288     07FC  0183               	clrf	3
   289     07FD  120A  118A  2F55   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	cstackCOMMON
   292     0070                     __pcstackCOMMON:
   293     0070                     ?_LCD_Init:
   294     0070                     ?_LCD_Write:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_LCD_putrs:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_LCD_Out:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ??_LCD_Out:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_LCD_putc:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     LCD_Out@c:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317     0070                     	ds	1
   318     0071                     ??_LCD_Write:
   319     0071                     ??_LCD_putc:	
   320                           ; 1 bytes @ 0x1
   321                           
   322                           
   323                           ; 1 bytes @ 0x1
   324     0071                     	ds	1
   325     0072                     LCD_putc@c:
   326                           
   327                           ; 1 bytes @ 0x2
   328     0072                     	ds	1
   329     0073                     ??_LCD_putrs:
   330     0073                     LCD_Write@c:	
   331                           ; 1 bytes @ 0x3
   332                           
   333     0073                     LCD_putrs@i:	
   334                           ; 1 bytes @ 0x3
   335                           
   336                           
   337                           ; 2 bytes @ 0x3
   338     0073                     	ds	1
   339     0074                     ??_LCD_Init:
   340                           
   341                           ; 1 bytes @ 0x4
   342     0074                     	ds	1
   343     0075                     LCD_putrs@a:
   344                           
   345                           ; 1 bytes @ 0x5
   346     0075                     	ds	1
   347     0076                     LCD_Init@cmd:
   348                           
   349                           ; 1 bytes @ 0x6
   350     0076                     	ds	1
   351     0077                     ??_main:
   352                           
   353                           	psect	maintext
   354     0755                     __pmaintext:	
   355                           ; 1 bytes @ 0x7
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 22 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  txt             4    0        unsigned char [4]
   366 ;;  a               2    0        int 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels required when called: 3
   382 ;; This function calls:
   383 ;;		_LCD_Init
   384 ;;		_LCD_Write
   385 ;;		_LCD_putrs
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     0755                     _main:	
   392                           ;psect for function _main
   393                           
   394     0755                     l816:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   397                           
   398                           
   399                           ;main.c: 24:     TRISD = 0x00;
   400     0755  1683               	bsf	3,5	;RP0=1, select bank1
   401     0756  1303               	bcf	3,6	;RP1=0, select bank1
   402     0757  0188               	clrf	8	;volatile
   403                           
   404                           ;main.c: 25:     TRISE = 0x00;
   405     0758  0189               	clrf	9	;volatile
   406     0759                     l818:
   407                           
   408                           ;main.c: 26:     CMCON = 0b00000111;
   409     0759  3007               	movlw	7
   410     075A  009C               	movwf	28	;volatile
   411     075B                     l820:
   412                           
   413                           ;main.c: 27:     ADCON1 = 0x4E;
   414     075B  304E               	movlw	78
   415     075C  009F               	movwf	31	;volatile
   416     075D                     l822:
   417                           
   418                           ;main.c: 28:     LCD_Init();
   419     075D  120A  118A  278B  120A  118A  	fcall	_LCD_Init
   420     0762                     l824:
   421                           
   422                           ;main.c: 31:     TRISB = 0b00010000;
   423     0762  3010               	movlw	16
   424     0763  1683               	bsf	3,5	;RP0=1, select bank1
   425     0764  1303               	bcf	3,6	;RP1=0, select bank1
   426     0765  0086               	movwf	6	;volatile
   427     0766                     l826:
   428                           
   429                           ;main.c: 32:     T1CON = 0x10;
   430     0766  3010               	movlw	16
   431     0767  1283               	bcf	3,5	;RP0=0, select bank0
   432     0768  1303               	bcf	3,6	;RP1=0, select bank0
   433     0769  0090               	movwf	16	;volatile
   434     076A                     l828:
   435     076A  3000               	movlw	0
   436     076B  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   437     0770                     l830:
   438     0770  3001               	movlw	1
   439     0771  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   440     0776                     l834:
   441     0776  300C               	movlw	12
   442     0777  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   443     077C  3000               	movlw	0
   444     077D  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   445     0782                     l840:
   446                           
   447                           ;main.c: 41:         LCD_putrs("  HELLO WORLD!  ");
   448     0782  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   449     0783  120A  118A  2701  120A  118A  	fcall	_LCD_putrs
   450     0788                     l43:
   451     0788  120A  118A  2800   	ljmp	start
   452     078B                     __end_of_main:
   453                           
   454                           	psect	text1
   455     0701                     __ptext1:	
   456 ;; *************** function _LCD_putrs *****************
   457 ;; Defined at:
   458 ;;		line 97 in file "lcd.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;  a               1    wreg     PTR const unsigned char 
   461 ;;		 -> STR_1(17), 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  a               1    5[COMMON] PTR const unsigned char 
   464 ;;		 -> STR_1(17), 
   465 ;;  i               2    3[COMMON] int 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         3       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         3       0       0       0       0
   479 ;;Total ram usage:        3 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 2
   482 ;; This function calls:
   483 ;;		_LCD_putc
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     0701                     _LCD_putrs:	
   490                           ;psect for function _LCD_putrs
   491                           
   492                           
   493                           ;incstack = 0
   494                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   495                           ;LCD_putrs@a stored from wreg
   496     0701  00F5               	movwf	LCD_putrs@a
   497     0702                     l808:
   498                           
   499                           ;lcd.c: 99:     for ( int i = 0; a[i] != '\0'; ++i ) {
   500     0702  01F3               	clrf	LCD_putrs@i
   501     0703  01F4               	clrf	LCD_putrs@i+1
   502     0704  2F18               	goto	l814
   503     0705                     l810:
   504                           
   505                           ;lcd.c: 100:         LCD_putc(a[i]);
   506     0705  0873               	movf	LCD_putrs@i,w
   507     0706  0775               	addwf	LCD_putrs@a,w
   508     0707  0084               	movwf	4
   509     0708  120A  118A  2003  120A  118A  	fcall	stringdir
   510     070D  120A  118A  2726  120A  118A  	fcall	_LCD_putc
   511     0712                     l812:
   512                           
   513                           ;lcd.c: 101:     }
   514     0712  3001               	movlw	1
   515     0713  07F3               	addwf	LCD_putrs@i,f
   516     0714  1803               	skipnc
   517     0715  0AF4               	incf	LCD_putrs@i+1,f
   518     0716  3000               	movlw	0
   519     0717  07F4               	addwf	LCD_putrs@i+1,f
   520     0718                     l814:
   521     0718  0873               	movf	LCD_putrs@i,w
   522     0719  0775               	addwf	LCD_putrs@a,w
   523     071A  0084               	movwf	4
   524     071B  120A  118A  2003  120A  118A  	fcall	stringdir
   525     0720  3A00               	xorlw	0
   526     0721  1D03               	skipz
   527     0722  2F24               	goto	u91
   528     0723  2F25               	goto	u90
   529     0724                     u91:
   530     0724  2F05               	goto	l810
   531     0725                     u90:
   532     0725                     l104:
   533     0725  0008               	return
   534     0726                     __end_of_LCD_putrs:
   535                           
   536                           	psect	text2
   537     0726                     __ptext2:	
   538 ;; *************** function _LCD_putc *****************
   539 ;; Defined at:
   540 ;;		line 72 in file "lcd.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  c               1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  c               1    2[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0
   556 ;;      Temps:          1       0       0       0       0
   557 ;;      Totals:         2       0       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 1
   561 ;; This function calls:
   562 ;;		_LCD_Out
   563 ;; This function is called by:
   564 ;;		_LCD_putrs
   565 ;;		_LCD_puts
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     0726                     _LCD_putc:	
   570                           ;psect for function _LCD_putc
   571                           
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _LCD_putc: [wreg+status,2+status,0+pclath+cstack]
   575                           ;LCD_putc@c stored from wreg
   576     0726  00F2               	movwf	LCD_putc@c
   577     0727                     l716:
   578                           
   579                           ;lcd.c: 74:     RE1 = 1;
   580     0727  1283               	bcf	3,5	;RP0=0, select bank0
   581     0728  1303               	bcf	3,6	;RP1=0, select bank0
   582     0729  1489               	bsf	9,1	;volatile
   583     072A                     l718:
   584                           
   585                           ;lcd.c: 75:     LCD_Out((c & 0xF0) >> 4);
   586     072A  0872               	movf	LCD_putc@c,w
   587     072B  00F1               	movwf	??_LCD_putc
   588     072C  3004               	movlw	4
   589     072D                     u55:
   590     072D  1003               	clrc
   591     072E  0CF1               	rrf	??_LCD_putc,f
   592     072F  3EFF               	addlw	-1
   593     0730  1D03               	skipz
   594     0731  2F2D               	goto	u55
   595     0732  0871               	movf	??_LCD_putc,w
   596     0733  390F               	andlw	15
   597     0734  120A  118A  26DF  120A  118A  	fcall	_LCD_Out
   598     0739                     l720:
   599                           
   600                           ;lcd.c: 77:     RE0 = 1;
   601     0739  1283               	bcf	3,5	;RP0=0, select bank0
   602     073A  1303               	bcf	3,6	;RP1=0, select bank0
   603     073B  1409               	bsf	9,0	;volatile
   604     073C                     l722:
   605                           
   606                           ;lcd.c: 78:     _delay((unsigned long)((40)*(10000000/4000000.0)));
   607     073C  3021               	movlw	33
   608     073D  00F1               	movwf	??_LCD_putc
   609     073E                     u107:
   610     073E  0BF1               	decfsz	??_LCD_putc,f
   611     073F  2F3E               	goto	u107
   612     0740                     l724:
   613                           
   614                           ;lcd.c: 79:     RE0 = 0;
   615     0740  1283               	bcf	3,5	;RP0=0, select bank0
   616     0741  1303               	bcf	3,6	;RP1=0, select bank0
   617     0742  1009               	bcf	9,0	;volatile
   618     0743                     l726:
   619                           
   620                           ;lcd.c: 81:     LCD_Out(c & 0x0F);
   621     0743  0872               	movf	LCD_putc@c,w
   622     0744  390F               	andlw	15
   623     0745  120A  118A  26DF  120A  118A  	fcall	_LCD_Out
   624     074A                     l728:
   625                           
   626                           ;lcd.c: 83:     RE0 = 1;
   627     074A  1283               	bcf	3,5	;RP0=0, select bank0
   628     074B  1303               	bcf	3,6	;RP1=0, select bank0
   629     074C  1409               	bsf	9,0	;volatile
   630                           
   631                           ;lcd.c: 84:     _delay((unsigned long)((40)*(10000000/4000000.0)));
   632     074D  3021               	movlw	33
   633     074E  00F1               	movwf	??_LCD_putc
   634     074F                     u117:
   635     074F  0BF1               	decfsz	??_LCD_putc,f
   636     0750  2F4F               	goto	u117
   637     0751                     l730:
   638                           
   639                           ;lcd.c: 85:     RE0 = 0;
   640     0751  1283               	bcf	3,5	;RP0=0, select bank0
   641     0752  1303               	bcf	3,6	;RP1=0, select bank0
   642     0753  1009               	bcf	9,0	;volatile
   643     0754                     l92:
   644     0754  0008               	return
   645     0755                     __end_of_LCD_putc:
   646                           
   647                           	psect	text3
   648     078B                     __ptext3:	
   649 ;; *************** function _LCD_Init *****************
   650 ;; Defined at:
   651 ;;		line 45 in file "lcd.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  cmd             1    6[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      _Bool 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0
   668 ;;      Totals:         3       0       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 2
   672 ;; This function calls:
   673 ;;		_LCD_Write
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679     078B                     _LCD_Init:	
   680                           ;psect for function _LCD_Init
   681                           
   682     078B                     l732:	
   683                           ;incstack = 0
   684                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   685                           
   686                           
   687                           ;lcd.c: 47:     _delay((unsigned long)((20)*(10000000/4000.0)));
   688     078B  3041               	movlw	65
   689     078C  00F5               	movwf	??_LCD_Init+1
   690     078D  30EE               	movlw	238
   691     078E  00F4               	movwf	??_LCD_Init
   692     078F                     u127:
   693     078F  0BF4               	decfsz	??_LCD_Init,f
   694     0790  2F8F               	goto	u127
   695     0791  0BF5               	decfsz	??_LCD_Init+1,f
   696     0792  2F8F               	goto	u127
   697     0793  0000               	nop
   698     0794                     l734:
   699                           
   700                           ;lcd.c: 50:     LCD_Write(0x03);
   701     0794  3003               	movlw	3
   702     0795  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   703     079A                     l736:
   704                           
   705                           ;lcd.c: 51:     _delay((unsigned long)((5)*(10000000/4000.0)));
   706     079A  3011               	movlw	17
   707     079B  00F5               	movwf	??_LCD_Init+1
   708     079C  303A               	movlw	58
   709     079D  00F4               	movwf	??_LCD_Init
   710     079E                     u137:
   711     079E  0BF4               	decfsz	??_LCD_Init,f
   712     079F  2F9E               	goto	u137
   713     07A0  0BF5               	decfsz	??_LCD_Init+1,f
   714     07A1  2F9E               	goto	u137
   715     07A2  0000               	nop
   716                           
   717                           ;lcd.c: 52:     LCD_Write(0x03);
   718     07A3  3003               	movlw	3
   719     07A4  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   720     07A9                     l738:
   721                           
   722                           ;lcd.c: 53:     _delay((unsigned long)((16)*(10000000/4000.0)));
   723     07A9  3034               	movlw	52
   724     07AA  00F5               	movwf	??_LCD_Init+1
   725     07AB  30F1               	movlw	241
   726     07AC  00F4               	movwf	??_LCD_Init
   727     07AD                     u147:
   728     07AD  0BF4               	decfsz	??_LCD_Init,f
   729     07AE  2FAD               	goto	u147
   730     07AF  0BF5               	decfsz	??_LCD_Init+1,f
   731     07B0  2FAD               	goto	u147
   732     07B1  2FB2               	nop2
   733     07B2                     l740:
   734                           
   735                           ;lcd.c: 54:     LCD_Write(0x03);
   736     07B2  3003               	movlw	3
   737     07B3  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   738     07B8                     l742:
   739                           
   740                           ;lcd.c: 57:     LCD_Write(0x02);
   741     07B8  3002               	movlw	2
   742     07B9  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   743     07BE                     l744:
   744     07BE  3002               	movlw	2
   745     07BF  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   746     07C4                     l746:
   747     07C4  3008               	movlw	8
   748     07C5  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   749     07CA                     l748:
   750     07CA  3000               	movlw	0
   751     07CB  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   752     07D0                     l750:
   753     07D0  3006               	movlw	6
   754     07D1  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   755     07D6                     l752:
   756     07D6  3008               	movlw	8
   757     07D7  00F6               	movwf	LCD_Init@cmd
   758     07D8                     l754:
   759     07D8  1576               	bsf	LCD_Init@cmd,2
   760     07D9                     l760:
   761     07D9  0876               	movf	LCD_Init@cmd,w
   762     07DA  00F4               	movwf	??_LCD_Init
   763     07DB  3004               	movlw	4
   764     07DC                     u65:
   765     07DC  1003               	clrc
   766     07DD  0CF4               	rrf	??_LCD_Init,f
   767     07DE  3EFF               	addlw	-1
   768     07DF  1D03               	skipz
   769     07E0  2FDC               	goto	u65
   770     07E1  0874               	movf	??_LCD_Init,w
   771     07E2  390F               	andlw	15
   772     07E3  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   773     07E8  0876               	movf	LCD_Init@cmd,w
   774     07E9  390F               	andlw	15
   775     07EA  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   776     07EF                     l87:	
   777                           ;lcd.c: 67:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while (
      +                           0 );
   778                           
   779     07EF  3000               	movlw	0
   780     07F0  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   781     07F5  3001               	movlw	1
   782     07F6  120A  118A  26C5  120A  118A  	fcall	_LCD_Write
   783     07FB                     l89:
   784     07FB  0008               	return
   785     07FC                     __end_of_LCD_Init:
   786                           
   787                           	psect	text4
   788     06C5                     __ptext4:	
   789 ;; *************** function _LCD_Write *****************
   790 ;; Defined at:
   791 ;;		line 34 in file "lcd.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  c               1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  c               1    3[COMMON] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0
   807 ;;      Temps:          2       0       0       0       0
   808 ;;      Totals:         3       0       0       0       0
   809 ;;Total ram usage:        3 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 1
   812 ;; This function calls:
   813 ;;		_LCD_Out
   814 ;; This function is called by:
   815 ;;		_main
   816 ;;		_LCD_Init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     06C5                     _LCD_Write:	
   821                           ;psect for function _LCD_Write
   822                           
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _LCD_Write: [wreg+status,2+status,0+pclath+cstack]
   826                           ;LCD_Write@c stored from wreg
   827     06C5  00F3               	movwf	LCD_Write@c
   828     06C6                     l706:
   829                           
   830                           ;lcd.c: 36:     RE1 = 0;
   831     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   832     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   833     06C8  1089               	bcf	9,1	;volatile
   834     06C9                     l708:
   835                           
   836                           ;lcd.c: 37:     LCD_Out(c);
   837     06C9  0873               	movf	LCD_Write@c,w
   838     06CA  120A  118A  26DF  120A  118A  	fcall	_LCD_Out
   839     06CF                     l710:
   840                           
   841                           ;lcd.c: 39:     RE0 = 1;
   842     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   843     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   844     06D1  1409               	bsf	9,0	;volatile
   845     06D2                     l712:
   846                           
   847                           ;lcd.c: 40:     _delay((unsigned long)((4)*(10000000/4000.0)));
   848     06D2  300D               	movlw	13
   849     06D3  00F2               	movwf	??_LCD_Write+1
   850     06D4  30FB               	movlw	251
   851     06D5  00F1               	movwf	??_LCD_Write
   852     06D6                     u157:
   853     06D6  0BF1               	decfsz	??_LCD_Write,f
   854     06D7  2ED6               	goto	u157
   855     06D8  0BF2               	decfsz	??_LCD_Write+1,f
   856     06D9  2ED6               	goto	u157
   857     06DA  2EDB               	nop2
   858     06DB                     l714:
   859                           
   860                           ;lcd.c: 41:     RE0 = 0;
   861     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   862     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   863     06DD  1009               	bcf	9,0	;volatile
   864     06DE                     l73:
   865     06DE  0008               	return
   866     06DF                     __end_of_LCD_Write:
   867                           
   868                           	psect	text5
   869     06DF                     __ptext5:	
   870 ;; *************** function _LCD_Out *****************
   871 ;; Defined at:
   872 ;;		line 15 in file "lcd.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  c               1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  c               1    0[COMMON] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         1       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         1       0       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_LCD_Write
   896 ;;		_LCD_putc
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     06DF                     _LCD_Out:	
   901                           ;psect for function _LCD_Out
   902                           
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _LCD_Out: [wreg]
   906                           ;LCD_Out@c stored from wreg
   907     06DF  00F0               	movwf	LCD_Out@c
   908     06E0                     l696:
   909                           
   910                           ;lcd.c: 16:     if(c & 1)
   911     06E0  1C70               	btfss	LCD_Out@c,0
   912     06E1  2EE3               	goto	u11
   913     06E2  2EE4               	goto	u10
   914     06E3                     u11:
   915     06E3  2EE8               	goto	l62
   916     06E4                     u10:
   917     06E4                     l698:
   918                           
   919                           ;lcd.c: 17:         RD4 = 1;
   920     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   921     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   922     06E6  1608               	bsf	8,4	;volatile
   923     06E7  2EEB               	goto	l63
   924     06E8                     l62:	
   925                           ;lcd.c: 18:      else
   926                           
   927                           
   928                           ;lcd.c: 19:         RD4 = 0;
   929     06E8  1283               	bcf	3,5	;RP0=0, select bank0
   930     06E9  1303               	bcf	3,6	;RP1=0, select bank0
   931     06EA  1208               	bcf	8,4	;volatile
   932     06EB                     l63:
   933                           
   934                           ;lcd.c: 20:      if(c & 2)
   935     06EB  1CF0               	btfss	LCD_Out@c,1
   936     06EC  2EEE               	goto	u21
   937     06ED  2EEF               	goto	u20
   938     06EE                     u21:
   939     06EE  2EF1               	goto	l64
   940     06EF                     u20:
   941     06EF                     l700:
   942                           
   943                           ;lcd.c: 21:         RD5 = 1;
   944     06EF  1688               	bsf	8,5	;volatile
   945     06F0  2EF2               	goto	l65
   946     06F1                     l64:	
   947                           ;lcd.c: 22:      else
   948                           
   949                           
   950                           ;lcd.c: 23:         RD5 = 0;
   951     06F1  1288               	bcf	8,5	;volatile
   952     06F2                     l65:
   953                           
   954                           ;lcd.c: 24:      if(c & 4)
   955     06F2  1D70               	btfss	LCD_Out@c,2
   956     06F3  2EF5               	goto	u31
   957     06F4  2EF6               	goto	u30
   958     06F5                     u31:
   959     06F5  2EF8               	goto	l66
   960     06F6                     u30:
   961     06F6                     l702:
   962                           
   963                           ;lcd.c: 25:         RD6 = 1;
   964     06F6  1708               	bsf	8,6	;volatile
   965     06F7  2EF9               	goto	l67
   966     06F8                     l66:	
   967                           ;lcd.c: 26:      else
   968                           
   969                           
   970                           ;lcd.c: 27:         RD6 = 0;
   971     06F8  1308               	bcf	8,6	;volatile
   972     06F9                     l67:
   973                           
   974                           ;lcd.c: 28:      if(c & 8)
   975     06F9  1DF0               	btfss	LCD_Out@c,3
   976     06FA  2EFC               	goto	u41
   977     06FB  2EFD               	goto	u40
   978     06FC                     u41:
   979     06FC  2EFF               	goto	l68
   980     06FD                     u40:
   981     06FD                     l704:
   982                           
   983                           ;lcd.c: 29:         RD7 = 1;
   984     06FD  1788               	bsf	8,7	;volatile
   985     06FE  2F00               	goto	l70
   986     06FF                     l68:	
   987                           ;lcd.c: 30:      else
   988                           
   989                           
   990                           ;lcd.c: 31:         RD7 = 0;
   991     06FF  1388               	bcf	8,7	;volatile
   992     0700                     l70:
   993     0700  0008               	return
   994     0701                     __end_of_LCD_Out:
   995     007E                     btemp	set	126	;btemp
   996     007E                     wtemp0	set	126
   997                           
   998                           	psect	config
   999                           
  1000                           ;Config register CONFIG @ 0x2007
  1001                           ;	Oscillator Selection bits
  1002                           ;	FOSC = HS, HS oscillator
  1003                           ;	Watchdog Timer Enable bit
  1004                           ;	WDTE = OFF, WDT disabled
  1005                           ;	Power-up Timer Enable bit
  1006                           ;	PWRTE = OFF, PWRT disabled
  1007                           ;	Brown-out Reset Enable bit
  1008                           ;	BOREN = OFF, BOR disabled
  1009                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1010                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1011                           ;	Data EEPROM Memory Code Protection bit
  1012                           ;	CPD = OFF, Data EEPROM code protection off
  1013                           ;	Flash Program Memory Write Enable bits
  1014                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1015                           ;	In-Circuit Debugger Mode bit
  1016                           ;	DEBUG = 0x1, unprogrammed default
  1017                           ;	Flash Program Memory Code Protection bit
  1018                           ;	CP = OFF, Code protection off
  1019     2007                     	org	8199
  1020     2007  3F3A               	dw	16186

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     393
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     3      0     213
                                              3 COMMON     3     3      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             2     2      0      90
                                              1 COMMON     2     2      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     105
                                              4 COMMON     3     3      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            3     3      0      75
                                              1 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putrs
     _LCD_putc
       _LCD_Out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 09 12:53:46 2022

                      pc 0002                       l43 0788                       l70 0700  
                     l62 06E8                       l63 06EB                       l64 06F1  
                     l65 06F2                       l73 06DE                       l66 06F8  
                     l67 06F9                       l68 06FF                       l92 0754  
                     l87 07EF                       l89 07FB                       u10 06E4  
                     u11 06E3                       u20 06EF                       u21 06EE  
                     u30 06F6                       u31 06F5                       u40 06FD  
                     u41 06FC                       u55 072D                       u65 07DC  
                     u90 0725                       u91 0724                       fsr 0004  
                    l104 0725                      l700 06EF                      l702 06F6  
                    l710 06CF                      l704 06FD                      l712 06D2  
                    l720 0739                      l714 06DB                      l706 06C6  
                    l730 0751                      l722 073C                      l810 0705  
                    l708 06C9                      l740 07B2                      l732 078B  
                    l724 0740                      l716 0727                      l812 0712  
                    l820 075B                      l750 07D0                      l742 07B8  
                    l734 0794                      l726 0743                      l718 072A  
                    l814 0718                      l830 0770                      l822 075D  
                    l760 07D9                      l752 07D6                      l744 07BE  
                    l736 079A                      l728 074A                      l808 0702  
                    l840 0782                      l824 0762                      l816 0755  
                    l754 07D8                      l746 07C4                      l738 07A9  
                    l834 0776                      l826 0766                      l818 0759  
                    l748 07CA                      l828 076A                      l696 06E0  
                    l698 06E4                      _RE0 0048                      _RE1 0049  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u107 073E                      u117 074F  
                    u127 078F                      u137 079E                      u147 07AD  
                    u157 06D6                      fsr0 0004          __end_of_LCD_Out 0701  
                   STR_1 0009                     _main 0755                     btemp 007E  
                   start 0000              LCD_Init@cmd 0076         __end_of_LCD_Init 07FC  
       __end_of_LCD_putc 0755                    ?_main 0070                    _CMCON 009C  
                  _T1CON 0010                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 078B  
                 ??_main 0077                ??_LCD_Out 0070        __end_of_LCD_Write 06DF  
      __end_of_LCD_putrs 0726                   _ADCON1 009F  __end_of__initialization 07FC  
              ?_LCD_Init 0070                ?_LCD_putc 0070           __pcstackCOMMON 0070  
              LCD_putc@c 0072               ??_LCD_Init 0074               ??_LCD_putc 0071  
             __pmaintext 0755                  _LCD_Out 06DF               __stringtab 0003  
                __ptext1 0701                  __ptext2 0726                  __ptext3 078B  
                __ptext4 06C5                  __ptext5 06DF                _LCD_Write 06C5  
   end_of_initialization 07FC                _LCD_putrs 0701               ?_LCD_Write 0070  
             ?_LCD_putrs 0070               LCD_Write@c 0073      start_initialization 07FC  
             LCD_putrs@a 0075               LCD_putrs@i 0073                 ?_LCD_Out 0070  
              ___latbits 0002                 LCD_Out@c 0070              ??_LCD_Write 0071  
            ??_LCD_putrs 0073                __pstrings 0003                 _LCD_Init 078B  
               _LCD_putc 0726              __stringbase 0008       __end_of__stringtab 0009  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
